(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (if  (i32.clz  (get_local $0)  (if  (get_local $0)   (i32.shr_s  (get_local $0)  (get_local $1))   (local "g348" f64)))   (get_local $1)   (i64.clz  (if  (i64.eqz  (if  (get_local $0)   (i32.div_u  (local "g351" f64)  (i32.shl  (get_local $0)  (if  (local "g352" f32)   (f64.convert_s/i32   (f64.ceil  (get_local $1)  (get_local $1)))   (i64.add  (local "g353" i32)  (f32.convert_s/i64   (f32.sub  (get_local $1)  (local "g355" i32)))))))   (local "g356" f32))  (f64.convert_s/i64   (f64.trunc  (get_local $1)  (local "g357" f32))))   (i32.eqz  (local "g358" i64)  (get_local $0))   (get_local $0))  (f32.convert_s/i64   (f32.ge  (local "g359" f64)  (get_local $1))))) (set_local $3  (get_local $1)) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )