(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.abs  (if  (get_local $0)   (get_local $1)   (i64.convert_s/f64   (i64.xor  (i64.clz  (get_local $0)  (if  (local "g33216" f64)   (f32.convert_s/i64   (f32.sqrt  (i32.convert_u/f32   (i32.mul  (get_local $1)  (get_local $1)))  (if  (get_local $1)   (get_local $1)   (i64.convert_s/f32   (i64.popcnt  (get_local $1)  (f32.convert_s/i64   (f32.floor  (f32.div  (if  (local "g34461" i32)   (get_local $1)   (if  (i64.convert_s/f32   (i64.rem_s  (local "g34462" i64)  (local "g34463" f32)))   (get_local $0)   (get_local $1)))  (i64.convert_u/f32   (i64.and  (f64.convert_s/i64   (f64.copysign  (local "g34464" f32)  (f64.min  (get_local $0)  (get_local $1))))  (f32.convert_u/i64   (f32.abs  (if  (get_local $1)   (local "g34465" i64)   (if  (get_local $1)   (local "g34466" f32)   (get_local $0)))  (i32.convert_u/f32   (i32.shr_s  (local "g34467" f64)  (local "g34468" i32))))))))  (i64.convert_u/f32   (i64.shr_u  (i32.or  (local "g34470" f32)  (i32.add  (if  (if  (i64.sub  (get_local $0)  (local "g34474" f32))   (get_local $1)   (f32.convert_s/i32   (f32.eq  (f64.neg  (get_local $1)  (get_local $1))  (get_local $1))))   (get_local $0)   (if  (get_local $0)   (local "g34477" f64)   (get_local $0)))  (i32.mul  (get_local $1)  (if  (i64.sub  (get_local $1)  (f64.convert_s/i64   (f64.max  (get_local $0)  (get_local $1))))   (f64.convert_s/i32   (f64.sqrt  (local "g34480" i32)  (get_local $1)))   (local "g34481" f32)))))  (f32.convert_u/i64   (f32.lt  (local "g34482" f32)  (get_local $0))))))))))))   (get_local $1)))  (if  (f64.convert_u/i64   (f64.le  (i32.convert_u/f64   (i32.xor  (local "g34541" f64)  (local "g34542" i64)))  (f64.max  (i64.convert_u/f64   (i64.div_s  (local "g34543" f64)  (get_local $1)))  (get_local $1))))   (get_local $0)   (local "g34544" i32)))))  (local "g34545" f64))) )