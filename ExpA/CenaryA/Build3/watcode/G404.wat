(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (if  (if  (if  (f32.convert_s/i32   (f32.ceil  (get_local $1)  (if  (i64.convert_u/f32   (i64.gt_u  (i32.eqz  (local "g409" i64)  (local "g410" i64))  (f32.convert_u/i64   (f32.sub  (get_local $1)  (i64.convert_s/f32   (i64.or  (get_local $1)  (get_local $0)))))))   (i64.convert_u/f32   (i64.xor  (get_local $1)  (get_local $1)))   (i32.convert_u/f32   (i32.xor  (i64.popcnt  (i64.or  (f32.convert_u/i64   (f32.add  (local "g414" i32)  (get_local $0)))  (get_local $1))  (get_local $1))  (local "g415" i64))))))   (if  (get_local $1)   (i32.shl  (get_local $0)  (get_local $1))   (get_local $1))   (get_local $0))   (get_local $1)   (get_local $1))   (get_local $1)   (if  (get_local $1)   (f32.convert_s/i32   (f32.lt  (get_local $1)  (i32.convert_u/f32   (i32.lt_u  (local "g416" i64)  (f64.convert_s/i32   (f64.sqrt  (if  (get_local $1)   (f64.neg  (i64.convert_u/f64   (i64.and  (if  (get_local $0)   (if  (get_local $1)   (get_local $0)   (f64.convert_u/i64   (f64.neg  (f64.ge  (i64.convert_s/f64   (i64.rem_s  (local "g425" f64)  (f32.convert_s/i64   (f32.sqrt  (f32.min  (if  (get_local $1)   (local "g431" f32)   (local "g432" f64))  (f64.min  (local "g433" f64)  (get_local $0)))  (local "g434" i32)))))  (get_local $0))  (i64.convert_s/f64   (i64.and  (local "g435" i32)  (f32.convert_s/i64   (f32.nearest  (get_local $0)  (get_local $1))))))))   (get_local $0))  (local "g442" f32)))  (f64.ge  (f32.floor  (get_local $0)  (get_local $0))  (if  (if  (get_local $0)   (local "g443" i64)   (i64.convert_u/f64   (i64.or  (get_local $1)  (get_local $0))))   (if  (get_local $1)   (get_local $0)   (get_local $1))   (get_local $0))))   (i64.convert_s/f64   (i64.ge_s  (i32.sub  (get_local $0)  (local "g444" i64))  (get_local $1))))  (get_local $1)))))))   (get_local $1))) (set_local $2  (get_local $0)) (set_local $3  (get_local $1)) (get_local $0)) )