(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (i64.le_u  (if  (f64.convert_u/i64   (f64.sqrt  (get_local $0)  (if  (i64.convert_s/f64   (i64.div_s  (if  (get_local $0)   (get_local $0)   (f32.convert_s/i64   (f32.lt  (get_local $0)  (local "g24912" i32))))  (get_local $1)))   (i64.convert_s/f64   (i64.rem_u  (get_local $1)  (if  (local "g24913" i32)   (get_local $0)   (f32.convert_u/i64   (f32.trunc  (get_local $1)  (i64.convert_s/f32   (i64.shr_s  (if  (if  (local "g24916" i64)   (get_local $0)   (get_local $1))   (local "g24917" i32)   (get_local $0))  (get_local $0))))))))   (get_local $1))))   (get_local $1)   (get_local $1))  (if  (if  (f32.convert_s/i64   (f32.max  (i32.convert_u/f32   (i32.ctz  (i32.ge_s  (i64.xor  (get_local $0)  (f32.convert_u/i64   (f32.abs  (get_local $1)  (if  (get_local $0)   (i64.convert_u/f32   (i64.and  (get_local $0)  (if  (if  (f64.convert_u/i64   (f64.sqrt  (i32.convert_s/f64   (i32.eqz  (get_local $1)  (get_local $1)))  (get_local $1)))   (local "g24927" f64)   (get_local $0))   (get_local $0)   (f32.convert_s/i64   (f32.le  (local "g24928" f32)  (get_local $0))))))   (if  (get_local $1)   (i32.convert_s/f32   (i32.ctz  (if  (f64.convert_u/i32   (f64.div  (i64.convert_s/f64   (i64.rotr  (get_local $1)  (get_local $1)))  (get_local $1)))   (f32.convert_s/i32   (f32.lt  (i64.convert_u/f32   (i64.ge_s  (if  (if  (get_local $1)   (f64.convert_u/i64   (f64.max  (local "g24931" i64)  (local "g25011" f64)))   (get_local $1))   (get_local $0)   (get_local $0))  (local "g25012" f64)))  (get_local $0)))   (i64.lt_s  (local "g25013" f32)  (local "g25014" f32)))  (get_local $0)))   (get_local $0))))))  (get_local $1))  (get_local $1)))  (local "g25015" i32)))   (get_local $0)   (i64.popcnt  (get_local $0)  (local "g25016" i64)))   (local "g25017" i32)   (i64.clz  (if  (local "g25019" i32)   (f64.convert_s/i64   (f64.mul  (i32.convert_s/f64   (i32.ge_s  (local "g25020" f32)  (get_local $1)))  (f64.le  (f32.copysign  (f32.sub  (if  (get_local $0)   (f64.sqrt  (local "g25021" f64)  (get_local $0))   (if  (get_local $0)   (get_local $0)   (f64.div  (f64.max  (local "g25023" f32)  (local "g25024" f32))  (get_local $1))))  (get_local $1))  (f64.floor  (i64.convert_u/f64   (i64.div_u  (local "g25025" f64)  (get_local $1)))  (get_local $0)))  (i32.convert_s/f64   (i32.sub  (get_local $1)  (get_local $1))))))   (f32.convert_u/i64   (f32.abs  (get_local $0)  (get_local $0))))  (get_local $0)))) (set_local $2  (get_local $0)) (get_local $0) (else  (i32.add  (get_local $2)  (get_local $3)))) )