(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (if  (f64.trunc  (f64.neg  (local "g27589" f32)  (f64.min  (if  (get_local $0)   (get_local $0)   (f64.nearest  (f32.le  (if  (i64.convert_s/f32   (i64.gt_s  (local "g27596" i32)  (if  (local "g27597" i32)   (f64.convert_u/i64   (f64.mul  (f32.floor  (local "g27598" i32)  (get_local $1))  (get_local $0)))   (f32.convert_u/i64   (f32.ceil  (local "g27599" i32)  (get_local $0))))))   (get_local $1)   (get_local $0))  (f64.gt  (f64.eq  (get_local $1)  (get_local $1))  (if  (f64.mul  (f64.gt  (get_local $1)  (i32.convert_u/f64   (i32.or  (get_local $0)  (get_local $1))))  (if  (local "g27600" i32)   (if  (get_local $0)   (f32.abs  (get_local $1)  (f32.ge  (i64.convert_s/f32   (i64.gt_s  (i32.div_u  (f64.convert_s/i32   (f64.trunc  (get_local $1)  (i64.convert_s/f64   (i64.ge_s  (get_local $1)  (get_local $1)))))  (local "g27608" i32))  (local "g27609" f64)))  (get_local $1)))   (if  (f64.nearest  (f32.abs  (get_local $0)  (local "g27618" f32))  (f32.ceil  (local "g27619" f64)  (i32.convert_u/f32   (i32.div_u  (i32.ge_u  (get_local $0)  (i64.gt_s  (if  (get_local $0)   (i64.and  (get_local $0)  (f32.convert_u/i64   (f32.neg  (get_local $1)  (local "g27625" i32))))   (f64.convert_u/i64   (f64.div  (get_local $1)  (get_local $0))))  (get_local $0)))  (i64.clz  (get_local $1)  (i32.shr_u  (local "g27655" i64)  (get_local $1)))))))   (local "g27656" f32)   (get_local $0)))   (get_local $0)))   (get_local $0)   (local "g27657" f32))))  (f32.trunc  (f32.mul  (get_local $1)  (local "g27661" i32))  (i64.convert_s/f32   (i64.clz  (local "g27662" f32)  (get_local $1))))))  (i32.convert_u/f64   (i32.lt_u  (get_local $1)  (get_local $0)))))  (get_local $1))   (f64.lt  (get_local $0)  (get_local $0))   (get_local $0))   (get_local $1)   (i32.div_s  (i32.rem_u  (if  (if  (get_local $1)   (local "g27665" f64)   (f32.convert_u/i32   (f32.ceil  (f64.copysign  (local "g27666" i32)  (get_local $0))  (get_local $0))))   (f64.convert_s/i32   (f64.nearest  (f32.sub  (get_local $1)  (get_local $0))  (get_local $1)))   (i32.xor  (get_local $1)  (get_local $0)))  (get_local $1))  (get_local $1))) (local "g12352" f32) (set_local $2  (get_local $0)) (set_local $3  (get_local $1)) (get_local $0)) )