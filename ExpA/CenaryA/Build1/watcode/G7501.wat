(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.convert_u/i32   (f64.mul  (local "g5065" f64)  (get_local $0))) (local $3 i32) (if  (get_local $0)   (if  (if  (f64.min  (i32.convert_s/f64   (i32.lt_s  (get_local $0)  (if  (get_local $0)   (f64.convert_s/i32   (f64.trunc  (get_local $1)  (f32.sub  (local "g7502" f64)  (get_local $1))))   (f32.convert_s/i32   (f32.eq  (i32.convert_s/f32   (i32.clz  (local "g7506" i64)  (local "g7507" f64)))  (f64.abs  (if  (get_local $1)   (local "g7508" i32)   (get_local $0))  (if  (get_local $1)   (get_local $0)   (get_local $1))))))))  (if  (get_local $0)   (get_local $1)   (i64.convert_s/f64   (i64.xor  (if  (get_local $0)   (i32.div_s  (if  (i32.and  (get_local $0)  (f64.convert_u/i32   (f64.trunc  (f32.ge  (get_local $1)  (local "g7511" f64))  (f64.max  (i32.convert_s/f64   (i32.and  (get_local $0)  (get_local $1)))  (get_local $1)))))   (local "g7513" i32)   (local "g7514" f64))  (local "g7515" f32))   (get_local $0))  (f32.convert_s/i64   (f32.ge  (if  (if  (i32.convert_u/f32   (i32.and  (if  (local "g7516" i64)   (get_local $0)   (get_local $0))  (f64.convert_u/i32   (f64.nearest  (get_local $1)  (f64.lt  (get_local $1)  (get_local $1))))))   (if  (get_local $1)   (get_local $0)   (if  (local "g7522" f32)   (get_local $0)   (get_local $0)))   (get_local $0))   (i32.convert_u/f32   (i32.or  (get_local $0)  (i64.clz  (local "g7523" f64)  (f64.convert_s/i64   (f64.add  (local "g7528" i32)  (local "g7529" f32))))))   (local "g7530" f64))  (f64.sub  (local "g7531" f64)  (get_local $0))))))))   (get_local $1)   (get_local $1))   (local "g7535" f32)   (f32.gt  (local "g7574" i64)  (get_local $1)))   (get_local $1)) (set_local $3  (get_local $1)) (local "g297" i32)) )