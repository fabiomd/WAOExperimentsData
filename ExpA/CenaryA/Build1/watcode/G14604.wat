(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.convert_u/i32   (f64.ne  (if  (i64.convert_u/f64   (i64.rotr  (get_local $1)  (local "g14607" i64)))   (f64.lt  (i64.convert_s/f64   (i64.xor  (get_local $0)  (i32.rotr  (local "g14609" i32)  (i64.lt_s  (local "g14610" i32)  (f64.convert_s/i64   (f64.ge  (i64.convert_s/f64   (i64.gt_u  (get_local $1)  (f64.convert_s/i64   (f64.trunc  (i32.convert_s/f64   (i32.clz  (f64.convert_s/i32   (f64.gt  (local "g14611" i64)  (i64.convert_u/f64   (i64.rotr  (i64.le_u  (get_local $1)  (f32.convert_u/i64   (f32.div  (i32.convert_u/f32   (i32.shr_s  (get_local $1)  (get_local $1)))  (get_local $1))))  (get_local $1)))))  (if  (get_local $0)   (local "g14678" f64)   (local "g14684" i64))))  (get_local $1)))))  (get_local $1)))))))  (f32.ge  (get_local $0)  (get_local $1)))   (get_local $0))  (f64.abs  (i32.convert_s/f64   (i32.mul  (i64.ge_s  (local "g14685" f32)  (i32.clz  (get_local $1)  (f64.convert_u/i32   (f64.sqrt  (get_local $1)  (i64.convert_s/f64   (i64.shl  (i64.ge_u  (local "g14688" f64)  (if  (i64.lt_u  (f64.convert_u/i64   (f64.ne  (get_local $0)  (i64.convert_s/f64   (i64.and  (i64.lt_u  (f32.convert_u/i64   (f32.ceil  (get_local $0)  (if  (local "g14690" f32)   (get_local $0)   (i32.convert_s/f32   (i32.add  (local "g14702" i32)  (i32.rotl  (get_local $0)  (i64.gt_u  (get_local $0)  (i64.rem_u  (get_local $0)  (f64.convert_u/i64   (f64.min  (local "g14703" i64)  (get_local $1)))))))))))  (get_local $0))  (get_local $1)))))  (i64.ne  (local "g14704" f32)  (get_local $0)))   (f32.convert_s/i64   (f32.le  (i32.convert_s/f32   (i32.gt_u  (local "g14705" f32)  (f64.convert_s/i32   (f64.sub  (local "g14706" f64)  (f32.ge  (i32.convert_u/f32   (i32.rem_s  (local "g14707" f32)  (if  (local "g14708" i64)   (f32.convert_s/i32   (f32.floor  (get_local $0)  (i64.convert_s/f32   (i64.div_u  (i32.shr_u  (local "g14709" i64)  (f64.convert_u/i32   (f64.le  (f64.sqrt  (f32.neg  (if  (local "g14710" i64)   (f64.gt  (local "g14711" i64)  (f64.ge  (get_local $1)  (if  (local "g14712" i32)   (get_local $1)   (local "g14713" i32))))   (i64.convert_s/f32   (i64.le_s  (local "g14714" i32)  (local "g14715" f32))))  (local "g14716" i32))  (get_local $0))  (local "g14717" i64))))  (get_local $1)))))   (i64.gt_s  (local "g14720" f64)  (get_local $0)))))  (get_local $0))))))  (if  (get_local $1)   (get_local $1)   (if  (get_local $1)   (get_local $1)   (i32.convert_u/f32   (i32.and  (get_local $1)  (local "g14722" f64)))))))   (get_local $1)))  (get_local $1)))))))  (f32.convert_u/i32   (f32.floor  (if  (get_local $1)   (get_local $0)   (f64.min  (local "g14726" i32)  (f32.sub  (get_local $0)  (if  (get_local $1)   (local "g14729" f32)   (local "g14730" i64)))))  (local "g14744" i32)))))  (get_local $0))))) )