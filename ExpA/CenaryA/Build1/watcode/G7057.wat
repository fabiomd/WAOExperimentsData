(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (i32.gt_s  (if  (i64.rotl  (get_local $0)  (get_local $1))   (f32.convert_u/i32   (f32.neg  (f64.copysign  (f64.sub  (if  (f64.ceil  (if  (i32.convert_s/f64   (i32.eq  (f64.convert_s/i32   (f64.ceil  (get_local $1)  (get_local $1)))  (i64.rem_u  (i64.le_u  (get_local $0)  (if  (get_local $0)   (get_local $1)   (get_local $0)))  (get_local $0))))   (get_local $0)   (get_local $0))  (get_local $1))   (i64.convert_s/f64   (i64.gt_s  (local "g7178" i64)  (local "g7179" i64)))   (get_local $0))  (if  (get_local $1)   (i64.convert_u/f64   (i64.div_s  (if  (local "g7182" i32)   (get_local $0)   (get_local $1))  (get_local $0)))   (local "g7184" i32)))  (get_local $0))  (f32.add  (get_local $1)  (if  (i64.convert_s/f32   (i64.rem_s  (local "g7185" f32)  (if  (i32.gt_u  (local "g7187" i64)  (get_local $1))   (i32.clz  (f32.convert_s/i32   (f32.mul  (local "g7188" i32)  (f32.eq  (local "g7189" i64)  (local "g7190" i64))))  (get_local $0))   (local "g7191" f64))))   (get_local $0)   (if  (get_local $1)   (get_local $1)   (get_local $0))))))   (get_local $0))  (f32.convert_u/i32   (f32.sqrt  (get_local $0)  (local "g7193" i32)))) (set_local $3  (get_local $1)) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )