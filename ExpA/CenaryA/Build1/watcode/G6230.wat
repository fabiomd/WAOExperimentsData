(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.neg  (f32.mul  (if  (get_local $1)   (i64.convert_u/f32   (i64.div_u  (local "g6238" i64)  (if  (i32.shr_u  (f32.convert_s/i32   (f32.add  (f64.ceil  (get_local $0)  (i32.convert_s/f64   (i32.ne  (local "g6464" i64)  (get_local $1))))  (i64.convert_u/f32   (i64.rotl  (get_local $0)  (local "g6465" f32)))))  (get_local $0))   (f64.convert_u/i64   (f64.le  (local "g6466" f64)  (get_local $1)))   (local "g6467" i32))))   (get_local $0))  (f32.div  (f64.ne  (get_local $0)  (get_local $1))  (i32.convert_s/f32   (i32.le_s  (f32.convert_s/i32   (f32.trunc  (f32.add  (local "g6468" f64)  (get_local $0))  (if  (i32.convert_u/f32   (i32.lt_u  (f64.convert_u/i32   (f64.add  (i64.convert_u/f64   (i64.eqz  (i64.div_u  (if  (i32.clz  (f64.convert_s/i32   (f64.sqrt  (get_local $1)  (i64.convert_s/f64   (i64.rotr  (f32.convert_u/i64   (f32.mul  (get_local $1)  (local "g6602" i64)))  (if  (get_local $1)   (get_local $1)   (i32.div_u  (get_local $1)  (i64.gt_u  (get_local $1)  (i64.clz  (local "g6603" i32)  (f64.convert_u/i64   (f64.sqrt  (get_local $0)  (f32.div  (get_local $1)  (get_local $1))))))))))))  (local "g6641" f64))   (i64.div_u  (local "g6642" f32)  (if  (f32.convert_s/i64   (f32.nearest  (get_local $1)  (i32.convert_s/f32   (i32.popcnt  (local "g6646" f32)  (local "g6647" f32)))))   (f64.convert_s/i64   (f64.mul  (get_local $0)  (local "g6648" i64)))   (get_local $0)))   (get_local $0))  (local "g6649" f64))  (i32.eq  (get_local $0)  (get_local $0))))  (get_local $0)))  (get_local $0)))   (local "g6650" f64)   (get_local $1))))  (if  (get_local $0)   (local "g6651" f64)   (get_local $1))))))  (i32.convert_u/f64   (i32.div_s  (local "g6652" i32)  (get_local $1)))) (get_local $0)) )