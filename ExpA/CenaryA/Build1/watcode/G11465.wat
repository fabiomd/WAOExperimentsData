(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i32.gt_u  (local "g11490" i64)  (if  (i32.eq  (get_local $0)  (local "g11535" f64))   (f64.convert_s/i32   (f64.mul  (f32.add  (i64.convert_u/f32   (i64.gt_s  (f64.convert_u/i64   (f64.sub  (local "g11581" f64)  (f64.gt  (get_local $1)  (f64.div  (f32.abs  (f64.trunc  (local "g11582" f64)  (get_local $0))  (i64.convert_u/f32   (i64.mul  (get_local $1)  (i64.rem_s  (local "g11583" i64)  (f32.convert_u/i64   (f32.nearest  (local "g11584" i32)  (f64.div  (get_local $1)  (get_local $1))))))))  (i32.convert_u/f64   (i32.div_u  (f32.convert_s/i32   (f32.ne  (f32.min  (get_local $1)  (i32.convert_s/f32   (i32.clz  (get_local $0)  (get_local $0))))  (get_local $1)))  (if  (f64.convert_s/i32   (f64.max  (get_local $0)  (i32.convert_s/f64   (i32.ge_u  (i64.div_u  (get_local $1)  (local "g11586" f32))  (get_local $0)))))   (local "g11587" i64)   (i32.div_u  (get_local $0)  (get_local $0)))))))))  (get_local $1)))  (if  (get_local $0)   (i32.convert_u/f32   (i32.le_u  (f32.convert_s/i32   (f32.ne  (get_local $1)  (get_local $0)))  (i32.eq  (f64.convert_s/i32   (f64.max  (i64.convert_s/f64   (i64.ctz  (local "g11591" f32)  (local "g11592" i64)))  (f32.max  (get_local $0)  (get_local $1))))  (if  (f32.convert_s/i32   (f32.gt  (get_local $1)  (get_local $0)))   (local "g11594" i64)   (local "g11595" i64)))))   (local "g11602" i64)))  (if  (f64.ne  (local "g11603" i64)  (get_local $0))   (f32.gt  (get_local $0)  (get_local $0))   (if  (get_local $0)   (local "g11935" i64)   (f64.trunc  (local "g11936" i64)  (get_local $0))))))   (get_local $1))) (i32.lt_s  (get_local $0)  (get_local $1))) )