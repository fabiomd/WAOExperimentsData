(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (set_local $2  (get_local $0)) (set_local $3  (get_local $1)) (if  (local "g6180" i64)   (i32.lt_s  (f32.convert_s/i32   (f32.sqrt  (i32.convert_s/f32   (i32.ge_s  (f64.convert_u/i32   (f64.ge  (f32.sub  (i32.convert_u/f32   (i32.eqz  (get_local $1)  (local "g6184" f64)))  (local "g6185" f64))  (get_local $0)))  (f64.convert_u/i32   (f64.max  (get_local $0)  (get_local $0)))))  (i64.convert_u/f32   (i64.clz  (get_local $1)  (f32.convert_s/i64   (f32.sqrt  (i32.convert_s/f32   (i32.rotr  (f32.convert_s/i32   (f32.max  (get_local $0)  (i64.convert_u/f32   (i64.rem_s  (f32.convert_u/i64   (f32.div  (get_local $1)  (get_local $1)))  (get_local $0)))))  (get_local $0)))  (f32.copysign  (i64.convert_s/f32   (i64.clz  (if  (get_local $1)   (get_local $0)   (if  (f32.convert_s/i64   (f32.trunc  (i32.convert_s/f32   (i32.add  (local "g6192" f32)  (local "g6193" i32)))  (get_local $1)))   (get_local $1)   (f64.convert_u/i64   (f64.min  (i64.convert_u/f64   (i64.lt_s  (get_local $0)  (f64.convert_s/i64   (f64.max  (get_local $0)  (get_local $0)))))  (get_local $0)))))  (get_local $0)))  (local "g6195" i64))))))))  (local "g6196" f32))   (get_local $1))) )