(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i64.and  (f32.convert_u/i64   (f32.sqrt  (i64.convert_s/f32   (i64.ne  (i32.or  (local "g152349" f32)  (local "g152350" f32))  (f32.convert_u/i64   (f32.abs  (i64.convert_u/f32   (i64.rotl  (i32.rem_u  (get_local $1)  (local "g152354" i64))  (get_local $1)))  (get_local $0)))))  (local "g152355" f32)))  (i32.shl  (if  (f32.convert_s/i32   (f32.eq  (if  (if  (i64.convert_u/f32   (i64.clz  (local "g152356" f64)  (local "g152357" f32)))   (if  (get_local $0)   (get_local $0)   (f32.min  (f32.le  (get_local $0)  (if  (get_local $1)   (get_local $0)   (get_local $0)))  (get_local $1)))   (if  (get_local $1)   (f64.le  (if  (local "g152359" f32)   (f64.ge  (i64.convert_s/f64   (i64.lt_u  (local "g152360" f32)  (i64.rem_s  (get_local $1)  (local "g152361" f32))))  (f32.nearest  (get_local $1)  (f64.mul  (get_local $1)  (if  (f64.sub  (i64.convert_u/f64   (i64.add  (get_local $0)  (f64.convert_s/i64   (f64.trunc  (get_local $0)  (get_local $1)))))  (local "g152362" f32))   (get_local $0)   (get_local $0)))))   (f32.min  (f64.ceil  (get_local $0)  (get_local $0))  (get_local $1)))  (get_local $0))   (get_local $0)))   (f32.floor  (local "g152365" i64)  (get_local $0))   (f32.copysign  (get_local $1)  (local "g152366" i64)))  (get_local $1)))   (get_local $1)   (get_local $0))  (if  (i32.shl  (if  (if  (get_local $0)   (f32.convert_s/i32   (f32.floor  (get_local $1)  (get_local $1)))   (get_local $1))   (i32.gt_u  (f32.convert_s/i32   (f32.sqrt  (if  (get_local $1)   (f64.div  (f64.gt  (i32.convert_s/f64   (i32.le_s  (local "g152450" f32)  (get_local $1)))  (if  (get_local $1)   (i32.convert_u/f64   (i32.rem_s  (i32.ge_u  (get_local $1)  (i64.popcnt  (get_local $1)  (get_local $0)))  (i32.shr_s  (get_local $0)  (i64.eqz  (if  (i32.add  (f32.convert_s/i32   (f32.trunc  (i32.convert_u/f32   (i32.ge_u  (i64.le_s  (get_local $0)  (i64.eq  (get_local $1)  (if  (local "g152451" f32)   (f32.convert_u/i64   (f32.div  (get_local $1)  (get_local $1)))   (get_local $1))))  (get_local $0)))  (get_local $0)))  (local "g152452" i64))   (i32.and  (get_local $0)  (if  (i64.ctz  (f64.convert_s/i64   (f64.add  (get_local $1)  (get_local $0)))  (i64.rem_u  (get_local $0)  (local "g152458" f32)))   (get_local $0)   (i64.le_u  (get_local $0)  (local "g152460" i64))))   (get_local $1))  (i64.ge_u  (i64.rem_u  (local "g152461" i32)  (get_local $1))  (f64.convert_s/i64   (f64.neg  (f32.lt  (get_local $0)  (get_local $0))  (get_local $1))))))))   (f32.eq  (if  (if  (get_local $0)   (i32.convert_s/f32   (i32.clz  (get_local $1)  (local "g152464" i64)))   (get_local $1))   (local "g152465" f64)   (local "g152466" f64))  (local "g152467" i32))))  (local "g152468" i64))   (local "g152469" f64))  (i32.convert_u/f32   (i32.le_u  (get_local $1)  (get_local $1)))))  (get_local $0))   (get_local $0))  (local "g152470" f32))   (get_local $0)   (local "g152471" i64))))) )