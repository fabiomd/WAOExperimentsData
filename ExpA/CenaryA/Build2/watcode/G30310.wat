(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (get_local $0) (if  (if  (f32.ge  (local "g30312" f64)  (f32.lt  (get_local $1)  (i64.convert_s/f32   (i64.clz  (get_local $0)  (if  (local "g30313" f64)   (get_local $0)   (local "g30314" i64))))))   (get_local $1)   (f32.ceil  (i32.convert_s/f32   (i32.rotl  (i64.mul  (if  (get_local $0)   (if  (get_local $1)   (f32.convert_u/i64   (f32.ge  (f64.ge  (local "g30315" i64)  (if  (f32.gt  (f32.neg  (i32.convert_u/f32   (i32.ctz  (local "g30316" f64)  (get_local $1)))  (get_local $1))  (get_local $0))   (get_local $1)   (f32.ceil  (i64.convert_u/f32   (i64.ctz  (f32.convert_s/i64   (f32.sqrt  (if  (get_local $0)   (get_local $0)   (i64.convert_s/f32   (i64.ctz  (if  (if  (f32.convert_s/i64   (f32.min  (local "g30318" i32)  (local "g30319" i32)))   (local "g30320" f64)   (get_local $1))   (get_local $1)   (get_local $0))  (if  (get_local $0)   (get_local $1)   (get_local $0)))))  (local "g30322" i64)))  (if  (get_local $1)   (get_local $1)   (get_local $1))))  (get_local $1))))  (get_local $0)))   (get_local $1))   (get_local $0))  (if  (local "g30324" i64)   (f64.convert_u/i64   (f64.add  (if  (local "g31024" f32)   (get_local $0)   (i64.convert_u/f64   (i64.eq  (get_local $0)  (get_local $1))))  (local "g31027" i64)))   (get_local $0)))  (i64.lt_u  (if  (i32.or  (get_local $0)  (get_local $0))   (if  (get_local $0)   (local "g31028" f32)   (get_local $0))   (get_local $0))  (f32.convert_u/i64   (f32.ne  (if  (i64.convert_s/f32   (i64.or  (get_local $1)  (get_local $1)))   (get_local $1)   (if  (get_local $1)   (get_local $1)   (f64.min  (i64.convert_s/f64   (i64.gt_u  (if  (f64.convert_u/i64   (f64.le  (get_local $1)  (local "g31033" f64)))   (get_local $0)   (i32.gt_u  (get_local $1)  (i32.rotl  (f32.convert_s/i32   (f32.trunc  (get_local $1)  (if  (i32.convert_u/f32   (i32.lt_s  (local "g31034" f64)  (f32.convert_s/i32   (f32.gt  (get_local $1)  (get_local $0)))))   (local "g31035" i64)   (local "g31036" f64))))  (get_local $1))))  (local "g31037" i32)))  (i64.convert_s/f64   (i64.lt_u  (f32.convert_s/i64   (f32.max  (f64.max  (local "g31060" f64)  (get_local $1))  (local "g31061" i32)))  (i64.gt_s  (i64.rotr  (i64.gt_u  (i64.lt_u  (if  (get_local $0)   (get_local $1)   (i64.clz  (local "g31065" i64)  (f64.convert_s/i64   (f64.ne  (f32.ne  (get_local $0)  (get_local $1))  (i64.convert_s/f64   (i64.xor  (local "g31124" f64)  (get_local $1)))))))  (i32.ge_u  (get_local $1)  (i64.eq  (f32.convert_u/i64   (f32.trunc  (get_local $0)  (get_local $0)))  (local "g31125" i32))))  (get_local $0))  (get_local $1))  (f32.convert_u/i64   (f32.abs  (get_local $0)  (get_local $1)))))))))  (f64.div  (i32.convert_u/f64   (i32.popcnt  (get_local $0)  (get_local $1)))  (get_local $1)))))))  (if  (get_local $0)   (if  (f64.trunc  (local "g31126" i32)  (get_local $0))   (get_local $1)   (f64.trunc  (get_local $0)  (get_local $0)))   (get_local $0))))   (f32.ge  (i32.convert_u/f32   (i32.add  (get_local $1)  (get_local $0)))  (local "g31127" f32))   (get_local $0))) )