(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.sub  (if  (if  (get_local $1)   (i64.convert_u/f32   (i64.rotr  (get_local $1)  (f32.convert_s/i64   (f32.copysign  (f32.sqrt  (i32.convert_s/f32   (i32.clz  (get_local $0)  (get_local $1)))  (i64.convert_u/f32   (i64.gt_u  (if  (get_local $0)   (f32.convert_u/i64   (f32.abs  (get_local $0)  (get_local $0)))   (i64.xor  (local "g32402" i64)  (f64.convert_s/i64   (f64.gt  (f32.trunc  (f32.ne  (get_local $1)  (get_local $1))  (get_local $0))  (i32.convert_u/f64   (i32.rotl  (f64.convert_u/i32   (f64.sub  (get_local $1)  (local "g32471" f32)))  (i32.eq  (f64.convert_s/i32   (f64.ne  (i32.convert_u/f64   (i32.eq  (f32.convert_s/i32   (f32.copysign  (get_local $1)  (get_local $1)))  (get_local $1)))  (i64.convert_u/f64   (i64.shr_s  (get_local $1)  (local "g32485" i32)))))  (i64.gt_s  (f64.convert_s/i64   (f64.sub  (i32.convert_u/f64   (i32.sub  (if  (if  (i64.div_u  (local "g32486" f64)  (f64.convert_u/i64   (f64.ge  (if  (get_local $1)   (local "g32487" i32)   (f32.eq  (i32.convert_u/f32   (i32.add  (i32.shr_s  (get_local $1)  (get_local $1))  (f64.convert_s/i32   (f64.eq  (f64.min  (local "g32488" i64)  (get_local $1))  (get_local $0)))))  (local "g32489" i64)))  (get_local $1))))   (local "g32490" i64)   (get_local $1))   (local "g32491" f64)   (local "g32492" f32))  (get_local $0)))  (get_local $0)))  (i64.eq  (f64.convert_u/i64   (f64.nearest  (f32.floor  (get_local $1)  (local "g32493" i32))  (get_local $1)))  (get_local $0))))))))))  (if  (i32.clz  (get_local $0)  (f64.convert_u/i32   (f64.floor  (local "g32494" i32)  (local "g32495" f32))))   (local "g32496" f32)   (get_local $1)))))  (get_local $0)))))   (get_local $1))   (local "g32497" f32)   (get_local $0))  (i32.convert_s/f32   (i32.ge_u  (get_local $1)  (local "g32498" i32))))) )