(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.convert_s/i32   (f64.sub  (get_local $1)  (f64.le  (f32.min  (i64.convert_u/f32   (i64.clz  (i32.sub  (get_local $0)  (f64.convert_s/i32   (f64.mul  (local "g15750" i64)  (local "g15751" i64))))  (i32.lt_s  (f64.convert_s/i32   (f64.eq  (i64.convert_u/f64   (i64.popcnt  (f32.convert_s/i64   (f32.ge  (get_local $1)  (get_local $0)))  (local "g15752" f32)))  (if  (get_local $1)   (get_local $1)   (f64.ge  (get_local $0)  (f32.abs  (i64.convert_s/f32   (i64.rem_u  (get_local $1)  (f32.convert_s/i64   (f32.mul  (i64.convert_s/f32   (i64.clz  (get_local $1)  (f32.convert_u/i64   (f32.floor  (local "g15822" f64)  (get_local $0)))))  (if  (f32.ceil  (get_local $1)  (get_local $0))   (if  (local "g15827" i64)   (local "g15828" f32)   (get_local $0))   (f32.le  (f64.le  (local "g15829" f64)  (f64.add  (i32.convert_u/f64   (i32.xor  (get_local $0)  (f64.convert_s/i32   (f64.div  (get_local $1)  (local "g15830" f32)))))  (get_local $0)))  (f64.le  (get_local $1)  (local "g15831" f32))))))))  (i64.convert_s/f32   (i64.clz  (i32.rotr  (get_local $0)  (i32.rem_u  (local "g15832" f32)  (get_local $0)))  (get_local $0))))))))  (local "g15833" i64))))  (f32.max  (get_local $1)  (get_local $1)))  (local "g15835" i32)))) (get_local $1) (get_local $1)) )