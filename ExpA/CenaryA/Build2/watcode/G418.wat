(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (set_local $2  (get_local $0)) (f64.convert_s/i32   (f64.gt  (f32.min  (if  (i32.convert_s/f32   (i32.lt_s  (f32.convert_u/i32   (f32.min  (f32.gt  (get_local $0)  (get_local $1))  (local "g419" i64)))  (local "g420" f32)))   (get_local $0)   (get_local $1))  (get_local $1))  (f64.sqrt  (if  (i32.convert_u/f64   (i32.eq  (f32.convert_u/i32   (f32.neg  (f32.div  (local "g422" i64)  (f32.floor  (local "g423" f64)  (get_local $1)))  (local "g426" i64)))  (get_local $0)))   (f64.neg  (i64.convert_s/f64   (i64.ge_s  (get_local $0)  (if  (f64.convert_u/i64   (f64.abs  (f64.div  (get_local $1)  (local "g427" f32))  (f32.max  (get_local $0)  (get_local $0))))   (get_local $1)   (get_local $0))))  (get_local $0))   (i64.convert_u/f64   (i64.div_s  (get_local $0)  (get_local $1))))  (local "g441" f64)))) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )