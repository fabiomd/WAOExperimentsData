(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (set_local $2  (get_local $0)) (i64.xor  (get_local $1)  (f64.convert_u/i64   (f64.copysign  (get_local $0)  (i64.convert_u/f64   (i64.eq  (f64.convert_u/i64   (f64.abs  (if  (get_local $0)   (get_local $1)   (get_local $1))  (i32.convert_u/f64   (i32.sub  (if  (if  (i32.lt_s  (local "g656" f64)  (f32.convert_u/i32   (f32.div  (get_local $0)  (local "g657" f64))))   (if  (get_local $1)   (if  (f32.convert_u/i32   (f32.abs  (get_local $1)  (f64.min  (local "g658" f64)  (i64.convert_u/f64   (i64.clz  (i32.add  (get_local $0)  (if  (i32.ne  (get_local $1)  (local "g660" f64))   (if  (local "g661" i64)   (if  (local "g662" f64)   (f64.convert_u/i32   (f64.trunc  (get_local $0)  (if  (get_local $0)   (get_local $0)   (i32.convert_u/f64   (i32.sub  (get_local $1)  (get_local $0))))))   (local "g664" f64))   (get_local $0))   (if  (get_local $0)   (local "g666" i64)   (if  (get_local $1)   (get_local $1)   (i32.gt_s  (get_local $1)  (get_local $0))))))  (local "g724" f32))))))   (local "g725" f32)   (get_local $1))   (get_local $0))   (get_local $1))   (get_local $1)   (i64.ne  (get_local $1)  (local "g726" f32)))  (f64.convert_u/i32   (f64.copysign  (local "g727" f32)  (local "g728" f64)))))))  (f64.convert_u/i64   (f64.ge  (get_local $1)  (local "g729" f64)))))))) (i64.mul  (get_local $0)  (local "g443" f64))) )