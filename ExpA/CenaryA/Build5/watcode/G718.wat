(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i32.lt_s  (local "g719" i64)  (f32.convert_s/i32   (f32.neg  (get_local $0)  (if  (if  (f64.ge  (local "g739" f32)  (i32.convert_s/f64   (i32.gt_s  (get_local $1)  (local "g774" f64))))   (f32.neg  (get_local $1)  (local "g778" f64))   (local "g779" i32))   (local "g780" f32)   (f64.abs  (f64.nearest  (local "g800" i32)  (i32.convert_s/f64   (i32.ge_s  (f64.convert_s/i32   (f64.max  (get_local $0)  (get_local $0)))  (if  (get_local $1)   (if  (get_local $1)   (get_local $1)   (local "g1004" i32))   (if  (i32.popcnt  (i32.add  (i64.gt_s  (if  (local "g1006" i32)   (local "g1007" f64)   (get_local $0))  (f64.convert_u/i64   (f64.copysign  (get_local $0)  (get_local $1))))  (if  (get_local $0)   (f64.convert_u/i32   (f64.neg  (f32.neg  (get_local $0)  (i64.convert_u/f32   (i64.shl  (if  (get_local $0)   (local "g1008" f32)   (get_local $1))  (get_local $0))))  (i64.convert_s/f64   (i64.or  (get_local $0)  (i32.shl  (local "g1012" f32)  (get_local $1))))))   (get_local $0)))  (f64.convert_u/i32   (f64.gt  (get_local $1)  (get_local $1))))   (local "g1013" f32)   (get_local $0))))))  (i32.convert_u/f64   (i32.ne  (i32.le_u  (get_local $1)  (local "g1014" f64))  (get_local $1)))))))) (local $3 i32) (set_local $2  (get_local $0)) (set_local $3  (get_local $1)) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )