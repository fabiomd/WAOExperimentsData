(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (f32.convert_u/i32   (f32.div  (f64.ge  (f64.mul  (local "g151974" f32)  (i32.convert_s/f64   (i32.popcnt  (get_local $1)  (get_local $0))))  (local "g151976" f64))  (i64.convert_s/f32   (i64.add  (i32.rem_u  (get_local $1)  (f32.convert_s/i32   (f32.mul  (get_local $1)  (get_local $1))))  (f64.convert_u/i64   (f64.abs  (get_local $0)  (i32.convert_s/f64   (i32.and  (f32.convert_s/i32   (f32.add  (if  (get_local $1)   (local "g151977" f32)   (f64.div  (get_local $0)  (local "g151978" i32)))  (if  (get_local $1)   (f64.floor  (local "g151985" i64)  (get_local $0))   (get_local $0))))  (if  (get_local $1)   (f32.convert_s/i32   (f32.max  (get_local $0)  (get_local $0)))   (f32.convert_s/i32   (f32.mul  (get_local $1)  (i64.convert_u/f32   (i64.clz  (get_local $0)  (i32.clz  (if  (get_local $0)   (get_local $1)   (local "g151986" f32))  (if  (get_local $1)   (f32.convert_u/i32   (f32.neg  (get_local $1)  (get_local $0)))   (if  (local "g151988" f32)   (get_local $1)   (i64.or  (if  (get_local $0)   (local "g151989" i32)   (get_local $1))  (i32.or  (if  (local "g151990" f32)   (f64.convert_s/i32   (f64.ge  (get_local $1)  (get_local $0)))   (local "g151991" f64))  (i32.ge_s  (f32.convert_u/i32   (f32.abs  (get_local $1)  (i32.convert_u/f32   (i32.or  (i64.clz  (get_local $1)  (get_local $0))  (get_local $0)))))  (get_local $0))))))))))))))))))))   (get_local $0)   (i32.lt_u  (local "g151992" f64)  (local "g151993" i64)))) )