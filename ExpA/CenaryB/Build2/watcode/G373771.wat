(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i64.rotl  (i64.gt_s  (local "g373773" f32)  (f32.convert_s/i64   (f32.trunc  (f32.abs  (f32.lt  (f64.div  (local "g373775" f64)  (local "g373776" f64))  (if  (get_local $0)   (f32.nearest  (f64.mul  (if  (local "g373782" f32)   (i32.convert_s/f64   (i32.ne  (i64.shr_s  (get_local $0)  (f64.convert_u/i64   (f64.mul  (get_local $1)  (local "g373783" i64))))  (if  (i32.popcnt  (i64.clz  (f64.convert_s/i64   (f64.neg  (f64.mul  (get_local $0)  (get_local $0))  (get_local $0)))  (i32.lt_s  (get_local $1)  (get_local $0)))  (get_local $1))   (f32.convert_u/i32   (f32.sub  (if  (get_local $0)   (local "g373785" i32)   (get_local $1))  (if  (local "g373786" i32)   (local "g373787" f64)   (get_local $0))))   (f64.convert_u/i32   (f64.ne  (f32.ge  (local "g373788" i32)  (f32.div  (get_local $0)  (local "g373789" f64)))  (f64.abs  (get_local $1)  (get_local $0)))))))   (local "g373801" i32))  (if  (get_local $0)   (get_local $0)   (i32.convert_u/f64   (i32.div_s  (get_local $0)  (i32.clz  (i32.clz  (get_local $0)  (i32.clz  (i64.xor  (get_local $0)  (local "g373803" f64))  (i64.add  (if  (i64.or  (i64.clz  (get_local $1)  (get_local $1))  (get_local $1))   (get_local $1)   (local "g373804" i64))  (if  (if  (local "g373805" f64)   (get_local $0)   (get_local $1))   (get_local $0)   (get_local $0)))))  (get_local $0))))))  (i64.convert_u/f32   (i64.clz  (get_local $1)  (i32.le_s  (get_local $1)  (i32.mul  (local "g373844" i32)  (f32.convert_s/i32   (f32.neg  (f32.floor  (local "g373845" i32)  (local "g373846" f64))  (local "g373847" f32))))))))   (get_local $1)))  (f64.mul  (get_local $0)  (local "g373848" f64)))  (f64.div  (get_local $0)  (get_local $1)))))  (get_local $0))) )