(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (if  (i32.gt_s  (get_local $1)  (local "g323650" f64))   (get_local $0)   (i32.and  (f64.convert_u/i32   (f64.sub  (if  (get_local $1)   (if  (f32.sub  (get_local $1)  (if  (get_local $1)   (i64.convert_u/f32   (i64.and  (i32.rem_u  (local "g323651" i32)  (get_local $1))  (i32.shr_s  (get_local $0)  (get_local $1))))   (f32.eq  (get_local $1)  (f32.lt  (get_local $0)  (i64.convert_s/f32   (i64.shr_u  (f32.convert_s/i64   (f32.abs  (i32.convert_s/f32   (i32.and  (get_local $0)  (i32.shr_s  (f32.convert_s/i32   (f32.ge  (local "g323652" i64)  (f64.sub  (get_local $1)  (if  (get_local $0)   (get_local $0)   (local "g323653" i32)))))  (local "g323654" f64))))  (get_local $1)))  (local "g323655" f64)))))))   (f64.abs  (f32.eq  (local "g323656" i64)  (get_local $1))  (local "g323657" f64))   (get_local $0))   (i32.convert_s/f64   (i32.shr_u  (if  (i32.rotl  (get_local $1)  (i64.lt_u  (get_local $0)  (get_local $0)))   (local "g323659" i32)   (get_local $1))  (f32.convert_s/i32   (f32.abs  (local "g323660" i64)  (get_local $0))))))  (i32.convert_u/f64   (i32.rem_u  (i64.eq  (if  (i32.ctz  (get_local $0)  (get_local $1))   (if  (f32.convert_s/i64   (f32.eq  (local "g323662" i32)  (get_local $0)))   (local "g323663" i64)   (get_local $1))   (i64.rotr  (get_local $1)  (get_local $1)))  (get_local $1))  (get_local $0)))))  (get_local $1))) (set_local $3  (get_local $1)) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )