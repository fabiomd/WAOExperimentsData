(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (i64.clz  (f64.convert_s/i64   (f64.sub  (f64.sub  (if  (f64.sub  (f64.sqrt  (get_local $1)  (local "g150911" f64))  (if  (get_local $1)   (get_local $0)   (get_local $1)))   (i64.convert_s/f64   (i64.lt_s  (f64.convert_u/i64   (f64.min  (f32.nearest  (if  (get_local $1)   (get_local $1)   (get_local $0))  (i64.convert_u/f32   (i64.div_s  (get_local $1)  (get_local $0))))  (f64.lt  (local "g150914" i64)  (i32.convert_u/f64   (i32.rotr  (get_local $0)  (get_local $0))))))  (get_local $0)))   (get_local $1))  (get_local $0))  (f32.lt  (get_local $0)  (get_local $1))))  (f32.convert_s/i64   (f32.ne  (if  (i32.convert_s/f32   (i32.popcnt  (local "g150921" i64)  (local "g150923" f32)))   (i64.convert_s/f32   (i64.ge_s  (get_local $1)  (get_local $1)))   (f32.div  (get_local $1)  (f32.eq  (f64.sub  (f64.mul  (local "g150925" i32)  (i64.convert_u/f64   (i64.shl  (local "g150926" f64)  (local "g150927" i64))))  (get_local $0))  (f32.div  (local "g150928" i32)  (i64.convert_s/f32   (i64.rem_s  (get_local $0)  (i64.sub  (local "g150929" i32)  (i32.and  (local "g150930" f32)  (local "g150931" f32)))))))))  (get_local $0)))) (set_local $2  (get_local $0)) (set_local $3  (get_local $1)) (get_local $0)) )