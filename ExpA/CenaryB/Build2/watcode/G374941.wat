(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.ge  (f64.neg  (if  (get_local $1)   (f32.div  (local "g374942" f64)  (i64.convert_s/f32   (i64.sub  (get_local $1)  (if  (get_local $1)   (if  (get_local $0)   (if  (i64.lt_u  (get_local $0)  (f64.convert_u/i64   (f64.eq  (if  (get_local $1)   (f64.ge  (local "g376556" i32)  (f32.div  (get_local $0)  (get_local $1)))   (get_local $1))  (i64.convert_u/f64   (i64.popcnt  (get_local $0)  (f32.convert_s/i64   (f32.nearest  (i64.convert_u/f32   (i64.add  (get_local $1)  (get_local $0)))  (get_local $1))))))))   (f32.convert_s/i64   (f32.max  (get_local $1)  (i64.convert_u/f32   (i64.or  (i64.add  (get_local $0)  (f64.convert_s/i64   (f64.max  (get_local $1)  (get_local $1))))  (f64.convert_u/i64   (f64.mul  (get_local $0)  (local "g376560" i64)))))))   (f64.convert_u/i64   (f64.ge  (i64.convert_s/f64   (i64.xor  (f32.convert_u/i64   (f32.sqrt  (get_local $1)  (get_local $0)))  (i32.lt_u  (get_local $0)  (local "g376562" i32))))  (get_local $1))))   (f32.convert_u/i64   (f32.neg  (get_local $1)  (get_local $0))))   (f32.convert_s/i64   (f32.abs  (get_local $0)  (get_local $1)))))))   (get_local $1))  (f32.floor  (get_local $1)  (get_local $1)))  (get_local $0))) )