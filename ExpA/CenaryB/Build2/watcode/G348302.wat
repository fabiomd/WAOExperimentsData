(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (if  (i64.rem_s  (get_local $1)  (i32.and  (get_local $0)  (local "g348303" i64)))   (if  (local "g348306" i32)   (local "g348307" f32)   (if  (get_local $1)   (if  (get_local $1)   (local "g348308" i32)   (get_local $1))   (if  (local "g348309" f64)   (local "g348310" i32)   (if  (f64.lt  (get_local $0)  (get_local $0))   (get_local $1)   (f64.mul  (f64.sqrt  (get_local $1)  (i64.convert_s/f64   (i64.eq  (get_local $1)  (get_local $0))))  (i32.convert_s/f64   (i32.clz  (i32.clz  (f64.convert_s/i32   (f64.ne  (f32.ne  (get_local $0)  (i32.convert_u/f32   (i32.le_s  (local "g348313" f64)  (get_local $0))))  (i32.convert_s/f64   (i32.ne  (get_local $1)  (get_local $0)))))  (get_local $1))  (get_local $0))))))))   (f32.nearest  (f64.ge  (if  (f64.copysign  (i32.convert_u/f64   (i32.xor  (local "g348315" i32)  (f32.convert_s/i32   (f32.add  (local "g348316" f32)  (if  (get_local $1)   (get_local $0)   (get_local $0))))))  (get_local $0))   (if  (get_local $0)   (i32.convert_s/f64   (i32.ne  (i64.le_s  (if  (local "g348318" i64)   (if  (i32.rem_u  (local "g348319" i64)  (local "g348320" f32))   (get_local $1)   (i32.mul  (get_local $1)  (i64.eqz  (i64.eqz  (if  (f32.convert_u/i64   (f32.floor  (get_local $1)  (local "g348321" f64)))   (local "g348322" f64)   (local "g348323" f64))  (f32.convert_u/i64   (f32.max  (if  (get_local $0)   (get_local $1)   (get_local $0))  (i32.convert_s/f32   (i32.div_u  (get_local $0)  (i32.le_u  (get_local $0)  (if  (get_local $1)   (get_local $1)   (get_local $0))))))))  (i32.rotl  (get_local $0)  (if  (get_local $1)   (f32.convert_s/i32   (f32.ne  (get_local $0)  (i32.convert_s/f32   (i32.ne  (get_local $0)  (f32.convert_u/i32   (f32.ne  (get_local $0)  (get_local $1)))))))   (local "g348325" i64))))))   (f64.convert_s/i64   (f64.nearest  (get_local $1)  (f32.eq  (f32.ceil  (i32.convert_s/f32   (i32.clz  (local "g348337" i32)  (get_local $1)))  (f32.trunc  (get_local $0)  (get_local $0)))  (get_local $0)))))  (if  (get_local $1)   (get_local $1)   (f64.convert_s/i64   (f64.max  (get_local $0)  (i64.convert_s/f64   (i64.shl  (i32.clz  (local "g348338" i64)  (if  (f64.convert_s/i32   (f64.le  (get_local $0)  (i64.convert_u/f64   (i64.shl  (i64.shr_u  (local "g348340" f64)  (i64.rotl  (get_local $0)  (local "g348342" f64)))  (local "g348343" f64)))))   (if  (if  (get_local $1)   (get_local $1)   (f32.convert_u/i32   (f32.copysign  (get_local $0)  (get_local $0))))   (if  (get_local $0)   (get_local $1)   (i32.rem_u  (get_local $0)  (get_local $0)))   (i32.rotl  (f32.convert_s/i32   (f32.trunc  (get_local $1)  (get_local $1)))  (f64.convert_s/i32   (f64.add  (get_local $1)  (i32.convert_u/f64   (i32.shr_u  (get_local $0)  (f32.convert_u/i32   (f32.ge  (get_local $0)  (get_local $0)))))))))   (get_local $1)))  (i32.clz  (get_local $1)  (i32.or  (i64.ge_u  (i32.clz  (get_local $0)  (i32.shr_s  (i64.le_s  (f32.convert_u/i64   (f32.nearest  (local "g348344" i64)  (get_local $1)))  (get_local $0))  (i32.eq  (get_local $1)  (get_local $1))))  (f32.convert_u/i64   (f32.sub  (get_local $0)  (if  (i32.convert_u/f32   (i32.gt_u  (get_local $1)  (get_local $1)))   (local "g348395" f64)   (i32.convert_u/f32   (i32.sub  (f32.convert_s/i32   (f32.trunc  (local "g348396" f64)  (local "g348397" i32)))  (get_local $1)))))))  (f32.convert_s/i32   (f32.ne  (i64.convert_s/f32   (i64.lt_s  (f64.convert_s/i64   (f64.trunc  (get_local $0)  (i32.convert_u/f64   (i32.div_u  (get_local $0)  (get_local $0)))))  (if  (get_local $1)   (if  (get_local $0)   (i32.gt_u  (get_local $0)  (get_local $0))   (get_local $0))   (i32.shl  (if  (get_local $1)   (f32.convert_s/i32   (f32.div  (get_local $1)  (get_local $1)))   (get_local $0))  (i32.eqz  (local "g349581" f32)  (get_local $1))))))  (get_local $1)))))))))))  (local "g349583" i32)))   (f64.le  (get_local $1)  (get_local $1)))   (if  (get_local $0)   (get_local $0)   (i32.convert_s/f64   (i32.le_u  (local "g349584" i32)  (local "g349585" i64)))))  (get_local $1))  (f32.eq  (if  (f32.add  (if  (f32.floor  (get_local $1)  (get_local $0))   (local "g349586" i32)   (get_local $1))  (get_local $0))   (get_local $0)   (local "g349594" f64))  (if  (f32.neg  (if  (i64.convert_s/f32   (i64.lt_u  (f64.convert_s/i64   (f64.min  (if  (get_local $1)   (get_local $1)   (local "g349596" i64))  (get_local $0)))  (if  (local "g349601" i32)   (local "g349602" f32)   (local "g349603" i64))))   (local "g349604" i64)   (get_local $0))  (get_local $0))   (local "g349606" f32)   (i64.convert_u/f32   (i64.ctz  (i32.clz  (f32.convert_s/i32   (f32.min  (get_local $0)  (if  (get_local $1)   (get_local $0)   (get_local $0))))  (get_local $1))  (get_local $1)))))))   (get_local $1)   (local "g349607" f32))) )