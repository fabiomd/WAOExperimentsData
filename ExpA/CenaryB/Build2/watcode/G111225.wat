(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.le  (get_local $1)  (if  (if  (i32.convert_u/f32   (i32.le_s  (f32.convert_s/i32   (f32.copysign  (f32.trunc  (get_local $0)  (i32.convert_s/f32   (i32.rem_s  (local "g111230" i64)  (i64.lt_s  (get_local $1)  (i32.lt_s  (f64.convert_u/i32   (f64.ne  (f32.min  (f64.sub  (get_local $1)  (local "g111236" f32))  (i64.convert_s/f32   (i64.or  (get_local $0)  (if  (get_local $0)   (get_local $0)   (i64.ge_s  (get_local $1)  (i64.rotl  (get_local $1)  (if  (local "g111237" f64)   (i32.shr_s  (get_local $0)  (if  (local "g111239" f32)   (if  (get_local $1)   (local "g111240" f64)   (get_local $1))   (i32.rem_s  (local "g111241" i64)  (if  (if  (i64.le_s  (get_local $0)  (local "g111243" i32))   (get_local $0)   (get_local $0))   (get_local $1)   (local "g111244" i64)))))   (get_local $0))))))))  (get_local $1)))  (get_local $1))))))  (i64.convert_u/f32   (i64.rotr  (local "g111245" f32)  (get_local $0)))))  (get_local $1)))   (i64.convert_s/f32   (i64.div_u  (local "g111246" f64)  (if  (if  (get_local $1)   (i32.ge_u  (i64.mul  (f32.convert_s/i64   (f32.ceil  (if  (f64.trunc  (i32.convert_u/f64   (i32.shr_s  (if  (i64.or  (get_local $1)  (get_local $1))   (i32.le_s  (get_local $0)  (local "g111291" f32))   (get_local $1))  (local "g111292" i64)))  (get_local $0))   (get_local $0)   (local "g111295" i32))  (get_local $0)))  (if  (get_local $1)   (get_local $0)   (local "g111296" i32)))  (i32.mul  (if  (f32.convert_u/i32   (f32.abs  (get_local $0)  (get_local $0)))   (get_local $1)   (get_local $0))  (local "g111297" f64)))   (local "g111298" f32))   (local "g111299" i64)   (local "g111300" f64))))   (f32.div  (i64.convert_s/f32   (i64.rotr  (get_local $1)  (if  (local "g111301" i64)   (get_local $1)   (f64.convert_s/i64   (f64.mul  (f64.max  (local "g111302" i64)  (get_local $0))  (get_local $1))))))  (i64.convert_s/f32   (i64.shr_u  (get_local $0)  (i64.div_u  (f32.convert_u/i64   (f32.lt  (f64.nearest  (f32.min  (i32.convert_s/f32   (i32.rem_s  (get_local $1)  (local "g111324" f32)))  (f32.le  (i64.convert_s/f32   (i64.and  (if  (get_local $0)   (local "g111330" i32)   (local "g111331" f32))  (get_local $0)))  (i32.convert_u/f32   (i32.clz  (f32.convert_u/i32   (f32.sub  (get_local $0)  (local "g111332" i32)))  (get_local $0)))))  (get_local $1))  (f32.add  (local "g111333" f32)  (local "g111334" f64))))  (get_local $1))))))   (i32.convert_u/f32   (i32.gt_s  (i64.clz  (get_local $0)  (f64.convert_u/i64   (f64.sqrt  (local "g111335" i64)  (get_local $1))))  (i64.div_u  (get_local $1)  (f32.convert_s/i64   (f32.ge  (f64.le  (f32.trunc  (i64.convert_u/f32   (i64.clz  (get_local $1)  (f32.convert_s/i64   (f32.max  (get_local $0)  (get_local $1)))))  (get_local $0))  (f64.min  (get_local $0)  (local "g111336" i32)))  (get_local $1))))))   (get_local $0))) (local "g111188" f64)) )