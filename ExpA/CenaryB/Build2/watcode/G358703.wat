(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i64.ctz  (f64.convert_s/i64   (f64.div  (f64.sqrt  (local "g358704" i32)  (f32.eq  (local "g358705" i64)  (if  (get_local $0)   (i64.convert_s/f32   (i64.ne  (i32.div_u  (get_local $0)  (get_local $1))  (i64.ne  (get_local $1)  (local "g358706" f64))))   (i64.convert_u/f32   (i64.or  (get_local $0)  (f64.convert_u/i64   (f64.sub  (get_local $1)  (if  (get_local $0)   (i64.convert_u/f64   (i64.add  (get_local $0)  (i32.rotr  (f32.convert_s/i32   (f32.copysign  (f32.floor  (get_local $0)  (get_local $0))  (if  (get_local $0)   (if  (get_local $0)   (i32.convert_s/f32   (i32.ne  (i64.shl  (get_local $0)  (get_local $0))  (get_local $0)))   (get_local $0))   (get_local $0))))  (get_local $1))))   (i32.convert_u/f64   (i32.rem_s  (get_local $1)  (f64.convert_s/i32   (f64.floor  (if  (get_local $0)   (if  (get_local $0)   (get_local $0)   (get_local $1))   (local "g358713" i32))  (get_local $1)))))))))))))  (f64.trunc  (if  (local "g358715" i64)   (get_local $0)   (f64.mul  (get_local $1)  (get_local $0)))  (get_local $1))))  (if  (get_local $0)   (i32.clz  (f64.convert_u/i32   (f64.mul  (get_local $0)  (if  (get_local $0)   (i64.convert_s/f64   (i64.div_u  (get_local $1)  (local "g358752" f64)))   (get_local $0))))  (f64.convert_u/i32   (f64.abs  (get_local $0)  (get_local $0))))   (get_local $0)))) )