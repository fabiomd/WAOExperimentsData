(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $3 i32) (i32.ctz  (local "g16612" i64)  (f64.convert_s/i32   (f64.ceil  (i32.convert_s/f64   (i32.ge_u  (f32.convert_u/i32   (f32.lt  (f64.min  (get_local $1)  (local "g16620" i64))  (i64.convert_s/f32   (i64.le_s  (get_local $1)  (get_local $0)))))  (if  (i32.eq  (if  (get_local $0)   (i64.ge_u  (local "g16621" f32)  (if  (get_local $1)   (f64.convert_s/i64   (f64.floor  (get_local $1)  (get_local $1)))   (get_local $0)))   (get_local $1))  (get_local $0))   (i64.sub  (get_local $1)  (if  (local "g16623" i64)   (i32.xor  (f64.convert_s/i32   (f64.max  (get_local $1)  (get_local $0)))  (f64.convert_u/i32   (f64.neg  (local "g16626" i64)  (local "g16627" f32))))   (local "g16628" i32)))   (f64.convert_u/i32   (f64.sub  (if  (i64.convert_u/f64   (i64.rem_u  (get_local $0)  (local "g16647" i64)))   (get_local $0)   (f64.lt  (local "g16649" i64)  (i64.convert_u/f64   (i64.rotl  (get_local $0)  (local "g16650" i64)))))  (get_local $1))))))  (f32.nearest  (if  (local "g16651" f32)   (if  (if  (local "g16658" f64)   (i32.convert_s/f32   (i32.eqz  (get_local $0)  (f64.convert_u/i32   (f64.ge  (get_local $0)  (if  (i64.convert_u/f64   (i64.clz  (if  (i64.clz  (get_local $1)  (local "g16660" f64))   (get_local $1)   (i32.add  (local "g16661" f32)  (if  (i64.ne  (get_local $1)  (get_local $1))   (get_local $0)   (get_local $0))))  (local "g16662" i64)))   (i32.convert_s/f64   (i32.rotr  (get_local $0)  (if  (get_local $0)   (get_local $0)   (i32.ge_s  (f64.convert_u/i32   (f64.add  (get_local $1)  (local "g16663" i64)))  (i64.clz  (if  (get_local $1)   (get_local $1)   (i32.div_s  (get_local $0)  (get_local $1)))  (get_local $1))))))   (get_local $0))))))   (get_local $1))   (i32.convert_s/f32   (i32.rotr  (local "g16666" i64)  (get_local $1)))   (local "g16667" i32))   (get_local $1))  (get_local $1))))) (i64.div_s  (get_local $1)  (local "g16442" f32))) )