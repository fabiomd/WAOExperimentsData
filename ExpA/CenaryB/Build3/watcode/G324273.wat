(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.div  (i32.convert_u/f64   (i32.clz  (get_local $1)  (if  (f64.convert_s/i32   (f64.div  (if  (local "g324361" f64)   (get_local $0)   (f64.div  (i32.convert_u/f64   (i32.ge_u  (get_local $0)  (local "g324363" f64)))  (f64.lt  (f64.ne  (if  (get_local $0)   (get_local $1)   (if  (if  (f32.lt  (if  (get_local $1)   (f32.min  (f64.ceil  (if  (get_local $1)   (get_local $0)   (f64.copysign  (get_local $0)  (get_local $1)))  (f32.abs  (i64.convert_s/f32   (i64.shr_u  (local "g324369" i64)  (get_local $1)))  (f32.nearest  (get_local $1)  (local "g324375" f32))))  (local "g324376" i32))   (local "g324377" i32))  (get_local $1))   (i64.convert_s/f64   (i64.ge_s  (if  (get_local $1)   (f32.convert_u/i64   (f32.min  (get_local $0)  (get_local $1)))   (f32.convert_s/i64   (f32.mul  (get_local $1)  (get_local $1))))  (get_local $0)))   (get_local $1))   (i64.convert_s/f64   (i64.rotr  (local "g324383" i32)  (get_local $1)))   (local "g324384" i64)))  (f64.eq  (local "g324385" f64)  (local "g324386" f32)))  (local "g324387" f64))))  (f64.abs  (i32.convert_s/f64   (i32.le_s  (get_local $1)  (get_local $1)))  (get_local $1))))   (get_local $1)   (local "g324389" i64))))  (f64.max  (if  (i32.convert_u/f64   (i32.or  (i64.lt_s  (local "g324390" f32)  (f64.convert_u/i64   (f64.trunc  (get_local $0)  (get_local $0))))  (get_local $0)))   (get_local $0)   (get_local $1))  (get_local $1)))) )