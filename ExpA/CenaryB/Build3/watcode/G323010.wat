(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (if  (get_local $0)   (if  (i32.le_u  (get_local $0)  (get_local $1))   (get_local $0)   (i64.eq  (get_local $1)  (local "g323011" i32)))   (f64.convert_u/i32   (f64.neg  (if  (i64.convert_s/f64   (i64.shr_s  (if  (i64.gt_s  (i32.mul  (local "g323024" f64)  (get_local $0))  (get_local $1))   (local "g323025" f32)   (get_local $0))  (get_local $1)))   (get_local $0)   (get_local $0))  (f32.abs  (get_local $1)  (get_local $0)))))   (if  (if  (if  (get_local $0)   (get_local $1)   (get_local $1))   (i32.popcnt  (f64.convert_s/i32   (f64.copysign  (f64.max  (f32.ge  (local "g323026" i32)  (get_local $1))  (get_local $0))  (local "g323027" f64)))  (get_local $0))   (local "g323028" i64))   (i64.gt_s  (if  (get_local $1)   (local "g323029" f32)   (get_local $1))  (get_local $1))   (get_local $1))   (if  (if  (local "g323045" f32)   (get_local $0)   (if  (get_local $0)   (i32.clz  (i64.rem_s  (local "g323046" f32)  (local "g323047" i64))  (i64.eqz  (get_local $0)  (i64.gt_s  (f32.convert_s/i64   (f32.sub  (f64.neg  (get_local $1)  (get_local $1))  (local "g323048" i32)))  (get_local $0))))   (f64.convert_u/i32   (f64.eq  (i32.convert_u/f64   (i32.rotr  (get_local $0)  (get_local $1)))  (f64.abs  (i64.convert_u/f64   (i64.sub  (get_local $1)  (local "g323050" f32)))  (f64.sqrt  (get_local $1)  (get_local $1)))))))   (get_local $1)   (get_local $0)))) )