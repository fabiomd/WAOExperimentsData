(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (set_local $2  (get_local $0)) (set_local $3  (get_local $1)) (f32.le  (i32.convert_s/f32   (i32.sub  (f32.convert_u/i32   (f32.sqrt  (i64.convert_u/f32   (i64.div_u  (if  (if  (get_local $0)   (if  (get_local $0)   (get_local $0)   (i64.le_s  (get_local $1)  (get_local $0)))   (i32.ge_u  (get_local $0)  (f64.convert_s/i32   (f64.eq  (local "g144989" i32)  (if  (get_local $0)   (local "g144990" f64)   (get_local $1))))))   (local "g144991" i32)   (f64.convert_u/i64   (f64.nearest  (local "g144992" f32)  (get_local $1))))  (i64.clz  (f32.convert_s/i64   (f32.ne  (local "g144993" f64)  (get_local $1)))  (get_local $0))))  (local "g144994" i32)))  (get_local $0)))  (local "g144995" f32))) )