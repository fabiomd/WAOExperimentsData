(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (set_local $2  (get_local $0)) (set_local $3  (get_local $1)) (i64.xor  (f32.convert_u/i64   (f32.max  (i64.convert_s/f32   (i64.gt_s  (get_local $1)  (local "g111286" i32)))  (local "g111287" f32)))  (if  (f64.convert_s/i64   (f64.div  (get_local $1)  (get_local $1)))   (f64.convert_s/i64   (f64.copysign  (i32.convert_s/f64   (i32.shr_u  (f32.convert_u/i32   (f32.trunc  (i64.convert_u/f32   (i64.eq  (f32.convert_u/i64   (f32.neg  (i32.convert_s/f32   (i32.rotl  (get_local $1)  (if  (i32.ge_u  (i64.gt_u  (get_local $0)  (get_local $1))  (get_local $1))   (local "g111288" i32)   (get_local $1))))  (if  (i64.convert_s/f32   (i64.le_u  (f64.convert_u/i64   (f64.nearest  (f64.div  (i32.convert_s/f64   (i32.sub  (f32.convert_s/i32   (f32.copysign  (local "g111289" f64)  (get_local $1)))  (if  (get_local $0)   (i64.ge_u  (get_local $0)  (f64.convert_u/i64   (f64.nearest  (get_local $1)  (get_local $0))))   (get_local $1))))  (i32.convert_u/f64   (i32.clz  (get_local $0)  (get_local $1))))  (get_local $0)))  (get_local $1)))   (local "g111291" f64)   (if  (local "g111292" i32)   (local "g111293" i64)   (get_local $0)))))  (get_local $0)))  (get_local $1)))  (local "g111312" i32)))  (if  (get_local $0)   (f32.ceil  (get_local $0)  (local "g111315" i64))   (get_local $0))))   (i32.rotr  (if  (f32.convert_s/i32   (f32.ge  (i32.convert_u/f32   (i32.lt_s  (local "g111316" f32)  (get_local $0)))  (local "g111317" i64)))   (get_local $0)   (if  (local "g111318" i32)   (f32.convert_s/i32   (f32.mul  (if  (get_local $0)   (i64.convert_u/f32   (i64.gt_u  (local "g111320" i32)  (get_local $1)))   (get_local $0))  (get_local $0)))   (get_local $0)))  (local "g111321" f32))))) )