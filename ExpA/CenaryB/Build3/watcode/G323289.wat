(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.convert_s/i64   (f64.max  (if  (get_local $1)   (get_local $0)   (f64.ge  (f64.ne  (f32.abs  (local "g323290" f64)  (local "g323291" f64))  (f64.abs  (if  (get_local $0)   (get_local $1)   (if  (get_local $0)   (get_local $1)   (i64.convert_s/f64   (i64.le_s  (get_local $0)  (get_local $1)))))  (get_local $1)))  (if  (f32.ge  (get_local $1)  (if  (local "g323297" i32)   (get_local $1)   (f64.lt  (local "g323300" i32)  (local "g323301" i64))))   (get_local $0)   (get_local $1))))  (f32.gt  (i32.convert_s/f32   (i32.rem_u  (f32.convert_u/i32   (f32.lt  (f32.min  (get_local $0)  (get_local $0))  (get_local $1)))  (if  (get_local $1)   (i32.rem_s  (get_local $0)  (i32.eqz  (get_local $1)  (get_local $1)))   (i64.div_s  (local "g323305" i64)  (get_local $1)))))  (i64.convert_s/f32   (i64.rotl  (f32.convert_s/i64   (f32.max  (get_local $1)  (get_local $0)))  (if  (get_local $0)   (get_local $1)   (i32.clz  (if  (get_local $0)   (if  (if  (f64.convert_u/i32   (f64.nearest  (get_local $0)  (f32.sub  (if  (f64.eq  (get_local $1)  (local "g323308" i32))   (local "g323309" f64)   (local "g323310" i64))  (if  (i32.convert_u/f32   (i32.sub  (f32.convert_s/i32   (f32.trunc  (local "g323311" i64)  (f64.ceil  (local "g323313" f32)  (get_local $0))))  (f32.convert_s/i32   (f32.gt  (f64.ceil  (get_local $1)  (get_local $1))  (f32.copysign  (f32.lt  (get_local $0)  (get_local $1))  (get_local $0))))))   (get_local $1)   (if  (get_local $1)   (i64.convert_s/f32   (i64.mul  (get_local $0)  (i32.ge_u  (get_local $0)  (f32.convert_u/i32   (f32.gt  (i32.convert_s/f32   (i32.div_u  (get_local $1)  (local "g323319" f32)))  (get_local $1))))))   (local "g323320" i64))))))   (get_local $1)   (get_local $0))   (f64.convert_u/i32   (f64.lt  (if  (get_local $0)   (get_local $0)   (if  (get_local $0)   (get_local $0)   (get_local $1)))  (i64.convert_s/f64   (i64.rotl  (f64.convert_s/i64   (f64.mul  (get_local $0)  (f64.copysign  (f64.gt  (get_local $1)  (local "g323325" i32))  (f32.lt  (i64.convert_u/f32   (i64.rem_u  (local "g323327" f32)  (get_local $1)))  (get_local $1)))))  (f64.convert_s/i64   (f64.sqrt  (get_local $1)  (local "g323328" f32)))))))   (local "g323332" i64))   (if  (i32.le_s  (if  (if  (i32.and  (get_local $0)  (local "g323339" f64))   (get_local $1)   (get_local $0))   (f64.convert_s/i32   (f64.min  (f64.le  (if  (local "g323340" f64)   (f64.neg  (i32.convert_s/f64   (i32.eq  (local "g323341" i64)  (f32.convert_u/i32   (f32.min  (i64.convert_s/f32   (i64.eqz  (get_local $1)  (f32.convert_s/i64   (f32.ne  (local "g323342" i32)  (get_local $1)))))  (get_local $0)))))  (if  (if  (f64.ceil  (get_local $1)  (i64.convert_s/f64   (i64.rotr  (get_local $1)  (if  (get_local $1)   (get_local $1)   (f32.convert_u/i64   (f32.floor  (get_local $1)  (local "g323343" i32)))))))   (local "g323344" i64)   (get_local $1))   (get_local $1)   (i32.convert_s/f64   (i32.rotr  (get_local $1)  (if  (get_local $0)   (local "g323359" i64)   (i64.and  (get_local $0)  (local "g323360" f64)))))))   (get_local $1))  (get_local $1))  (get_local $0)))   (get_local $0))  (f64.convert_s/i32   (f64.ne  (get_local $0)  (if  (local "g323361" f64)   (local "g323362" f64)   (get_local $1)))))   (get_local $1)   (get_local $0)))  (i64.rotr  (get_local $0)  (i64.clz  (get_local $1)  (get_local $1))))))))))) )