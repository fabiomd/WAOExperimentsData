(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.floor  (if  (i64.convert_s/f64   (i64.ne  (i64.gt_s  (local "g347998" i32)  (get_local $0))  (f32.convert_s/i64   (f32.min  (i32.convert_u/f32   (i32.rem_s  (if  (local "g347999" f32)   (get_local $1)   (f64.convert_u/i32   (f64.add  (i64.convert_u/f64   (i64.ge_u  (local "g348000" f64)  (if  (get_local $1)   (local "g348001" f64)   (f64.convert_s/i64   (f64.sub  (if  (get_local $0)   (f32.add  (local "g348003" i32)  (get_local $1))   (i32.convert_u/f64   (i32.ne  (if  (local "g348004" f32)   (i64.le_s  (local "g348005" f64)  (local "g348006" f64))   (get_local $1))  (get_local $0))))  (get_local $1))))))  (local "g348007" i32))))  (i64.eqz  (i64.rotl  (i32.ge_s  (f32.convert_s/i32   (f32.gt  (get_local $1)  (get_local $1)))  (get_local $1))  (get_local $1))  (get_local $1))))  (get_local $0)))))   (if  (i64.convert_s/f64   (i64.clz  (if  (f32.convert_s/i64   (f32.lt  (get_local $1)  (get_local $1)))   (f32.convert_u/i64   (f32.lt  (get_local $1)  (f32.eq  (f64.nearest  (get_local $1)  (get_local $1))  (local "g348015" i32))))   (get_local $0))  (get_local $0)))   (get_local $0)   (i64.convert_s/f64   (i64.add  (get_local $0)  (get_local $0))))   (f32.min  (local "g348018" f64)  (get_local $0)))  (i32.convert_s/f64   (i32.or  (get_local $1)  (get_local $1))))) )