(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i64.shr_s  (i32.ge_s  (if  (local "g377140" f64)   (if  (local "g377141" f64)   (i64.sub  (i64.or  (local "g377142" f32)  (f32.convert_u/i64   (f32.ge  (get_local $0)  (get_local $1))))  (get_local $1))   (get_local $0))   (get_local $0))  (local "g377143" i32))  (f32.convert_u/i64   (f32.ge  (get_local $1)  (f64.floor  (f32.add  (i64.convert_s/f32   (i64.add  (f64.convert_u/i64   (f64.sub  (i32.convert_s/f64   (i32.le_s  (if  (get_local $1)   (i64.ne  (i32.lt_u  (if  (get_local $0)   (get_local $1)   (f32.convert_u/i32   (f32.copysign  (get_local $1)  (local "g377144" f32))))  (f64.convert_u/i32   (f64.gt  (get_local $0)  (i64.convert_u/f64   (i64.shr_s  (local "g377145" f32)  (i64.eq  (local "g377146" i32)  (i64.ne  (if  (local "g401186" i64)   (get_local $0)   (f64.convert_u/i64   (f64.sqrt  (local "g401187" f32)  (if  (f64.ne  (local "g401188" i64)  (get_local $0))   (i64.convert_u/f64   (i64.rotl  (f64.convert_s/i64   (f64.copysign  (local "g401189" f64)  (if  (get_local $1)   (get_local $0)   (get_local $0))))  (get_local $0)))   (local "g401190" f64)))))  (f64.convert_s/i64   (f64.floor  (local "g401191" i64)  (if  (local "g401192" i32)   (i32.convert_s/f64   (i32.rem_s  (if  (i32.le_u  (f32.convert_u/i32   (f32.min  (if  (f32.le  (i64.convert_u/f32   (i64.lt_s  (f32.convert_s/i64   (f32.neg  (local "g401193" i32)  (i32.convert_u/f32   (i32.sub  (local "g401195" f32)  (get_local $0)))))  (if  (i32.popcnt  (local "g401583" i32)  (i32.le_s  (local "g401584" f64)  (i32.div_u  (if  (get_local $0)   (i32.and  (if  (local "g401587" i64)   (i64.mul  (i64.ctz  (if  (i64.ctz  (i32.shr_s  (local "g401588" i64)  (get_local $0))  (local "g401589" i64))   (get_local $0)   (f32.convert_u/i64   (f32.trunc  (get_local $0)  (get_local $1))))  (get_local $1))  (local "g401594" f32))   (f32.convert_s/i32   (f32.lt  (get_local $0)  (if  (local "g401595" i64)   (i64.convert_u/f32   (i64.gt_s  (local "g401602" f64)  (get_local $0)))   (get_local $0)))))  (f64.convert_u/i32   (f64.trunc  (get_local $0)  (i64.convert_s/f64   (i64.mul  (f32.convert_u/i64   (f32.gt  (f64.copysign  (i32.convert_s/f64   (i32.and  (if  (local "g401604" f32)   (i64.eq  (i32.rem_s  (get_local $0)  (get_local $1))  (get_local $0))   (if  (if  (f32.convert_u/i32   (f32.lt  (get_local $1)  (get_local $1)))   (local "g401605" i64)   (if  (f64.convert_s/i32   (f64.le  (get_local $0)  (get_local $1)))   (local "g401606" f64)   (f32.convert_s/i32   (f32.sub  (get_local $0)  (get_local $1)))))   (get_local $1)   (get_local $0)))  (get_local $0)))  (f32.copysign  (get_local $1)  (get_local $0)))  (get_local $0)))  (if  (get_local $0)   (if  (f64.convert_u/i64   (f64.abs  (if  (local "g401615" i32)   (local "g401616" i64)   (local "g401617" f32))  (get_local $0)))   (get_local $1)   (local "g401618" f64))   (if  (get_local $0)   (get_local $1)   (f64.convert_u/i64   (f64.neg  (get_local $1)  (f64.ge  (get_local $0)  (if  (i64.convert_s/f64   (i64.shl  (if  (f64.convert_s/i64   (f64.mul  (get_local $0)  (local "g401619" f32)))   (local "g401620" i64)   (f64.convert_u/i64   (f64.le  (f32.max  (local "g401621" f64)  (get_local $0))  (if  (get_local $1)   (get_local $1)   (if  (get_local $1)   (get_local $1)   (f32.ge  (f32.eq  (if  (get_local $0)   (f64.copysign  (get_local $1)  (if  (get_local $0)   (get_local $0)   (get_local $1)))   (local "g401622" i64))  (local "g401623" f64))  (if  (get_local $0)   (i64.convert_u/f32   (i64.clz  (i64.or  (local "g401624" i64)  (get_local $0))  (if  (i64.rotl  (get_local $0)  (f32.convert_s/i64   (f32.ceil  (if  (i32.convert_s/f32   (i32.div_s  (get_local $0)  (local "g401625" i64)))   (get_local $1)   (f64.ceil  (if  (f64.ne  (get_local $1)  (i32.convert_u/f64   (i32.lt_u  (get_local $1)  (get_local $0))))   (if  (get_local $1)   (local "g401630" i32)   (get_local $0))   (local "g401632" i64))  (get_local $0)))  (if  (get_local $1)   (get_local $0)   (get_local $1)))))   (get_local $1)   (get_local $0))))   (get_local $0))))))))  (get_local $0)))   (f64.lt  (get_local $1)  (get_local $1))   (f32.lt  (i32.convert_s/f32   (i32.lt_s  (f64.convert_u/i32   (f64.gt  (if  (get_local $0)   (i32.convert_u/f64   (i32.le_u  (get_local $0)  (get_local $1)))   (i64.convert_u/f64   (i64.rem_s  (f64.convert_s/i64   (f64.neg  (local "g401633" f32)  (get_local $0)))  (get_local $1))))  (i32.convert_s/f64   (i32.rotr  (get_local $1)  (f64.convert_s/i32   (f64.sqrt  (if  (get_local $1)   (get_local $0)   (get_local $1))  (f64.ne  (i32.convert_s/f64   (i32.add  (local "g401634" i64)  (f64.convert_s/i32   (f64.mul  (local "g401635" i32)  (i64.convert_s/f64   (i64.sub  (get_local $1)  (local "g401641" i32)))))))  (get_local $0))))))))  (local "g401642" f32)))  (local "g401643" f64)))))))))))))   (get_local $0))  (get_local $1))))   (get_local $1)   (f64.convert_s/i64   (f64.ge  (get_local $0)  (get_local $1))))))  (local "g401644" i32))   (f64.div  (get_local $0)  (local "g401647" f64))   (f64.min  (get_local $1)  (local "g401648" i32)))  (f64.trunc  (if  (local "g401649" f64)   (get_local $1)   (get_local $1))  (i32.convert_u/f64   (i32.rotl  (get_local $0)  (f32.convert_u/i32   (f32.mul  (f64.mul  (local "g401650" i32)  (i32.convert_s/f64   (i32.clz  (get_local $1)  (f32.convert_u/i32   (f32.ge  (f32.sub  (get_local $1)  (get_local $0))  (f64.copysign  (local "g401651" i64)  (get_local $1)))))))  (local "g401652" i32))))))))  (local "g401653" i64))   (get_local $0)   (f64.convert_u/i32   (f64.min  (if  (get_local $1)   (if  (f64.add  (get_local $1)  (get_local $0))   (get_local $1)   (get_local $0))   (f64.floor  (i32.convert_s/f64   (i32.popcnt  (local "g401668" f32)  (f32.convert_u/i32   (f32.div  (local "g401671" i32)  (i64.convert_u/f32   (i64.clz  (get_local $0)  (get_local $1)))))))  (if  (get_local $1)   (local "g401672" f64)   (if  (i64.convert_s/f64   (i64.gt_u  (get_local $0)  (get_local $0)))   (get_local $0)   (get_local $0)))))  (get_local $0))))  (get_local $1)))   (get_local $0)))))))))))  (local "g401674" i32))   (f32.convert_u/i32   (f32.ceil  (get_local $0)  (if  (get_local $0)   (get_local $1)   (i64.convert_u/f32   (i64.clz  (get_local $1)  (f64.convert_u/i64   (f64.min  (get_local $1)  (get_local $0)))))))))  (get_local $1)))  (get_local $0)))  (get_local $1)))  (local "g401686" i32))  (get_local $1)))))) )