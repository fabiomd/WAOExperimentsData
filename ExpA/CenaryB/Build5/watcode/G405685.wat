(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (get_local $1)   (i32.rem_s  (if  (i64.add  (get_local $0)  (local "g405686" i32))   (get_local $0)   (local "g405689" f64))  (i64.div_u  (i64.clz  (if  (get_local $1)   (get_local $1)   (if  (get_local $0)   (if  (local "g405690" f32)   (get_local $1)   (i32.rotl  (get_local $1)  (get_local $1)))   (get_local $0)))  (local "g405691" i64))  (f32.convert_s/i64   (f32.copysign  (i32.convert_u/f32   (i32.eqz  (if  (local "g405692" i64)   (get_local $1)   (local "g405693" f64))  (get_local $0)))  (if  (local "g405694" f32)   (i32.convert_u/f32   (i32.and  (get_local $1)  (local "g405696" f32)))   (i32.convert_u/f32   (i32.le_s  (local "g405697" f64)  (i64.clz  (if  (i64.div_s  (get_local $1)  (local "g405698" i32))   (i32.rotr  (f32.convert_u/i32   (f32.abs  (local "g405699" i64)  (local "g405700" f32)))  (get_local $0))   (local "g405701" i32))  (get_local $0)))))))))   (f32.add  (if  (local "g405702" i64)   (if  (f32.le  (get_local $0)  (get_local $1))   (f64.lt  (get_local $1)  (i64.convert_s/f64   (i64.and  (local "g405703" f32)  (get_local $1))))   (f64.sqrt  (if  (i32.convert_s/f64   (i32.clz  (local "g405704" f32)  (i32.shr_u  (if  (f32.convert_u/i32   (f32.add  (get_local $0)  (get_local $0)))   (i64.lt_u  (i64.clz  (i32.le_u  (i32.div_s  (local "g405708" f64)  (i32.mul  (get_local $0)  (local "g405709" i32)))  (local "g405710" i32))  (f32.convert_u/i64   (f32.eq  (get_local $1)  (get_local $0))))  (get_local $0))   (local "g405711" f32))  (if  (local "g405712" f32)   (get_local $1)   (get_local $1)))))   (get_local $1)   (local "g405714" f64))  (get_local $1)))   (i64.convert_u/f32   (i64.and  (if  (local "g405716" f32)   (i32.ne  (get_local $0)  (f64.convert_u/i32   (f64.div  (get_local $0)  (get_local $1))))   (local "g405717" f64))  (get_local $1))))  (local "g405718" i64)))) )