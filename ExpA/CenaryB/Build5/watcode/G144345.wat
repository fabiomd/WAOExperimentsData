(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i32.clz  (i64.ne  (if  (f64.convert_u/i64   (f64.div  (if  (i32.convert_u/f64   (i32.gt_u  (get_local $0)  (if  (get_local $0)   (get_local $0)   (f64.convert_u/i32   (f64.copysign  (if  (get_local $1)   (f64.copysign  (if  (get_local $1)   (get_local $0)   (f64.sqrt  (get_local $1)  (f32.min  (get_local $1)  (if  (get_local $1)   (get_local $1)   (get_local $1)))))  (local "g144348" f32))   (local "g144349" f32))  (if  (get_local $1)   (get_local $0)   (if  (i64.convert_u/f64   (i64.rem_s  (local "g144351" f32)  (f32.convert_u/i64   (f32.sub  (f64.le  (local "g144352" i64)  (get_local $0))  (local "g144353" i32)))))   (i32.convert_u/f64   (i32.div_u  (get_local $1)  (get_local $0)))   (i32.convert_u/f64   (i32.clz  (get_local $1)  (get_local $0))))))))))   (local "g144355" f64)   (local "g144356" i64))  (f32.le  (get_local $0)  (i64.convert_s/f32   (i64.sub  (local "g144357" f32)  (f32.convert_u/i64   (f32.floor  (get_local $1)  (i64.convert_s/f32   (i64.le_u  (get_local $1)  (if  (i64.popcnt  (get_local $0)  (get_local $1))   (get_local $0)   (f32.convert_s/i64   (f32.trunc  (get_local $1)  (local "g144360" i64)))))))))))))   (i64.ctz  (i64.rem_u  (i32.rem_s  (f32.convert_s/i32   (f32.min  (f64.trunc  (i32.convert_s/f64   (i32.or  (local "g144361" i32)  (get_local $0)))  (get_local $1))  (local "g144362" f64)))  (get_local $1))  (get_local $0))  (get_local $1))   (local "g144363" i64))  (f64.convert_s/i64   (f64.add  (if  (local "g144364" f32)   (i32.convert_u/f64   (i32.rotl  (i32.lt_s  (i32.rem_u  (i32.eqz  (if  (local "g144365" i32)   (get_local $1)   (get_local $1))  (f64.convert_u/i32   (f64.trunc  (get_local $0)  (f32.sub  (local "g144366" i64)  (f32.neg  (f32.min  (local "g144367" f64)  (i64.convert_u/f32   (i64.xor  (get_local $0)  (get_local $0))))  (i64.convert_s/f32   (i64.gt_u  (get_local $0)  (get_local $1))))))))  (f32.convert_u/i32   (f32.div  (get_local $1)  (local "g144368" i64))))  (i64.eqz  (f64.convert_u/i64   (f64.add  (i32.convert_u/f64   (i32.rem_s  (local "g144369" f64)  (get_local $0)))  (get_local $1)))  (i64.le_s  (local "g144370" i64)  (if  (get_local $0)   (get_local $0)   (if  (get_local $0)   (local "g144378" i32)   (get_local $1))))))  (if  (f32.convert_u/i32   (f32.ne  (if  (f64.add  (if  (i32.convert_s/f64   (i32.eq  (local "g144383" i32)  (get_local $0)))   (i64.convert_s/f64   (i64.eq  (get_local $0)  (f32.convert_u/i64   (f32.le  (local "g144384" i32)  (i32.convert_u/f32   (i32.mul  (i64.rotl  (get_local $0)  (local "g144387" f32))  (i64.eqz  (f32.convert_u/i64   (f32.abs  (get_local $1)  (local "g144388" i32)))  (get_local $0))))))))   (get_local $0))  (get_local $1))   (if  (get_local $0)   (i64.convert_u/f32   (i64.le_u  (get_local $1)  (get_local $1)))   (get_local $1))   (get_local $1))  (get_local $0)))   (local "g144390" i32)   (get_local $0))))   (local "g144392" f64))  (if  (local "g144393" i64)   (local "g144395" i32)   (f32.nearest  (if  (get_local $0)   (local "g144397" i32)   (local "g144398" i32))  (local "g144399" i64))))))  (get_local $1)) (get_local $0)) )