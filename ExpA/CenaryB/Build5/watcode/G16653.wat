(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (if  (local "g16660" f64)   (i32.eqz  (get_local $0)  (f64.convert_u/i32   (f64.ge  (get_local $0)  (if  (i64.convert_u/f64   (i64.clz  (if  (i64.clz  (get_local $1)  (local "g16662" f64))   (get_local $1)   (i32.add  (local "g16663" f32)  (if  (i64.ne  (get_local $1)  (get_local $1))   (get_local $0)   (get_local $0))))  (local "g16664" i64)))   (i32.convert_s/f64   (i32.rotr  (get_local $0)  (if  (get_local $0)   (get_local $0)   (i32.ge_s  (f64.convert_u/i32   (f64.add  (get_local $1)  (local "g16665" i64)))  (i64.clz  (if  (get_local $1)   (get_local $1)   (i32.div_s  (get_local $0)  (get_local $1)))  (get_local $1))))))   (get_local $0)))))   (get_local $1))   (i32.rotr  (local "g16668" i64)  (get_local $1))   (local "g16669" i32))) )