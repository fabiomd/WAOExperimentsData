(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (i64.clz  (get_local $0)  (i64.rotl  (if  (get_local $0)   (get_local $0)   (f32.convert_s/i64   (f32.gt  (if  (f64.mul  (f64.ne  (get_local $0)  (local "g143298" i32))  (f32.min  (get_local $0)  (f64.nearest  (get_local $1)  (get_local $1))))   (i32.convert_s/f32   (i32.gt_s  (if  (get_local $1)   (f32.convert_s/i32   (f32.neg  (local "g143416" f32)  (f64.abs  (if  (get_local $1)   (local "g143417" f64)   (local "g143418" i32))  (get_local $0))))   (i64.sub  (get_local $1)  (i32.add  (get_local $1)  (if  (f64.convert_u/i32   (f64.ge  (get_local $1)  (if  (get_local $1)   (get_local $0)   (i64.convert_u/f64   (i64.div_u  (f32.convert_s/i64   (f32.ne  (i64.convert_u/f32   (i64.sub  (local "g143431" f32)  (local "g143432" i32)))  (if  (i64.convert_s/f32   (i64.clz  (if  (local "g143433" f64)   (if  (local "g143434" f64)   (if  (f32.convert_s/i64   (f32.mul  (local "g143435" i64)  (get_local $1)))   (local "g143436" i32)   (get_local $1))   (get_local $1))   (if  (local "g143437" f32)   (get_local $1)   (f32.convert_s/i64   (f32.trunc  (if  (i64.convert_s/f32   (i64.eq  (i64.clz  (i64.eq  (get_local $0)  (get_local $0))  (get_local $1))  (get_local $1)))   (get_local $0)   (i64.convert_u/f32   (i64.ge_u  (local "g143622" i64)  (local "g143623" i64))))  (get_local $0)))))  (i32.shr_u  (i64.and  (get_local $1)  (get_local $1))  (get_local $0))))   (get_local $1)   (get_local $1))))  (get_local $1))))))   (i32.sub  (get_local $0)  (get_local $1))   (get_local $0)))))  (get_local $0)))   (get_local $1))  (local "g143627" f64))))  (get_local $0)))   (get_local $1)   (i64.eq  (get_local $0)  (get_local $0)))) )