(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i32.xor  (local "g151599" f64)  (i64.add  (i32.clz  (get_local $0)  (get_local $0))  (f64.convert_s/i64   (f64.sub  (get_local $1)  (i32.convert_u/f64   (i32.lt_s  (if  (i64.ge_u  (get_local $0)  (get_local $1))   (get_local $1)   (f64.convert_u/i32   (f64.floor  (i32.convert_u/f64   (i32.shl  (i64.clz  (i32.gt_s  (i64.xor  (get_local $0)  (get_local $1))  (f64.convert_s/i32   (f64.ge  (get_local $0)  (get_local $0))))  (get_local $1))  (f32.convert_u/i32   (f32.floor  (local "g151644" f32)  (local "g151645" i32)))))  (i32.convert_u/f64   (i32.and  (local "g151646" i32)  (i64.clz  (local "g151647" f32)  (i32.ctz  (i32.eq  (i64.lt_s  (get_local $1)  (i32.ctz  (get_local $1)  (f64.convert_s/i32   (f64.mul  (f32.mul  (local "g151648" f32)  (local "g151649" f32))  (get_local $0)))))  (i32.and  (f64.convert_u/i32   (f64.mul  (local "g151651" i32)  (local "g151652" f64)))  (local "g151655" i64)))  (get_local $1))))))))  (get_local $0))))))) (set_local $2  (get_local $0)) (set_local $3  (get_local $1)) (get_local $1)) )