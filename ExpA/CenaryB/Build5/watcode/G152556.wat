(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i32.div_u  (f32.convert_s/i32   (f32.gt  (f64.floor  (i64.convert_u/f64   (i64.ctz  (i32.ctz  (f64.convert_s/i32   (f64.add  (local "g152557" i64)  (get_local $0)))  (if  (get_local $0)   (get_local $1)   (i64.rotr  (f32.convert_s/i64   (f32.floor  (f64.max  (get_local $1)  (f32.ceil  (get_local $0)  (get_local $0)))  (get_local $0)))  (i32.or  (f64.convert_s/i32   (f64.sqrt  (if  (get_local $0)   (get_local $1)   (f64.sqrt  (get_local $0)  (f64.neg  (get_local $0)  (get_local $0))))  (f32.min  (i32.convert_s/f32   (i32.shr_u  (get_local $0)  (i32.rem_s  (local "g152580" i64)  (i32.lt_u  (get_local $0)  (get_local $0)))))  (f32.sqrt  (get_local $1)  (i32.convert_u/f32   (i32.rotr  (get_local $0)  (f32.convert_u/i32   (f32.abs  (f64.floor  (local "g152584" f64)  (get_local $1))  (get_local $0)))))))))  (f64.convert_s/i32   (f64.floor  (get_local $1)  (i32.convert_u/f64   (i32.eqz  (get_local $1)  (get_local $0)))))))))  (get_local $1)))  (get_local $1))  (get_local $1)))  (local "g152597" f64))) )