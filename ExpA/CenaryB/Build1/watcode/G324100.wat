(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (get_local $0)   (i64.eqz  (i32.ge_s  (if  (f64.convert_s/i32   (f64.ceil  (f32.add  (f32.min  (get_local $0)  (get_local $1))  (get_local $1))  (get_local $0)))   (f32.convert_s/i32   (f32.ne  (local "g324232" i64)  (get_local $1)))   (get_local $1))  (f32.convert_u/i32   (f32.floor  (i64.convert_s/f32   (i64.clz  (i64.rem_s  (f64.convert_u/i64   (f64.le  (i32.convert_s/f64   (i32.rotl  (local "g324234" f32)  (i64.mul  (f64.convert_s/i64   (f64.abs  (get_local $1)  (get_local $1)))  (get_local $1))))  (get_local $0)))  (if  (i64.clz  (i64.rotl  (get_local $1)  (f64.convert_s/i64   (f64.copysign  (if  (i64.convert_u/f64   (i64.popcnt  (get_local $1)  (get_local $1)))   (get_local $1)   (i32.convert_u/f64   (i32.rem_u  (get_local $0)  (if  (get_local $0)   (local "g324237" f64)   (f32.convert_s/i32   (f32.sub  (get_local $0)  (local "g324238" f32)))))))  (i32.convert_s/f64   (i32.or  (f32.convert_u/i32   (f32.lt  (local "g324239" i32)  (get_local $1)))  (get_local $0))))))  (i64.mul  (get_local $1)  (i32.gt_s  (get_local $1)  (f32.convert_u/i32   (f32.ceil  (f32.lt  (get_local $0)  (get_local $0))  (local "g324243" i64))))))   (get_local $1)   (get_local $1)))  (get_local $0)))  (get_local $1))))  (get_local $0))   (get_local $1))) )