(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (set_local $2  (get_local $0)) (set_local $3  (get_local $1)) (i32.sub  (i64.clz  (i32.shl  (i64.le_s  (i32.div_s  (get_local $1)  (local "g12779" f64))  (get_local $0))  (get_local $0))  (if  (get_local $1)   (f64.convert_u/i64   (f64.gt  (f32.le  (get_local $0)  (f32.mul  (get_local $1)  (f64.ne  (get_local $1)  (get_local $0))))  (f32.neg  (if  (get_local $0)   (i32.convert_u/f32   (i32.div_s  (f64.convert_u/i32   (f64.max  (if  (get_local $0)   (local "g12902" f32)   (f64.max  (if  (f64.min  (if  (get_local $1)   (get_local $0)   (if  (get_local $0)   (get_local $1)   (get_local $1)))  (get_local $0))   (i32.convert_u/f64   (i32.eq  (get_local $0)  (local "g12903" f64)))   (local "g12904" f32))  (if  (get_local $0)   (get_local $1)   (i64.convert_s/f64   (i64.rotl  (get_local $1)  (local "g12907" f32))))))  (if  (i32.convert_u/f64   (i32.gt_s  (get_local $1)  (i64.le_s  (f64.convert_s/i64   (f64.le  (i64.convert_s/f64   (i64.lt_u  (f32.convert_s/i64   (f32.min  (get_local $1)  (get_local $0)))  (i64.lt_u  (f64.convert_u/i64   (f64.ne  (get_local $1)  (get_local $1)))  (get_local $0))))  (local "g12910" i32)))  (get_local $0))))   (if  (i32.convert_u/f64   (i32.lt_u  (f32.convert_u/i32   (f32.ceil  (get_local $0)  (get_local $1)))  (get_local $0)))   (local "g12911" i64)   (get_local $1))   (get_local $0))))  (local "g12912" i32)))   (get_local $1))  (f32.lt  (f32.div  (if  (get_local $1)   (if  (get_local $0)   (get_local $1)   (i32.convert_u/f32   (i32.mul  (if  (i64.rotr  (if  (if  (i32.gt_u  (local "g12913" i32)  (get_local $1))   (i64.eqz  (get_local $1)  (if  (i64.eq  (get_local $1)  (get_local $1))   (if  (get_local $0)   (if  (if  (get_local $1)   (get_local $0)   (get_local $0))   (get_local $1)   (get_local $1))   (get_local $1))   (get_local $0)))   (local "g12991" f32))   (get_local $1)   (get_local $0))  (local "g12992" f32))   (get_local $1)   (if  (get_local $1)   (f32.convert_s/i32   (f32.floor  (local "g13023" i32)  (if  (get_local $0)   (i64.convert_u/f32   (i64.le_u  (get_local $1)  (if  (local "g13026" i32)   (get_local $0)   (if  (if  (i64.clz  (get_local $1)  (get_local $1))   (get_local $1)   (local "g13059" f32))   (i32.popcnt  (f64.convert_u/i32   (f64.add  (i64.convert_s/f64   (i64.shr_s  (if  (local "g13060" f32)   (get_local $0)   (get_local $1))  (f64.convert_u/i64   (f64.trunc  (f64.abs  (get_local $0)  (i32.convert_s/f64   (i32.rem_s  (local "g13061" i64)  (get_local $1))))  (local "g13062" f32)))))  (if  (i64.convert_u/f64   (i64.lt_u  (f64.convert_s/i64   (f64.ne  (get_local $1)  (local "g13064" f32)))  (if  (get_local $1)   (get_local $0)   (i32.lt_u  (local "g13065" f64)  (get_local $0)))))   (i32.convert_s/f64   (i32.rotl  (local "g13066" f32)  (f64.convert_s/i32   (f64.min  (i64.convert_s/f64   (i64.popcnt  (get_local $1)  (get_local $1)))  (local "g13087" f32)))))   (get_local $0))))  (get_local $0))   (local "g13088" f32)))))   (f64.max  (get_local $1)  (i32.convert_u/f64   (i32.div_u  (local "g13090" f32)  (if  (get_local $1)   (get_local $0)   (get_local $0))))))))   (get_local $0)))  (get_local $1))))   (get_local $0))  (if  (get_local $0)   (get_local $1)   (local "g13198" i32)))  (local "g13199" i32)))))   (i32.gt_u  (f32.convert_s/i32   (f32.ceil  (i64.convert_u/f32   (i64.clz  (get_local $1)  (if  (i64.clz  (f32.convert_u/i64   (f32.sub  (if  (get_local $0)   (f64.sub  (f64.abs  (i32.convert_u/f64   (i32.clz  (get_local $1)  (get_local $1)))  (i32.convert_u/f64   (i32.ge_u  (get_local $1)  (get_local $1))))  (local "g13213" i32))   (get_local $0))  (get_local $0)))  (local "g13214" i32))   (f64.convert_u/i64   (f64.add  (get_local $0)  (f32.neg  (get_local $1)  (f64.min  (get_local $1)  (get_local $1)))))   (get_local $0))))  (if  (f64.gt  (if  (get_local $1)   (f32.mul  (get_local $1)  (get_local $1))   (get_local $0))  (get_local $0))   (get_local $1)   (f32.ceil  (f32.sqrt  (get_local $0)  (get_local $1))  (get_local $0)))))  (i32.xor  (get_local $1)  (get_local $0)))))  (if  (f32.convert_u/i32   (f32.max  (i32.convert_s/f32   (i32.rotr  (if  (get_local $0)   (i32.shr_s  (local "g13224" f32)  (f64.convert_s/i32   (f64.sub  (f64.div  (if  (get_local $0)   (get_local $0)   (if  (get_local $0)   (get_local $1)   (get_local $0)))  (get_local $0))  (if  (local "g13246" f32)   (local "g13247" f32)   (f32.sub  (get_local $0)  (f32.floor  (get_local $1)  (get_local $0)))))))   (get_local $1))  (if  (f64.convert_s/i32   (f64.div  (i64.convert_u/f64   (i64.gt_u  (f64.convert_s/i64   (f64.min  (get_local $1)  (local "g13248" i32)))  (f32.convert_u/i64   (f32.sqrt  (get_local $0)  (get_local $1)))))  (get_local $1)))   (local "g13249" i32)   (if  (if  (f32.convert_s/i32   (f32.sqrt  (if  (get_local $1)   (get_local $1)   (if  (get_local $0)   (i64.convert_u/f32   (i64.ge_s  (if  (get_local $1)   (get_local $0)   (get_local $1))  (i32.eqz  (get_local $1)  (f32.convert_u/i32   (f32.min  (i64.convert_s/f32   (i64.eqz  (if  (get_local $0)   (local "g13252" f64)   (if  (f32.convert_u/i64   (f32.lt  (f64.sqrt  (get_local $1)  (f32.copysign  (get_local $0)  (i32.convert_u/f32   (i32.gt_s  (get_local $1)  (f64.convert_s/i32   (f64.mul  (local "g13253" i32)  (get_local $1)))))))  (f64.trunc  (i32.convert_u/f64   (i32.gt_s  (f32.convert_s/i32   (f32.lt  (get_local $0)  (local "g13297" i32)))  (get_local $0)))  (get_local $1))))   (get_local $0)   (get_local $0)))  (i64.le_s  (get_local $1)  (f32.convert_s/i64   (f32.add  (get_local $0)  (local "g13300" f32))))))  (get_local $1))))))   (get_local $1)))  (i64.convert_u/f32   (i64.lt_s  (local "g13301" i64)  (get_local $0)))))   (get_local $0)   (f32.convert_u/i32   (f32.abs  (get_local $1)  (get_local $1))))   (get_local $0)   (local "g13302" i64)))))  (f64.div  (i32.convert_u/f64   (i32.popcnt  (local "g13303" f32)  (if  (if  (i32.div_u  (if  (get_local $0)   (get_local $1)   (local "g13312" i32))  (get_local $0))   (get_local $1)   (get_local $1))   (local "g13313" f64)   (local "g13314" i64))))  (get_local $0))))   (i64.rem_u  (local "g13315" f64)  (i32.or  (f32.convert_u/i32   (f32.ge  (get_local $1)  (get_local $0)))  (if  (local "g13317" f64)   (local "g13318" i32)   (get_local $1))))   (get_local $1)))) )