(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.convert_s/i32   (f32.sqrt  (f32.ge  (local "g29413" f32)  (i32.convert_s/f32   (i32.eq  (f64.convert_u/i32   (f64.sub  (i64.convert_u/f64   (i64.rotl  (get_local $0)  (i64.gt_s  (get_local $0)  (get_local $0))))  (i32.convert_s/f64   (i32.mul  (i32.eqz  (i64.gt_s  (i32.add  (local "g29415" i64)  (get_local $1))  (i32.eqz  (local "g29416" f64)  (if  (f32.convert_s/i32   (f32.lt  (if  (get_local $0)   (f64.ge  (get_local $1)  (if  (if  (i64.convert_u/f64   (i64.rotl  (if  (local "g29417" f32)   (i32.eqz  (get_local $0)  (local "g29418" i32))   (if  (get_local $0)   (f64.convert_u/i64   (f64.copysign  (if  (get_local $1)   (i64.convert_u/f64   (i64.clz  (get_local $0)  (local "g29419" f32)))   (i32.convert_s/f64   (i32.rotl  (i32.rem_u  (get_local $1)  (if  (local "g29420" i64)   (get_local $1)   (if  (i32.ge_s  (f64.convert_u/i32   (f64.sub  (local "g29422" i64)  (if  (local "g29430" f32)   (local "g29431" f64)   (local "g29432" f64))))  (i32.shr_s  (f32.convert_s/i32   (f32.trunc  (local "g29433" i32)  (local "g29434" f64)))  (f32.convert_s/i32   (f32.ne  (f64.copysign  (local "g29436" i32)  (get_local $1))  (get_local $0)))))   (local "g29437" i64)   (local "g29438" f32))))  (i64.clz  (get_local $0)  (i64.ne  (get_local $0)  (get_local $1))))))  (if  (get_local $1)   (if  (if  (get_local $0)   (get_local $0)   (i64.convert_s/f64   (i64.eqz  (get_local $0)  (get_local $0))))   (i64.convert_u/f64   (i64.div_u  (get_local $0)  (get_local $0)))   (get_local $1))   (local "g29445" i64))))   (get_local $1)))  (get_local $0)))   (i32.convert_u/f64   (i32.div_u  (i64.ctz  (local "g29447" i32)  (i64.popcnt  (get_local $0)  (get_local $1)))  (get_local $0)))   (if  (f64.gt  (local "g29464" f64)  (get_local $0))   (get_local $1)   (f64.floor  (local "g29519" f64)  (get_local $1))))   (i64.convert_u/f64   (i64.clz  (local "g29520" i32)  (get_local $0)))   (if  (get_local $1)   (get_local $1)   (f64.ceil  (f32.floor  (get_local $1)  (local "g29592" i32))  (get_local $1)))))   (get_local $0))  (f32.sqrt  (if  (get_local $1)   (get_local $1)   (get_local $1))  (get_local $0))))   (get_local $0)   (get_local $0))))  (f32.convert_s/i32   (f32.eq  (get_local $0)  (f64.mul  (get_local $0)  (get_local $0)))))  (get_local $0)))))  (local "g29606" i64))))  (i64.convert_s/f32   (i64.and  (get_local $0)  (get_local $1))))) (get_local $1)) )