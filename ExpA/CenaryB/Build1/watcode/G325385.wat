(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (if  (get_local $0)   (if  (get_local $1)   (get_local $0)   (i64.le_u  (get_local $0)  (if  (i32.add  (f32.convert_u/i32   (f32.mul  (get_local $1)  (local "g325389" f32)))  (local "g325390" f32))   (i32.clz  (get_local $1)  (local "g325391" f32))   (i32.shr_s  (get_local $0)  (i32.sub  (i64.rem_u  (local "g325397" f64)  (f32.convert_u/i64   (f32.ge  (if  (get_local $0)   (get_local $1)   (local "g325398" f32))  (if  (f32.trunc  (if  (f32.floor  (get_local $0)  (if  (get_local $0)   (local "g325400" i32)   (i64.convert_s/f32   (i64.lt_u  (i32.shr_s  (i64.ge_u  (local "g325401" f64)  (i64.le_s  (f32.convert_u/i64   (f32.sub  (get_local $0)  (get_local $0)))  (i32.shl  (local "g325404" f32)  (get_local $0))))  (i32.clz  (get_local $1)  (i64.ge_s  (get_local $0)  (i64.shl  (f32.convert_s/i64   (f32.nearest  (get_local $1)  (get_local $0)))  (local "g325405" f32)))))  (f64.convert_s/i64   (f64.trunc  (if  (get_local $0)   (local "g325406" f64)   (local "g325407" f32))  (i64.convert_s/f64   (i64.rem_s  (get_local $1)  (f64.convert_u/i64   (f64.copysign  (f32.min  (get_local $0)  (f32.nearest  (f32.sqrt  (get_local $0)  (get_local $0))  (get_local $1)))  (get_local $0)))))))))))   (get_local $1)   (local "g325408" i64))  (get_local $0))   (i64.convert_u/f32   (i64.ge_u  (get_local $0)  (get_local $0)))   (local "g325409" f32)))))  (f32.convert_s/i32   (f32.max  (f64.mul  (get_local $1)  (local "g325410" f64))  (get_local $0))))))))   (i64.ge_u  (local "g325411" i64)  (f32.convert_u/i64   (f32.neg  (get_local $0)  (local "g325412" i64))))) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )