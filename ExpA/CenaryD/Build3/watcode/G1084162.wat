(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.convert_u/i32   (f64.min  (if  (local "g1084167" i32)   (local "g1084168" f64)   (i32.convert_u/f64   (i32.rotl  (get_local $0)  (get_local $0))))  (f64.trunc  (if  (if  (get_local $0)   (get_local $0)   (f64.eq  (get_local $0)  (f32.ceil  (get_local $0)  (i32.convert_s/f32   (i32.ge_u  (get_local $1)  (f32.convert_u/i32   (f32.abs  (f32.add  (f64.copysign  (i64.convert_s/f64   (i64.rem_s  (local "g1084374" i32)  (i64.le_s  (f64.convert_u/i64   (f64.trunc  (local "g1084375" i32)  (i32.convert_u/f64   (i32.rem_s  (get_local $0)  (local "g1084376" f64)))))  (if  (if  (get_local $1)   (get_local $0)   (f64.convert_s/i64   (f64.ne  (get_local $0)  (get_local $1))))   (get_local $1)   (f32.convert_s/i64   (f32.gt  (get_local $0)  (get_local $1)))))))  (get_local $0))  (local "g1084465" f32))  (get_local $1))))))))   (i64.convert_u/f64   (i64.lt_u  (get_local $0)  (f32.convert_s/i64   (f32.ne  (get_local $0)  (get_local $1)))))   (get_local $1))  (i64.convert_u/f64   (i64.xor  (i64.lt_u  (i64.or  (get_local $0)  (f64.convert_s/i64   (f64.gt  (get_local $1)  (get_local $0))))  (get_local $0))  (i64.ge_u  (get_local $0)  (get_local $0)))))))) )