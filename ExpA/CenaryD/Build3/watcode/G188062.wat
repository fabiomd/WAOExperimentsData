(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i32.ge_u  (if  (f32.convert_s/i32   (f32.sub  (if  (f64.sub  (get_local $0)  (f64.mul  (get_local $1)  (i32.convert_u/f64   (i32.lt_u  (f32.convert_s/i32   (f32.ge  (local "g188066" i64)  (get_local $1)))  (get_local $1)))))   (if  (if  (get_local $0)   (f64.eq  (i64.convert_s/f64   (i64.le_u  (f32.convert_u/i64   (f32.sub  (get_local $0)  (get_local $1)))  (f32.convert_s/i64   (f32.neg  (if  (local "g188068" f64)   (if  (f64.eq  (f64.max  (get_local $0)  (f32.add  (get_local $1)  (local "g188070" f64)))  (i32.convert_s/f64   (i32.eq  (get_local $0)  (f64.convert_s/i32   (f64.sub  (get_local $0)  (i64.convert_s/f64   (i64.clz  (i64.gt_u  (local "g188071" i64)  (get_local $0))  (if  (f64.convert_u/i64   (f64.eq  (f64.mul  (get_local $0)  (get_local $1))  (local "g188075" f32)))   (local "g188076" f64)   (get_local $0)))))))))   (get_local $0)   (get_local $1))   (if  (local "g188079" f64)   (f32.eq  (get_local $0)  (local "g188080" i32))   (if  (if  (get_local $0)   (get_local $1)   (local "g188081" f32))   (get_local $0)   (get_local $1))))  (i32.convert_s/f32   (i32.le_u  (get_local $1)  (get_local $0)))))))  (f64.mul  (get_local $1)  (get_local $1)))   (get_local $0))   (local "g188108" f64)   (i32.convert_s/f32   (i32.add  (get_local $1)  (local "g188109" f32))))   (f32.add  (get_local $0)  (get_local $1)))  (get_local $1)))   (local "g188137" f32)   (get_local $0))  (f32.convert_s/i32   (f32.nearest  (get_local $0)  (get_local $0))))) )