(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.add  (if  (get_local $0)   (i32.convert_u/f32   (i32.div_u  (if  (get_local $0)   (local "g1518144" f32)   (get_local $0))  (f32.convert_u/i32   (f32.copysign  (get_local $0)  (get_local $1)))))   (f32.ge  (f64.div  (get_local $0)  (get_local $1))  (f64.add  (local "g1518147" f64)  (i32.convert_u/f64   (i32.gt_u  (get_local $1)  (i32.add  (i32.rotr  (if  (get_local $1)   (get_local $1)   (i32.div_u  (local "g1518148" i32)  (get_local $1)))  (get_local $1))  (get_local $1)))))))  (i32.convert_s/f32   (i32.shl  (get_local $1)  (i32.le_u  (local "g1518149" i64)  (f32.convert_s/i32   (f32.ge  (local "g1518150" f64)  (i32.convert_s/f32   (i32.rotr  (if  (local "g1518151" i32)   (get_local $1)   (if  (get_local $1)   (get_local $0)   (if  (if  (i32.rotr  (get_local $1)  (get_local $1))   (local "g1518152" i32)   (local "g1518153" f64))   (get_local $0)   (get_local $1))))  (f32.convert_s/i32   (f32.max  (i32.convert_s/f32   (i32.lt_s  (f32.convert_s/i32   (f32.max  (local "g1518155" i64)  (f32.sqrt  (f32.div  (get_local $1)  (i64.convert_s/f32   (i64.and  (get_local $0)  (local "g1518159" f64))))  (if  (get_local $0)   (f64.ceil  (get_local $1)  (get_local $0))   (get_local $0)))))  (get_local $0)))  (f32.eq  (get_local $1)  (local "g1518160" f32))))))))))))) )