(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.copysign  (f64.lt  (local "g1522266" f32)  (get_local $1))  (i32.convert_u/f64   (i32.add  (if  (i64.rotr  (i64.rotr  (get_local $0)  (i64.popcnt  (get_local $0)  (i32.rem_u  (f64.convert_s/i32   (f64.gt  (get_local $0)  (if  (f32.lt  (get_local $0)  (if  (get_local $1)   (get_local $0)   (local "g1522339" i32)))   (get_local $0)   (f32.lt  (i64.convert_s/f32   (i64.rem_s  (local "g1522340" f32)  (if  (f64.convert_u/i64   (f64.nearest  (get_local $0)  (get_local $1)))   (if  (get_local $1)   (i32.or  (get_local $0)  (f64.convert_u/i32   (f64.neg  (f32.eq  (get_local $0)  (i32.convert_u/f32   (i32.clz  (get_local $1)  (i32.xor  (f64.convert_s/i32   (f64.div  (if  (local "g1522569" i64)   (local "g1522570" f32)   (local "g1522571" f32))  (if  (i32.convert_s/f64   (i32.lt_u  (get_local $1)  (f64.convert_u/i32   (f64.sqrt  (i32.convert_s/f64   (i32.and  (get_local $0)  (local "g1522572" i32)))  (get_local $0)))))   (i64.convert_s/f64   (i64.sub  (get_local $1)  (f64.convert_s/i64   (f64.add  (f32.lt  (get_local $0)  (local "g1522573" f64))  (get_local $1)))))   (f32.min  (get_local $1)  (if  (get_local $0)   (local "g1522575" i32)   (i64.convert_s/f32   (i64.or  (f32.convert_u/i64   (f32.abs  (get_local $0)  (get_local $1)))  (get_local $0))))))))  (f32.convert_s/i32   (f32.abs  (get_local $0)  (i64.convert_u/f32   (i64.mul  (get_local $0)  (i64.gt_s  (get_local $0)  (local "g1522576" f64))))))))))  (get_local $0))))   (f32.convert_u/i64   (f32.floor  (get_local $1)  (get_local $0))))   (local "g1522577" i64))))  (i64.convert_u/f32   (i64.gt_u  (get_local $1)  (get_local $1)))))))  (get_local $1))))  (get_local $0))   (i64.le_u  (get_local $1)  (get_local $0))   (local "g1522578" i64))  (local "g1522579" i64))))) )