(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i32.eq  (i64.ge_u  (if  (get_local $0)   (get_local $0)   (if  (f64.convert_u/i64   (f64.min  (get_local $1)  (f32.ge  (get_local $0)  (get_local $0))))   (f64.convert_s/i64   (f64.sqrt  (get_local $0)  (i32.convert_u/f64   (i32.popcnt  (get_local $1)  (get_local $1)))))   (local "g33778" i64)))  (i64.sub  (f32.convert_s/i64   (f32.neg  (local "g33782" i32)  (if  (get_local $0)   (i32.convert_u/f32   (i32.rem_u  (f32.convert_u/i32   (f32.copysign  (local "g33783" f32)  (local "g33784" f32)))  (i64.shr_u  (i64.ctz  (get_local $1)  (local "g33785" f64))  (get_local $0))))   (f64.eq  (f64.lt  (if  (if  (f64.copysign  (local "g33786" i64)  (i64.convert_s/f64   (i64.rotr  (if  (local "g33789" i32)   (get_local $0)   (local "g33790" f32))  (get_local $0))))   (local "g33791" f32)   (get_local $1))   (if  (get_local $0)   (f32.gt  (get_local $1)  (f64.div  (get_local $1)  (get_local $1)))   (local "g33793" f32))   (if  (get_local $0)   (local "g33794" i32)   (f32.eq  (get_local $1)  (if  (get_local $0)   (i64.convert_s/f32   (i64.and  (i32.rotl  (get_local $1)  (get_local $0))  (i64.rem_s  (get_local $1)  (get_local $1))))   (local "g34133" i32)))))  (if  (get_local $1)   (get_local $1)   (get_local $0)))  (get_local $1)))))  (i32.eqz  (get_local $0)  (local "g34139" f64))))  (get_local $1))) )