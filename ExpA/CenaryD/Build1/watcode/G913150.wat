(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.sub  (f64.copysign  (f64.sub  (if  (i64.convert_u/f64   (i64.mul  (get_local $0)  (i32.rem_s  (if  (f32.convert_u/i32   (f32.min  (get_local $1)  (if  (if  (i32.convert_u/f32   (i32.ne  (local "g913407" f32)  (get_local $0)))   (get_local $0)   (get_local $1))   (get_local $0)   (i64.convert_u/f32   (i64.rem_u  (get_local $0)  (get_local $0))))))   (local "g913411" f64)   (f32.convert_u/i32   (f32.neg  (if  (get_local $0)   (get_local $1)   (local "g913412" i32))  (i32.convert_u/f32   (i32.gt_u  (get_local $1)  (get_local $0))))))  (get_local $0))))   (i64.convert_u/f64   (i64.ge_u  (local "g913413" i32)  (get_local $1)))   (f64.gt  (local "g913416" i64)  (if  (f32.min  (get_local $1)  (i64.convert_u/f32   (i64.le_s  (i64.le_u  (if  (i64.gt_u  (f64.convert_u/i64   (f64.ne  (get_local $1)  (i64.convert_u/f64   (i64.rotl  (local "g913478" i64)  (get_local $0)))))  (local "g913479" f64))   (get_local $1)   (get_local $1))  (local "g913480" f64))  (get_local $0))))   (i32.convert_s/f64   (i32.le_s  (get_local $0)  (get_local $1)))   (f64.gt  (i64.convert_u/f64   (i64.mul  (f64.convert_u/i64   (f64.trunc  (get_local $1)  (f64.ge  (i32.convert_u/f64   (i32.shr_s  (i32.rotl  (i32.ge_s  (i32.eq  (get_local $1)  (if  (local "g932465" i32)   (get_local $0)   (if  (local "g932466" i64)   (local "g932467" i32)   (f32.convert_s/i32   (f32.abs  (get_local $0)  (if  (f32.div  (f32.neg  (get_local $0)  (get_local $1))  (get_local $0))   (local "g932468" f64)   (get_local $1)))))))  (get_local $1))  (get_local $0))  (f32.convert_s/i32   (f32.div  (f32.ceil  (local "g932469" i64)  (f64.copysign  (if  (get_local $1)   (get_local $0)   (local "g933383" f32))  (get_local $1)))  (get_local $0)))))  (local "g933385" f64))))  (get_local $1)))  (local "g933391" i32)))))  (get_local $1))  (get_local $1))  (local "g933392" i32))) )