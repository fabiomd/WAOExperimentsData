(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.le  (get_local $0)  (i64.convert_s/f64   (i64.shl  (get_local $1)  (if  (f64.convert_u/i64   (f64.ge  (if  (if  (i64.convert_s/f64   (i64.le_u  (i32.div_s  (i32.and  (local "g534378" i64)  (get_local $0))  (if  (i64.rem_s  (get_local $1)  (get_local $1))   (get_local $1)   (i64.gt_s  (local "g534380" f32)  (f64.convert_s/i64   (f64.sqrt  (get_local $1)  (i64.convert_s/f64   (i64.ge_u  (get_local $0)  (i64.clz  (f32.convert_s/i64   (f32.trunc  (i64.convert_s/f32   (i64.shr_s  (i32.clz  (local "g534382" i64)  (get_local $1))  (f32.convert_s/i64   (f32.floor  (i64.convert_s/f32   (i64.eq  (get_local $1)  (f32.convert_s/i64   (f32.le  (get_local $1)  (i32.convert_u/f32   (i32.and  (local "g534383" i64)  (i32.or  (local "g534384" f64)  (local "g534385" f32))))))))  (local "g534386" f64)))))  (i64.convert_u/f32   (i64.ge_s  (f64.convert_s/i64   (f64.trunc  (get_local $1)  (local "g534387" f64)))  (get_local $1)))))  (i64.clz  (get_local $0)  (get_local $1))))))))))  (get_local $0)))   (if  (get_local $1)   (f32.nearest  (get_local $1)  (get_local $1))   (if  (f32.min  (get_local $1)  (get_local $1))   (local "g534411" i64)   (i64.convert_s/f64   (i64.le_u  (get_local $1)  (get_local $1)))))   (f64.ge  (get_local $0)  (get_local $1)))   (get_local $0)   (get_local $1))  (get_local $1)))   (i64.rotl  (get_local $0)  (local "g534417" f32))   (if  (local "g534418" f64)   (get_local $0)   (if  (get_local $1)   (f64.convert_s/i64   (f64.max  (get_local $0)  (i64.convert_u/f64   (i64.clz  (get_local $0)  (i32.shr_u  (local "g534419" i64)  (local "g534420" i32))))))   (local "g534422" f32)))))))) )