(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.convert_u/i32   (f32.trunc  (local "g376898" f32)  (i32.convert_u/f32   (i32.sub  (if  (get_local $0)   (local "g376899" i64)   (f64.convert_u/i32   (f64.lt  (if  (local "g376900" f64)   (i64.convert_s/f64   (i64.gt_s  (local "g376902" i32)  (get_local $1)))   (f64.lt  (local "g376903" f32)  (if  (if  (get_local $1)   (get_local $1)   (i64.convert_s/f64   (i64.ctz  (f64.convert_s/i64   (f64.sqrt  (f64.max  (local "g376904" i64)  (get_local $0))  (get_local $1)))  (i64.rotr  (f64.convert_s/i64   (f64.le  (if  (i32.convert_s/f64   (i32.rem_s  (if  (get_local $0)   (get_local $0)   (f32.convert_u/i32   (f32.sub  (get_local $1)  (f64.sub  (f64.min  (get_local $0)  (i32.convert_s/f64   (i32.ctz  (local "g376914" i64)  (get_local $0))))  (get_local $1)))))  (f64.convert_u/i32   (f64.ne  (local "g376989" i32)  (local "g376990" i32)))))   (f64.sqrt  (get_local $0)  (get_local $0))   (i32.convert_u/f64   (i32.rotl  (get_local $1)  (get_local $1))))  (f64.le  (f64.lt  (if  (local "g376996" f32)   (if  (i64.convert_s/f64   (i64.ne  (i32.div_s  (i64.div_u  (i32.rotl  (i64.ne  (if  (i32.rem_s  (i32.eqz  (get_local $1)  (get_local $0))  (get_local $1))   (get_local $0)   (get_local $0))  (get_local $1))  (local "g377007" f64))  (local "g377008" f64))  (get_local $1))  (get_local $1)))   (i32.convert_u/f64   (i32.gt_s  (f32.convert_u/i32   (f32.div  (get_local $0)  (get_local $0)))  (get_local $0)))   (local "g377009" i32))   (get_local $0))  (local "g377012" i32))  (get_local $0))))  (if  (if  (get_local $0)   (get_local $1)   (get_local $1))   (get_local $0)   (get_local $1))))))   (get_local $1)   (local "g377013" f64))))  (local "g377014" f64))))  (get_local $1))))) (i32.add  (get_local $0)  (get_local $1))) )