(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (local "g544456" i64)   (f64.sqrt  (if  (get_local $1)   (local "g544457" i32)   (get_local $1))  (get_local $0))   (f64.abs  (get_local $0)  (i32.convert_u/f64   (i32.div_u  (f32.convert_u/i32   (f32.max  (i32.convert_s/f32   (i32.clz  (if  (get_local $0)   (get_local $1)   (if  (f32.convert_u/i32   (f32.min  (get_local $1)  (get_local $1)))   (f64.convert_s/i32   (f64.nearest  (get_local $0)  (get_local $1)))   (get_local $0)))  (local "g544459" f32)))  (i64.convert_u/f32   (i64.gt_u  (i64.sub  (i64.or  (get_local $1)  (local "g544460" f64))  (i64.xor  (get_local $0)  (f64.convert_s/i64   (f64.abs  (i64.convert_s/f64   (i64.ge_u  (get_local $1)  (get_local $0)))  (get_local $1)))))  (if  (get_local $1)   (get_local $1)   (if  (f64.convert_u/i64   (f64.div  (get_local $0)  (if  (if  (get_local $0)   (get_local $1)   (if  (if  (i64.convert_s/f64   (i64.rem_s  (get_local $0)  (local "g544467" f32)))   (local "g544472" i32)   (get_local $1))   (local "g544473" i32)   (local "g544474" f64)))   (i64.convert_s/f64   (i64.rotr  (get_local $0)  (i64.and  (get_local $1)  (if  (f64.convert_s/i64   (f64.div  (local "g544478" i64)  (local "g544479" i32)))   (i32.shl  (get_local $0)  (f64.convert_s/i32   (f64.le  (get_local $1)  (get_local $0))))   (get_local $1)))))   (get_local $1))))   (get_local $1)   (get_local $0)))))))  (f32.convert_s/i32   (f32.le  (get_local $0)  (get_local $0)))))))) )