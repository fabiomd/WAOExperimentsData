(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (local "g713568" i32)   (get_local $0)   (if  (get_local $0)   (i64.clz  (i64.rotl  (i32.rem_s  (f64.convert_s/i32   (f64.mul  (i32.convert_s/f64   (i32.rotr  (get_local $0)  (get_local $1)))  (f64.le  (i32.convert_u/f64   (i32.mul  (get_local $0)  (i32.le_u  (get_local $0)  (f32.convert_s/i32   (f32.neg  (get_local $1)  (if  (get_local $1)   (i64.convert_u/f32   (i64.rem_u  (get_local $1)  (get_local $1)))   (i64.convert_s/f32   (i64.ne  (get_local $1)  (local "g713622" f64)))))))))  (if  (local "g713623" i32)   (f64.mul  (i64.convert_s/f64   (i64.lt_u  (f64.convert_s/i64   (f64.nearest  (get_local $0)  (get_local $1)))  (if  (get_local $0)   (i32.sub  (f64.convert_u/i32   (f64.sub  (i32.convert_s/f64   (i32.shl  (get_local $0)  (get_local $0)))  (f64.nearest  (local "g713647" i32)  (local "g713648" i32))))  (if  (get_local $1)   (if  (i64.lt_s  (get_local $0)  (f64.convert_u/i64   (f64.add  (get_local $0)  (i64.convert_u/f64   (i64.clz  (i32.clz  (get_local $1)  (get_local $0))  (get_local $1))))))   (i64.eqz  (get_local $1)  (i64.sub  (if  (get_local $0)   (get_local $1)   (get_local $1))  (get_local $1)))   (f64.convert_s/i32   (f64.floor  (get_local $1)  (get_local $1))))   (get_local $0)))   (get_local $1))))  (local "g713726" i32))   (get_local $0)))))  (get_local $1))  (f32.convert_u/i64   (f32.div  (get_local $1)  (f64.sqrt  (local "g713727" f32)  (f32.abs  (local "g713728" f32)  (get_local $1))))))  (get_local $1))   (i64.shr_u  (get_local $0)  (f64.convert_s/i64   (f64.eq  (get_local $0)  (if  (get_local $0)   (f64.mul  (local "g713730" f32)  (f32.div  (get_local $1)  (get_local $0)))   (get_local $1)))))))) )