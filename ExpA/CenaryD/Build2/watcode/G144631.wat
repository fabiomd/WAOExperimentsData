(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (set_local $2  (get_local $0)) (f32.eq  (if  (get_local $1)   (local "g144632" i32)   (f64.add  (i64.convert_s/f64   (i64.rotl  (local "g144633" i32)  (get_local $0)))  (local "g144634" f64)))  (f32.gt  (get_local $1)  (if  (i32.convert_u/f32   (i32.shr_s  (i32.eq  (get_local $1)  (local "g144635" f32))  (get_local $1)))   (i32.convert_u/f32   (i32.ge_s  (i32.add  (f64.convert_u/i32   (f64.sub  (local "g144636" f32)  (if  (get_local $0)   (f32.abs  (get_local $0)  (get_local $1))   (get_local $0))))  (f32.convert_s/i32   (f32.mul  (get_local $1)  (f32.min  (get_local $1)  (if  (f32.mul  (get_local $1)  (local "g144637" i64))   (local "g144638" i32)   (if  (f32.ge  (local "g144639" f32)  (i64.convert_s/f32   (i64.shl  (f64.convert_u/i64   (f64.lt  (get_local $0)  (get_local $0)))  (i64.eq  (f32.convert_u/i64   (f32.le  (f32.lt  (local "g144641" f32)  (local "g144642" f32))  (f64.nearest  (get_local $0)  (local "g144643" i64))))  (f32.convert_u/i64   (f32.ne  (get_local $0)  (get_local $1)))))))   (f64.le  (f32.sqrt  (local "g144644" i32)  (local "g144645" i64))  (local "g144646" i64))   (get_local $0)))))))  (local "g144647" f32)))   (get_local $0)))) (get_local $1)) )