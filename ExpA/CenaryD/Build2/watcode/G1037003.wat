(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.ne  (if  (f32.min  (get_local $1)  (i64.convert_u/f32   (i64.clz  (get_local $1)  (i32.clz  (get_local $1)  (if  (get_local $1)   (if  (get_local $1)   (i64.clz  (i32.add  (f32.convert_s/i32   (f32.lt  (i64.convert_s/f32   (i64.clz  (f32.convert_u/i64   (f32.max  (i64.convert_u/f32   (i64.ge_u  (get_local $0)  (i32.le_u  (get_local $0)  (local "g1037063" f32))))  (if  (i32.convert_u/f32   (i32.lt_u  (local "g1037064" f64)  (get_local $1)))   (local "g1037066" i64)   (local "g1037067" f32))))  (get_local $1)))  (f32.le  (get_local $0)  (get_local $0))))  (get_local $0))  (get_local $0))   (get_local $1))   (f64.convert_u/i32   (f64.ge  (get_local $1)  (local "g1037069" i64))))))))   (local "g1037072" i64)   (get_local $0))  (f64.ceil  (get_local $1)  (f32.le  (f64.div  (get_local $1)  (if  (local "g1037074" i64)   (get_local $1)   (get_local $0)))  (if  (local "g1037075" f64)   (local "g1037076" i32)   (get_local $1)))))) )