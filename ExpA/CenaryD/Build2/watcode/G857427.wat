(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (get_local $1)   (if  (f64.ne  (if  (get_local $0)   (get_local $0)   (i32.convert_u/f64   (i32.gt_u  (get_local $0)  (i64.lt_s  (i32.div_s  (if  (i64.ge_s  (f32.convert_s/i64   (f32.ne  (local "g857430" i64)  (if  (f32.abs  (get_local $0)  (f64.le  (get_local $0)  (get_local $1)))   (get_local $0)   (local "g857432" f32))))  (if  (i32.gt_u  (get_local $0)  (i32.ge_u  (get_local $1)  (i64.eq  (get_local $1)  (i32.shr_u  (f32.convert_s/i32   (f32.mul  (local "g857459" f64)  (get_local $1)))  (get_local $1)))))   (i32.shl  (get_local $1)  (get_local $0))   (get_local $1)))   (f64.convert_s/i32   (f64.sqrt  (get_local $1)  (i32.convert_s/f64   (i32.popcnt  (i32.clz  (get_local $1)  (i32.gt_s  (f64.convert_u/i32   (f64.sub  (get_local $0)  (get_local $1)))  (if  (local "g857505" i64)   (i64.div_u  (if  (i32.clz  (local "g857506" f32)  (get_local $1))   (i32.rem_u  (i64.lt_u  (f32.convert_s/i64   (f32.neg  (f64.sqrt  (get_local $1)  (get_local $1))  (f32.gt  (get_local $0)  (get_local $1))))  (get_local $0))  (f64.convert_s/i32   (f64.sqrt  (if  (get_local $0)   (i32.convert_s/f64   (i32.eqz  (f64.convert_s/i32   (f64.trunc  (f64.ge  (f32.lt  (if  (if  (get_local $1)   (local "g857534" f64)   (f32.mul  (get_local $1)  (get_local $1)))   (if  (get_local $0)   (local "g857535" i32)   (local "g857536" i64))   (local "g857537" i32))  (get_local $1))  (f64.abs  (i64.convert_u/f64   (i64.ctz  (if  (get_local $1)   (local "g857539" i64)   (local "g857540" f64))  (get_local $0)))  (if  (i64.convert_s/f64   (i64.rotl  (f32.convert_s/i64   (f32.trunc  (get_local $0)  (get_local $0)))  (local "g857541" f32)))   (get_local $1)   (f32.gt  (i64.convert_s/f32   (i64.ge_u  (get_local $0)  (local "g857542" i32)))  (get_local $1)))))  (local "g857543" i32)))  (i32.ge_u  (get_local $1)  (if  (local "g857544" f64)   (get_local $0)   (i64.rotr  (get_local $0)  (f64.convert_s/i64   (f64.eq  (i32.convert_u/f64   (i32.rotl  (get_local $1)  (get_local $1)))  (local "g857562" i32))))))))   (get_local $0))  (get_local $0))))   (i64.eqz  (f32.convert_u/i64   (f32.copysign  (get_local $0)  (get_local $1)))  (local "g857563" i64)))  (get_local $1))   (get_local $0))))  (get_local $0)))))   (get_local $1))  (local "g857564" i64))  (f32.convert_u/i64   (f32.add  (get_local $0)  (local "g857565" f64)))))))  (f32.sub  (f64.ne  (get_local $0)  (f64.abs  (i32.convert_s/f64   (i32.lt_u  (i64.shr_s  (get_local $1)  (f32.convert_s/i64   (f32.ceil  (get_local $0)  (f64.eq  (get_local $0)  (local "g857566" f64)))))  (get_local $1)))  (i32.convert_u/f64   (i32.rem_u  (get_local $1)  (get_local $0)))))  (get_local $1)))   (get_local $1)   (f32.sqrt  (get_local $1)  (get_local $1)))   (get_local $0))) )