(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (f32.ge  (f64.abs  (f64.max  (i32.convert_s/f64   (i32.ge_s  (get_local $1)  (local "g323023" f32)))  (get_local $0))  (f64.copysign  (if  (local "g323024" f64)   (i32.convert_u/f64   (i32.ge_u  (get_local $0)  (get_local $0)))   (if  (if  (f64.sqrt  (get_local $1)  (get_local $0))   (i64.convert_u/f64   (i64.clz  (get_local $0)  (if  (get_local $1)   (if  (local "g323027" f64)   (get_local $0)   (get_local $0))   (local "g323028" f64))))   (f32.copysign  (f64.neg  (f32.abs  (f32.le  (local "g323029" i64)  (f64.le  (f64.trunc  (get_local $0)  (local "g323031" i32))  (get_local $1)))  (f64.eq  (get_local $0)  (f32.le  (get_local $0)  (f64.floor  (get_local $1)  (get_local $1)))))  (get_local $1))  (get_local $0)))   (i64.convert_u/f64   (i64.xor  (local "g323034" i64)  (if  (get_local $0)   (get_local $0)   (get_local $1))))   (if  (f64.add  (get_local $1)  (get_local $0))   (get_local $0)   (i32.convert_u/f64   (i32.lt_s  (get_local $0)  (if  (i32.mul  (i64.ge_s  (get_local $0)  (get_local $1))  (f32.convert_u/i32   (f32.sqrt  (i32.convert_u/f32   (i32.div_u  (f64.convert_u/i32   (f64.ne  (get_local $0)  (local "g323035" i64)))  (get_local $1)))  (get_local $0))))   (get_local $1)   (i32.clz  (get_local $1)  (get_local $0))))))))  (get_local $0)))  (get_local $1))   (if  (local "g323036" f32)   (get_local $1)   (local "g323037" f32))   (get_local $1))) )