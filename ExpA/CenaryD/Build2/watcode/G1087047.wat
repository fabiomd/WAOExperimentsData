(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (set_local $3  (get_local $1)) (f64.convert_u/i32   (f64.max  (i32.convert_u/f64   (i32.rem_u  (if  (i32.clz  (i64.ctz  (get_local $1)  (i64.and  (f32.convert_u/i64   (f32.sub  (if  (f32.eq  (get_local $0)  (get_local $0))   (i32.convert_u/f32   (i32.popcnt  (get_local $1)  (f64.convert_u/i32   (f64.ge  (local "g1087059" i32)  (get_local $0)))))   (local "g1087060" i64))  (get_local $1)))  (f64.convert_s/i64   (f64.neg  (get_local $1)  (f32.gt  (local "g1087064" f32)  (local "g1087065" f32))))))  (i64.clz  (local "g1087066" f32)  (get_local $1)))   (if  (get_local $1)   (get_local $0)   (local "g1087067" i64))   (if  (f64.convert_u/i32   (f64.ne  (get_local $1)  (get_local $1)))   (if  (local "g1087068" i32)   (i32.eq  (f32.convert_s/i32   (f32.min  (f64.nearest  (i32.convert_s/f64   (i32.shl  (if  (local "g1087070" f64)   (local "g1087071" f64)   (get_local $0))  (get_local $1)))  (if  (local "g1087072" f64)   (get_local $1)   (get_local $0)))  (get_local $1)))  (local "g1087073" f32))   (f32.convert_u/i32   (f32.nearest  (if  (get_local $0)   (get_local $0)   (get_local $0))  (f64.add  (get_local $0)  (get_local $1)))))   (f32.convert_u/i32   (f32.div  (get_local $1)  (get_local $0)))))  (f32.convert_u/i32   (f32.sqrt  (i32.convert_s/f32   (i32.gt_s  (get_local $0)  (get_local $0)))  (local "g1087075" i64)))))  (if  (get_local $1)   (get_local $1)   (i32.convert_u/f64   (i32.sub  (i32.eq  (get_local $1)  (get_local $1))  (get_local $0))))))) )