(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (f32.le  (if  (get_local $1)   (i32.convert_s/f32   (i32.gt_s  (local "g333268" i64)  (local "g333269" i32)))   (if  (local "g333270" f64)   (get_local $1)   (i64.convert_s/f32   (i64.eq  (if  (get_local $1)   (get_local $1)   (get_local $0))  (if  (get_local $0)   (f32.convert_s/i64   (f32.nearest  (get_local $0)  (i64.convert_u/f32   (i64.le_u  (f64.convert_s/i64   (f64.sub  (get_local $0)  (i64.convert_s/f64   (i64.rem_u  (get_local $0)  (local "g373390" f64)))))  (if  (i64.or  (i64.ne  (if  (get_local $0)   (get_local $1)   (get_local $1))  (get_local $0))  (local "g373429" f32))   (get_local $0)   (get_local $1))))))   (get_local $1))))))  (i32.convert_u/f32   (i32.or  (i32.ge_s  (get_local $0)  (if  (get_local $0)   (get_local $1)   (local "g373439" f32)))  (f64.convert_u/i32   (f64.sub  (local "g373440" f32)  (i32.convert_s/f64   (i32.div_u  (get_local $0)  (local "g373441" i32))))))))   (if  (if  (if  (get_local $1)   (get_local $1)   (f64.ceil  (get_local $1)  (get_local $0)))   (local "g373447" i32)   (get_local $0))   (if  (get_local $0)   (get_local $1)   (f64.lt  (f32.neg  (i64.convert_s/f32   (i64.le_s  (i32.sub  (get_local $1)  (get_local $0))  (if  (get_local $1)   (if  (i64.ge_u  (i64.clz  (get_local $0)  (f32.convert_s/i64   (f32.sub  (if  (get_local $0)   (get_local $1)   (get_local $0))  (if  (local "g373453" i32)   (f32.eq  (i32.convert_u/f32   (i32.eq  (if  (get_local $0)   (if  (get_local $1)   (f32.convert_s/i32   (f32.sqrt  (get_local $0)  (get_local $0)))   (local "g373454" f32))   (get_local $0))  (get_local $1)))  (if  (get_local $1)   (f32.min  (i32.convert_s/f32   (i32.lt_s  (get_local $1)  (get_local $1)))  (get_local $0))   (local "g373518" i32)))   (f64.abs  (get_local $0)  (get_local $0))))))  (get_local $1))   (get_local $0)   (get_local $1))   (i32.and  (get_local $1)  (i64.and  (if  (if  (f32.convert_u/i64   (f32.sqrt  (get_local $1)  (get_local $0)))   (local "g373519" i32)   (f64.convert_u/i64   (f64.ne  (get_local $1)  (f32.ge  (i64.convert_s/f32   (i64.div_u  (get_local $0)  (local "g373521" f64)))  (get_local $1)))))   (get_local $0)   (f32.convert_u/i64   (f32.trunc  (get_local $0)  (i32.convert_s/f32   (i32.ge_u  (if  (i32.eq  (local "g373548" f64)  (local "g373549" i32))   (get_local $0)   (get_local $0))  (f64.convert_s/i32   (f64.nearest  (if  (get_local $0)   (local "g373551" f64)   (i64.convert_s/f64   (i64.ge_u  (i32.ge_s  (if  (f32.convert_u/i32   (f32.min  (i64.convert_u/f32   (i64.eq  (f64.convert_s/i64   (f64.copysign  (get_local $1)  (f32.le  (i32.convert_s/f32   (i32.ne  (f64.convert_s/i32   (f64.div  (if  (get_local $0)   (local "g373553" f64)   (get_local $0))  (get_local $1)))  (get_local $1)))  (if  (get_local $0)   (get_local $0)   (i32.convert_s/f32   (i32.ge_s  (f32.convert_u/i32   (f32.abs  (i32.convert_s/f32   (i32.shr_s  (get_local $0)  (f32.convert_s/i32   (f32.sqrt  (local "g373556" f64)  (i64.convert_u/f32   (i64.gt_u  (f64.convert_s/i64   (f64.copysign  (if  (get_local $1)   (get_local $1)   (local "g373557" f32))  (get_local $1)))  (i64.le_s  (local "g373558" i64)  (i64.sub  (get_local $1)  (local "g373559" f32)))))))))  (i32.convert_s/f32   (i32.xor  (get_local $0)  (get_local $1)))))  (i64.shl  (if  (get_local $0)   (f64.convert_u/i64   (f64.ne  (local "g373971" i32)  (get_local $0)))   (i32.eq  (get_local $1)  (local "g373974" i64)))  (get_local $0))))))))  (get_local $0)))  (get_local $0)))   (get_local $1)   (f32.convert_u/i32   (f32.sub  (get_local $0)  (local "g373978" f32))))  (get_local $0))  (get_local $0))))  (get_local $0))))))))  (f64.convert_s/i64   (f64.sub  (get_local $0)  (get_local $1))))))))  (get_local $0))  (get_local $1)))   (local "g373981" i32))   (get_local $0))) )