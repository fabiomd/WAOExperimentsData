(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (i64.clz  (get_local $1)  (i32.shr_s  (get_local $1)  (f32.convert_u/i32   (f32.nearest  (i64.convert_u/f32   (i64.popcnt  (get_local $1)  (f64.convert_s/i64   (f64.lt  (get_local $0)  (if  (i32.convert_s/f64   (i32.eq  (i32.lt_s  (f64.convert_s/i32   (f64.ceil  (f32.ge  (get_local $0)  (i32.convert_s/f32   (i32.gt_u  (f32.convert_u/i32   (f32.min  (f64.trunc  (f32.eq  (local "g545102" i32)  (get_local $1))  (f32.max  (f64.nearest  (i64.convert_s/f64   (i64.gt_u  (i64.and  (if  (local "g545103" f64)   (get_local $1)   (local "g545104" i32))  (get_local $0))  (get_local $0)))  (i64.convert_s/f64   (i64.rotr  (f32.convert_u/i64   (f32.sub  (f64.add  (local "g545105" i64)  (get_local $0))  (local "g545106" i64)))  (get_local $1))))  (get_local $1)))  (local "g545107" i64)))  (get_local $0))))  (f32.lt  (i64.convert_s/f32   (i64.le_u  (i64.rem_s  (get_local $1)  (i32.shr_s  (local "g545108" i32)  (local "g545109" f64)))  (get_local $1)))  (f32.add  (i64.convert_u/f32   (i64.clz  (get_local $1)  (f64.convert_s/i64   (f64.lt  (f32.gt  (f64.eq  (get_local $1)  (get_local $0))  (get_local $0))  (get_local $1)))))  (local "g545111" i32)))))  (get_local $0))  (f32.convert_u/i32   (f32.ge  (if  (f64.sub  (get_local $0)  (if  (get_local $0)   (local "g545112" f64)   (get_local $1)))   (local "g545113" f64)   (local "g545114" f64))  (local "g545115" f32)))))   (get_local $1)   (if  (get_local $1)   (get_local $1)   (get_local $1)))))))  (local "g545116" i32))))) (set_local $3  (get_local $1)) (i32.add  (get_local $0)  (get_local $1))) )