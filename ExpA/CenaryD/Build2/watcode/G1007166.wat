(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.floor  (get_local $1)  (if  (local "g1007167" f64)   (if  (i64.convert_s/f32   (i64.rem_s  (get_local $0)  (get_local $1)))   (if  (get_local $1)   (f32.eq  (f32.ceil  (get_local $0)  (f32.mul  (f64.gt  (get_local $1)  (get_local $0))  (i32.convert_u/f32   (i32.le_s  (if  (get_local $0)   (get_local $0)   (f32.convert_u/i32   (f32.mul  (f64.div  (get_local $0)  (get_local $1))  (f64.neg  (f32.floor  (if  (i64.convert_s/f32   (i64.xor  (f32.convert_u/i64   (f32.gt  (get_local $0)  (if  (get_local $0)   (get_local $0)   (local "g1007172" i64))))  (f32.convert_s/i64   (f32.ge  (get_local $1)  (if  (get_local $1)   (i64.convert_s/f32   (i64.clz  (if  (local "g1010925" i32)   (get_local $0)   (get_local $0))  (local "g1010928" f32)))   (f32.ne  (if  (get_local $0)   (get_local $1)   (get_local $0))  (get_local $0)))))))   (get_local $1)   (get_local $0))  (i64.convert_u/f32   (i64.le_s  (f32.convert_s/i64   (f32.le  (get_local $0)  (i64.convert_s/f32   (i64.and  (get_local $1)  (local "g1010931" i64)))))  (f32.convert_u/i64   (f32.eq  (local "g1010932" i64)  (get_local $1))))))  (get_local $1)))))  (local "g1010933" i32)))))  (if  (local "g1010934" i32)   (get_local $1)   (get_local $0)))   (local "g1010935" f64))   (local "g1010936" f64))   (f64.lt  (get_local $1)  (if  (i32.convert_u/f64   (i32.gt_s  (i64.rotl  (i32.mul  (f32.convert_s/i32   (f32.abs  (i64.convert_u/f32   (i64.popcnt  (get_local $0)  (f32.convert_s/i64   (f32.abs  (get_local $0)  (local "g1010937" f32)))))  (get_local $0)))  (local "g1010938" i64))  (if  (get_local $1)   (get_local $0)   (local "g1010939" f32)))  (i32.le_s  (get_local $0)  (local "g1010940" f64))))   (f32.sqrt  (get_local $0)  (local "g1010941" i64))   (f64.ne  (get_local $0)  (i64.convert_u/f64   (i64.eqz  (if  (get_local $1)   (get_local $1)   (f64.convert_s/i64   (f64.mul  (if  (i64.convert_s/f64   (i64.rem_u  (f64.convert_s/i64   (f64.add  (local "g1010942" f32)  (get_local $1)))  (local "g1010944" f64)))   (get_local $1)   (f64.neg  (local "g1010945" i32)  (i32.convert_u/f64   (i32.div_u  (get_local $1)  (local "g1010946" f64)))))  (get_local $1))))  (f32.convert_s/i64   (f32.eq  (local "g1010947" f32)  (get_local $1))))))))))) )