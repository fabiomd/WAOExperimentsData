(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (f64.mul  (f32.sub  (if  (i32.convert_u/f32   (i32.div_s  (get_local $1)  (get_local $1)))   (get_local $1)   (i32.convert_s/f32   (i32.ne  (f64.convert_s/i32   (f64.trunc  (i64.convert_u/f64   (i64.xor  (i64.rem_s  (local "g548097" f64)  (f64.convert_u/i64   (f64.sub  (i32.convert_u/f64   (i32.popcnt  (i64.le_u  (get_local $0)  (local "g548098" i32))  (i32.and  (get_local $0)  (get_local $1))))  (get_local $0))))  (if  (if  (get_local $1)   (i64.le_s  (local "g548103" f32)  (if  (local "g548104" f32)   (get_local $1)   (local "g548105" f32)))   (get_local $0))   (get_local $0)   (get_local $0))))  (local "g548106" f32)))  (get_local $0))))  (f64.sqrt  (i64.convert_s/f64   (i64.lt_u  (f32.convert_s/i64   (f32.max  (get_local $1)  (i64.convert_s/f32   (i64.or  (get_local $0)  (f64.convert_u/i64   (f64.min  (if  (i64.convert_u/f64   (i64.clz  (get_local $0)  (local "g548126" f32)))   (f64.min  (if  (get_local $0)   (i64.convert_u/f64   (i64.gt_u  (get_local $0)  (if  (get_local $0)   (i64.xor  (get_local $0)  (local "g548128" f32))   (f32.convert_u/i64   (f32.add  (get_local $1)  (if  (get_local $0)   (i32.convert_u/f32   (i32.rem_u  (get_local $1)  (get_local $1)))   (get_local $0)))))))   (get_local $0))  (get_local $0))   (f32.sub  (get_local $1)  (local "g548131" f64)))  (if  (get_local $0)   (f64.floor  (local "g548132" f64)  (local "g548133" f64))   (f32.min  (f64.max  (get_local $0)  (if  (get_local $0)   (get_local $1)   (get_local $0)))  (get_local $0)))))))))  (get_local $1)))  (get_local $1)))  (get_local $0))   (local "g548138" i64)   (f32.abs  (get_local $1)  (if  (local "g548149" f64)   (get_local $1)   (get_local $1))))) )