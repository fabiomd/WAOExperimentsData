(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (local "g1006783" i64)   (get_local $0)   (i64.convert_u/f64   (i64.eq  (if  (i32.and  (i64.clz  (get_local $0)  (get_local $1))  (i64.div_s  (f32.convert_s/i64   (f32.lt  (i32.convert_u/f32   (i32.popcnt  (i32.ne  (get_local $0)  (local "g1006894" f32))  (local "g1006895" i64)))  (if  (f32.min  (get_local $1)  (get_local $0))   (get_local $1)   (local "g1006896" f64))))  (get_local $0)))   (i64.or  (get_local $0)  (i64.eqz  (f64.convert_s/i64   (f64.lt  (i64.convert_u/f64   (i64.shl  (local "g1006897" f64)  (get_local $0)))  (f64.ne  (f32.max  (local "g1006900" i32)  (if  (get_local $0)   (if  (local "g1006901" f32)   (if  (get_local $1)   (get_local $1)   (get_local $1))   (get_local $1))   (get_local $1)))  (get_local $1))))  (i64.eqz  (f64.convert_u/i64   (f64.ne  (get_local $0)  (f32.div  (i64.convert_s/f32   (i64.ge_s  (i64.gt_u  (i32.div_u  (get_local $1)  (f64.convert_u/i32   (f64.trunc  (f64.trunc  (if  (f32.sub  (local "g1006917" i32)  (get_local $0))   (get_local $0)   (get_local $0))  (get_local $1))  (if  (f32.mul  (i32.convert_u/f32   (i32.clz  (f64.convert_u/i32   (f64.eq  (f64.ceil  (f64.sqrt  (i64.convert_u/f64   (i64.clz  (local "g1007416" f64)  (get_local $0)))  (f32.trunc  (get_local $0)  (if  (local "g1007417" f32)   (get_local $1)   (get_local $1))))  (f32.le  (local "g1007418" f64)  (get_local $1)))  (if  (i32.convert_u/f64   (i32.mul  (local "g1007419" i64)  (get_local $0)))   (get_local $0)   (local "g1007420" i64))))  (local "g1007421" f64)))  (f32.copysign  (get_local $0)  (f64.sub  (f64.eq  (get_local $0)  (if  (if  (get_local $0)   (get_local $0)   (i64.convert_u/f64   (i64.rem_u  (get_local $1)  (local "g1007439" f64))))   (get_local $1)   (if  (i64.convert_s/f64   (i64.div_s  (f64.convert_u/i64   (f64.trunc  (i32.convert_s/f64   (i32.ge_s  (f32.convert_s/i32   (f32.sub  (if  (get_local $0)   (f64.ge  (f64.floor  (get_local $1)  (get_local $1))  (get_local $0))   (f64.nearest  (local "g1007441" i32)  (i64.convert_s/f64   (i64.ctz  (get_local $1)  (get_local $0)))))  (get_local $1)))  (get_local $1)))  (if  (f32.trunc  (i32.convert_u/f32   (i32.rotl  (i32.rem_u  (if  (i32.clz  (local "g1007442" i32)  (get_local $1))   (i64.clz  (get_local $0)  (f64.convert_u/i64   (f64.ge  (local "g1007443" i32)  (get_local $1))))   (local "g1007444" i64))  (f32.convert_u/i32   (f32.le  (f32.sub  (get_local $0)  (local "g1007447" f64))  (get_local $0))))  (get_local $1)))  (get_local $1))   (local "g1007448" i32)   (get_local $0))))  (get_local $1)))   (get_local $0)   (f64.gt  (local "g1007449" i32)  (local "g1007450" f64)))))  (local "g1007451" i64))))   (f32.gt  (get_local $0)  (get_local $0))   (get_local $1)))))  (get_local $1))  (local "g1007454" i64)))  (local "g1007455" i64))))  (get_local $1))))   (get_local $1))  (get_local $0))))) )