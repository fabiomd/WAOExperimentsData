(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i32.sub  (if  (get_local $1)   (local "g1105670" f32)   (get_local $0))  (if  (local "g1105671" f32)   (if  (if  (get_local $0)   (get_local $1)   (f64.convert_u/i32   (f64.ne  (local "g1105675" f32)  (get_local $0))))   (f64.convert_s/i32   (f64.add  (if  (get_local $0)   (local "g1105679" i32)   (get_local $1))  (get_local $0)))   (local "g1105680" f64))   (if  (get_local $1)   (get_local $0)   (f64.convert_u/i32   (f64.div  (get_local $1)  (f64.sub  (get_local $0)  (f32.sqrt  (if  (get_local $1)   (get_local $1)   (get_local $0))  (i32.convert_s/f32   (i32.le_u  (local "g1105683" f32)  (if  (if  (if  (f32.convert_s/i32   (f32.gt  (i32.convert_u/f32   (i32.gt_s  (get_local $0)  (if  (i64.and  (get_local $0)  (get_local $0))   (get_local $1)   (get_local $0))))  (i32.convert_u/f32   (i32.shl  (i32.rotl  (local "g1105686" i64)  (get_local $0))  (i32.rotl  (get_local $0)  (get_local $0))))))   (get_local $1)   (i32.and  (f64.convert_u/i32   (f64.sub  (local "g1105688" i32)  (i32.convert_s/f64   (i32.eq  (i64.le_s  (i64.rotl  (get_local $1)  (f32.convert_s/i64   (f32.max  (get_local $0)  (get_local $1))))  (get_local $1))  (f64.convert_s/i32   (f64.floor  (get_local $0)  (local "g1105694" f64)))))))  (get_local $0)))   (get_local $0)   (i64.ctz  (get_local $1)  (get_local $1)))   (local "g1105695" i64)   (i64.mul  (if  (f32.convert_s/i64   (f32.ge  (local "g1105698" f64)  (get_local $0)))   (local "g1105700" i64)   (get_local $0))  (get_local $1))))))))))))) )