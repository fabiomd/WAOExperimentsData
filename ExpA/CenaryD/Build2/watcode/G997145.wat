(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (if  (i32.clz  (i64.add  (f64.convert_u/i64   (f64.lt  (get_local $1)  (local "g997161" f32)))  (i64.sub  (get_local $0)  (local "g997162" i64)))  (f32.convert_u/i32   (f32.div  (i32.convert_u/f32   (i32.div_u  (f32.convert_u/i32   (f32.sqrt  (get_local $1)  (f64.sqrt  (i64.convert_u/f64   (i64.rotl  (get_local $0)  (get_local $0)))  (i32.convert_s/f64   (i32.le_s  (get_local $1)  (f32.convert_u/i32   (f32.gt  (get_local $1)  (if  (i64.convert_u/f32   (i64.add  (f32.convert_u/i64   (f32.max  (f32.ge  (get_local $1)  (local "g997163" i32))  (f64.le  (i32.convert_u/f64   (i32.le_u  (local "g997164" i32)  (f64.convert_s/i32   (f64.abs  (f32.mul  (get_local $0)  (get_local $1))  (get_local $1)))))  (f32.nearest  (f32.abs  (i32.convert_s/f32   (i32.div_s  (get_local $1)  (i64.gt_s  (get_local $0)  (get_local $1))))  (get_local $0))  (get_local $1)))))  (get_local $0)))   (if  (get_local $0)   (i32.convert_s/f32   (i32.xor  (if  (get_local $0)   (local "g997168" i64)   (get_local $1))  (if  (get_local $0)   (get_local $1)   (get_local $1))))   (i64.convert_u/f32   (i64.clz  (if  (get_local $0)   (local "g997170" i64)   (local "g997171" f32))  (i32.shl  (get_local $1)  (get_local $0)))))   (get_local $0)))))))))  (get_local $0)))  (local "g997176" f32))))   (f64.ge  (f64.lt  (get_local $1)  (get_local $0))  (local "g997177" f32))   (get_local $1))   (local "g997178" i32)   (get_local $0))) )