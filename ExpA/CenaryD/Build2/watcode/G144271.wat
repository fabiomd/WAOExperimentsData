(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (set_local $2  (get_local $0)) (f32.convert_u/i32   (f32.sqrt  (get_local $1)  (if  (i64.convert_s/f32   (i64.mul  (get_local $0)  (get_local $0)))   (if  (if  (local "g144276" i32)   (get_local $0)   (f64.div  (get_local $0)  (f32.lt  (get_local $0)  (get_local $0))))   (get_local $1)   (get_local $0))   (if  (get_local $1)   (i32.convert_s/f32   (i32.le_s  (local "g144280" i32)  (get_local $1)))   (f64.lt  (f64.neg  (get_local $1)  (f32.ge  (get_local $1)  (i64.convert_s/f32   (i64.lt_u  (if  (i64.div_u  (get_local $0)  (get_local $0))   (f64.convert_u/i64   (f64.min  (local "g144281" f64)  (get_local $1)))   (i64.mul  (get_local $1)  (local "g144289" f32)))  (local "g144290" f64)))))  (i32.convert_u/f64   (i32.rem_s  (f32.convert_u/i32   (f32.add  (get_local $0)  (get_local $0)))  (if  (i64.le_s  (i64.ne  (get_local $1)  (i32.lt_u  (local "g144293" f64)  (get_local $1)))  (local "g144294" i32))   (if  (i64.clz  (f32.convert_u/i64   (f32.nearest  (get_local $1)  (get_local $0)))  (get_local $1))   (get_local $0)   (get_local $0))   (f32.convert_u/i32   (f32.abs  (get_local $0)  (get_local $0))))))))))) (result i32)) )