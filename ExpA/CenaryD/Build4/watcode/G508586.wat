(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.neg  (i32.convert_s/f64   (i32.xor  (get_local $0)  (i64.shr_u  (if  (get_local $0)   (i32.add  (local "g509662" f64)  (local "g509663" f64))   (i32.or  (f32.convert_u/i32   (f32.ge  (i64.convert_u/f32   (i64.popcnt  (get_local $0)  (i64.rotl  (get_local $1)  (local "g509664" f64))))  (local "g509668" f32)))  (f32.convert_s/i32   (f32.floor  (get_local $0)  (if  (i64.convert_u/f32   (i64.gt_s  (local "g509673" f64)  (f64.convert_u/i64   (f64.lt  (f64.neg  (f64.ge  (local "g509676" f64)  (f64.div  (get_local $1)  (i64.convert_s/f64   (i64.le_s  (get_local $1)  (get_local $0)))))  (get_local $0))  (i32.convert_u/f64   (i32.popcnt  (f32.convert_u/i32   (f32.min  (if  (f32.eq  (i64.convert_u/f32   (i64.shr_s  (f32.convert_u/i64   (f32.ceil  (get_local $1)  (get_local $0)))  (if  (get_local $1)   (local "g509677" i64)   (get_local $1))))  (get_local $1))   (get_local $0)   (get_local $1))  (get_local $0)))  (get_local $1)))))))   (i64.convert_u/f32   (i64.eqz  (local "g509678" f64)  (get_local $0)))   (i32.convert_s/f32   (i32.ne  (local "g509679" i64)  (f32.convert_s/i32   (f32.mul  (i64.convert_s/f32   (i64.clz  (get_local $0)  (get_local $0)))  (get_local $0))))))))))  (local "g509680" f64))))  (f32.le  (i64.convert_s/f32   (i64.mul  (i32.and  (f32.convert_u/i32   (f32.abs  (local "g509681" f64)  (f64.max  (get_local $0)  (get_local $1))))  (i64.rem_s  (get_local $1)  (local "g509751" i32)))  (get_local $1)))  (local "g509752" f64)))) )