(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (f32.convert_u/i32   (f32.nearest  (local "g108680" i32)  (i32.convert_s/f32   (i32.lt_u  (f64.convert_s/i32   (f64.max  (f64.abs  (get_local $1)  (get_local $0))  (local "g108681" f32)))  (if  (f32.convert_s/i32   (f32.sub  (i64.convert_s/f32   (i64.ctz  (f64.convert_u/i64   (f64.copysign  (if  (get_local $1)   (local "g108682" i64)   (f64.neg  (get_local $1)  (i64.convert_u/f64   (i64.le_s  (i64.popcnt  (f64.convert_u/i64   (f64.le  (get_local $0)  (i64.convert_u/f64   (i64.ge_s  (local "g108683" i32)  (local "g108690" i64)))))  (local "g108691" f64))  (if  (f32.convert_u/i64   (f32.ne  (local "g108692" f32)  (if  (i64.convert_s/f32   (i64.lt_s  (f32.convert_s/i64   (f32.ceil  (get_local $1)  (get_local $1)))  (i32.popcnt  (local "g108693" f64)  (get_local $1))))   (get_local $0)   (get_local $1))))   (f64.convert_s/i64   (f64.neg  (local "g108694" i64)  (if  (get_local $0)   (local "g108697" f64)   (if  (local "g108698" f64)   (local "g108700" i32)   (local "g108701" f64)))))   (if  (get_local $1)   (if  (get_local $1)   (get_local $1)   (if  (i32.sub  (local "g108702" f32)  (get_local $0))   (get_local $0)   (get_local $0)))   (i64.eq  (local "g108703" f64)  (local "g108704" i32))))))))  (get_local $1)))  (get_local $0)))  (i32.convert_s/f32   (i32.xor  (get_local $0)  (i32.ctz  (get_local $1)  (if  (f32.convert_u/i32   (f32.add  (local "g108706" i64)  (get_local $0)))   (get_local $0)   (i64.ge_s  (get_local $0)  (i64.eqz  (f64.convert_u/i64   (f64.min  (get_local $1)  (get_local $1)))  (get_local $0)))))))))   (get_local $0)   (f32.convert_s/i32   (f32.eq  (local "g108765" f64)  (local "g108766" f32)))))))) (set_local $2  (get_local $0)) (set_local $3  (get_local $1)) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )