(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (local "g182115" f32)   (if  (get_local $1)   (get_local $1)   (if  (get_local $0)   (get_local $1)   (get_local $1)))   (if  (get_local $0)   (i64.xor  (get_local $0)  (if  (local "g182118" i64)   (f64.convert_s/i64   (f64.sub  (local "g182119" f32)  (local "g182120" f64)))   (if  (if  (if  (f64.convert_u/i64   (f64.min  (get_local $0)  (get_local $0)))   (f64.convert_u/i64   (f64.min  (get_local $1)  (get_local $0)))   (f64.convert_s/i64   (f64.sqrt  (local "g182122" f64)  (if  (f64.min  (get_local $0)  (get_local $0))   (get_local $1)   (get_local $1)))))   (get_local $1)   (get_local $1))   (if  (if  (get_local $1)   (f64.convert_s/i64   (f64.neg  (f32.ge  (get_local $0)  (local "g182133" f32))  (local "g182134" i32)))   (if  (get_local $1)   (i32.clz  (i32.rotr  (get_local $1)  (get_local $1))  (local "g182140" i64))   (i32.lt_s  (i64.le_s  (get_local $1)  (i32.popcnt  (get_local $0)  (i64.div_s  (get_local $0)  (local "g182141" i32))))  (local "g182142" i64))))   (get_local $0)   (if  (get_local $1)   (i64.div_u  (get_local $1)  (get_local $1))   (get_local $0)))   (local "g182143" f64))))   (i64.add  (f32.convert_s/i64   (f32.ge  (f64.ge  (get_local $0)  (get_local $0))  (get_local $1)))  (i64.rotr  (i64.mul  (get_local $0)  (local "g182146" i64))  (if  (local "g182147" i32)   (get_local $0)   (local "g182148" i32))))))) )