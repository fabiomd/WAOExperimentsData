(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i64.clz  (i32.div_u  (i64.rotr  (f32.convert_s/i64   (f32.sqrt  (if  (local "g110244" i64)   (get_local $0)   (local "g110245" f64))  (if  (get_local $1)   (get_local $1)   (i64.convert_s/f32   (i64.ge_s  (i64.ge_u  (get_local $0)  (if  (get_local $1)   (local "g110246" f32)   (local "g110247" i32)))  (local "g110248" f32))))))  (if  (get_local $0)   (if  (i32.rotr  (local "g110250" f32)  (if  (f32.convert_u/i32   (f32.min  (get_local $0)  (i32.convert_u/f32   (i32.add  (i64.rem_u  (local "g110252" f64)  (get_local $1))  (get_local $1)))))   (if  (get_local $1)   (i64.popcnt  (if  (i32.rem_s  (get_local $1)  (i32.shl  (get_local $0)  (get_local $1)))   (if  (i32.lt_u  (i32.clz  (local "g110268" f32)  (get_local $0))  (f64.convert_u/i32   (f64.le  (f32.max  (get_local $0)  (local "g110272" f64))  (i32.convert_u/f64   (i32.le_s  (i64.clz  (get_local $0)  (f64.convert_u/i64   (f64.ge  (local "g110282" i32)  (i32.convert_s/f64   (i32.shr_u  (get_local $0)  (get_local $0))))))  (get_local $1))))))   (get_local $0)   (i32.div_s  (get_local $0)  (f64.convert_s/i32   (f64.gt  (get_local $1)  (i64.convert_u/f64   (i64.shr_u  (get_local $0)  (i32.clz  (local "g110284" f64)  (get_local $0))))))))   (get_local $1))  (get_local $0))   (get_local $0))   (i64.add  (get_local $1)  (if  (get_local $0)   (get_local $0)   (get_local $1)))))   (f32.convert_s/i64   (f32.ge  (get_local $0)  (local "g110285" f64)))   (if  (f32.convert_s/i64   (f32.ge  (get_local $1)  (get_local $1)))   (f32.convert_u/i64   (f32.sqrt  (get_local $1)  (i32.convert_s/f32   (i32.lt_u  (get_local $1)  (f32.convert_s/i32   (f32.floor  (get_local $1)  (if  (local "g110435" f32)   (local "g110436" i32)   (get_local $1))))))))   (get_local $0)))   (get_local $1)))  (i32.clz  (i32.clz  (get_local $0)  (f64.convert_u/i32   (f64.max  (local "g110438" f64)  (i64.convert_s/f64   (i64.mul  (get_local $0)  (get_local $1))))))  (f32.convert_u/i32   (f32.neg  (get_local $0)  (i32.convert_u/f32   (i32.mul  (local "g110447" f64)  (local "g110448" i32)))))))  (get_local $0))) )