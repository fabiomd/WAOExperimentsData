(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.convert_s/i32   (f64.sqrt  (f64.nearest  (get_local $1)  (get_local $0))  (if  (f32.sub  (local "g756449" i32)  (i64.convert_u/f32   (i64.le_u  (get_local $1)  (f64.convert_s/i64   (f64.trunc  (if  (get_local $1)   (local "g756450" f64)   (i32.convert_u/f64   (i32.shr_u  (f64.convert_s/i32   (f64.eq  (local "g756452" i64)  (f64.gt  (local "g756453" i64)  (f64.neg  (f32.abs  (get_local $0)  (f64.le  (local "g756459" i32)  (local "g756460" i64)))  (get_local $0)))))  (f64.convert_u/i32   (f64.eq  (get_local $1)  (get_local $0))))))  (local "g756464" f64))))))   (f64.sqrt  (local "g756465" i64)  (i32.convert_u/f64   (i32.lt_u  (if  (get_local $0)   (f64.convert_s/i32   (f64.ge  (i64.convert_u/f64   (i64.shl  (local "g756471" f64)  (f64.convert_u/i64   (f64.gt  (i32.convert_u/f64   (i32.sub  (f64.convert_u/i32   (f64.ceil  (get_local $0)  (local "g756473" i32)))  (local "g756474" i64)))  (i32.convert_u/f64   (i32.gt_u  (get_local $1)  (local "g756475" f32)))))))  (get_local $1)))   (get_local $0))  (i32.ne  (get_local $0)  (if  (f32.convert_u/i32   (f32.eq  (if  (local "g756478" f32)   (get_local $0)   (local "g756479" i64))  (get_local $1)))   (i32.rotl  (get_local $0)  (get_local $0))   (get_local $1))))))   (i32.convert_s/f64   (i32.eq  (i64.eqz  (get_local $0)  (f64.convert_u/i64   (f64.le  (local "g756481" i32)  (f64.eq  (get_local $0)  (get_local $0)))))  (get_local $1))))))) )