(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.convert_s/i32   (f32.neg  (if  (local "g682105" i32)   (get_local $0)   (f32.ceil  (get_local $0)  (get_local $0)))  (if  (i32.convert_s/f32   (i32.shr_u  (get_local $1)  (if  (get_local $0)   (get_local $0)   (get_local $1))))   (if  (local "g682110" f64)   (i64.convert_u/f32   (i64.ge_s  (get_local $0)  (get_local $1)))   (get_local $0))   (i64.convert_u/f32   (i64.ctz  (local "g682112" f64)  (if  (get_local $0)   (i32.lt_s  (i32.le_u  (get_local $0)  (local "g682113" i64))  (f64.convert_u/i32   (f64.max  (get_local $1)  (local "g682114" i32))))   (if  (f64.convert_u/i64   (f64.eq  (get_local $1)  (get_local $0)))   (f64.convert_u/i64   (f64.nearest  (i64.convert_u/f64   (i64.lt_s  (f64.convert_s/i64   (f64.min  (i64.convert_s/f64   (i64.ge_s  (get_local $1)  (f64.convert_u/i64   (f64.nearest  (get_local $0)  (get_local $1)))))  (f64.eq  (i64.convert_u/f64   (i64.popcnt  (get_local $0)  (get_local $0)))  (f64.floor  (get_local $1)  (get_local $1)))))  (f32.convert_s/i64   (f32.add  (get_local $1)  (if  (f64.mul  (local "g682128" i64)  (get_local $0))   (f32.ceil  (f64.sqrt  (get_local $0)  (if  (get_local $0)   (get_local $0)   (get_local $1)))  (get_local $1))   (f32.div  (i64.convert_u/f32   (i64.sub  (get_local $1)  (f32.convert_s/i64   (f32.trunc  (get_local $1)  (local "g682147" i32)))))  (get_local $0)))))))  (get_local $0)))   (get_local $1))))))))) )