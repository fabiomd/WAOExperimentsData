(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.sqrt  (if  (if  (get_local $0)   (f32.floor  (get_local $0)  (get_local $1))   (i32.convert_s/f32   (i32.clz  (local "g110152" i32)  (f64.convert_u/i32   (f64.lt  (f32.ge  (local "g110153" f64)  (i32.convert_u/f32   (i32.le_u  (get_local $1)  (i64.clz  (get_local $0)  (get_local $0)))))  (i32.convert_u/f64   (i32.and  (f32.convert_u/i32   (f32.gt  (get_local $1)  (get_local $0)))  (i32.or  (local "g110154" f32)  (i32.shr_u  (i64.mul  (if  (get_local $1)   (i64.ge_s  (get_local $1)  (if  (get_local $0)   (local "g110156" f64)   (get_local $0)))   (get_local $1))  (local "g110159" f64))  (i32.rem_s  (get_local $0)  (get_local $1)))))))))))   (local "g110180" f64)   (i32.convert_s/f32   (i32.shl  (get_local $1)  (get_local $0))))  (local "g110181" f64)) (get_local $0)) )