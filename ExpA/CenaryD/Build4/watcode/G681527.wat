(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (f64.ne  (f32.lt  (f32.add  (get_local $0)  (if  (if  (if  (get_local $1)   (local "g681528" f32)   (i64.convert_u/f32   (i64.div_s  (get_local $0)  (local "g681529" i64))))   (if  (i32.convert_s/f32   (i32.gt_s  (get_local $1)  (i64.eq  (f32.convert_u/i64   (f32.sqrt  (get_local $1)  (get_local $0)))  (get_local $0))))   (get_local $1)   (if  (i32.convert_u/f32   (i32.shr_u  (get_local $1)  (if  (if  (get_local $1)   (f32.convert_s/i32   (f32.div  (f64.sqrt  (i32.convert_s/f64   (i32.ctz  (if  (get_local $1)   (get_local $1)   (get_local $1))  (get_local $1)))  (f32.neg  (i32.convert_s/f32   (i32.clz  (i64.popcnt  (local "g681673" i64)  (local "g681675" f32))  (get_local $1)))  (get_local $1)))  (local "g681676" i64)))   (i32.shr_u  (get_local $1)  (get_local $1)))   (get_local $1)   (get_local $1))))   (f64.floor  (get_local $0)  (i32.convert_u/f64   (i32.add  (get_local $0)  (get_local $1))))   (get_local $0)))   (get_local $1))   (get_local $0)   (get_local $1)))  (i64.convert_s/f32   (i64.rem_s  (f32.convert_u/i64   (f32.sqrt  (get_local $1)  (get_local $0)))  (get_local $1))))  (i32.convert_u/f64   (i32.lt_u  (get_local $1)  (get_local $1))))   (if  (i64.ne  (local "g681677" f64)  (get_local $0))   (i64.rotr  (get_local $1)  (i32.gt_u  (f32.convert_u/i32   (f32.neg  (get_local $0)  (i32.convert_u/f32   (i32.ne  (get_local $1)  (i64.gt_u  (if  (i32.lt_u  (get_local $1)  (get_local $0))   (get_local $0)   (if  (get_local $1)   (local "g681796" f32)   (f64.convert_s/i64   (f64.copysign  (i64.convert_s/f64   (i64.eq  (local "g681805" f64)  (get_local $1)))  (get_local $1)))))  (i64.ge_u  (f64.convert_s/i64   (f64.ceil  (i64.convert_s/f64   (i64.sub  (if  (get_local $0)   (local "g681807" i32)   (local "g681808" i32))  (f32.convert_s/i64   (f32.copysign  (get_local $0)  (f32.eq  (f32.sub  (get_local $1)  (if  (local "g681810" i64)   (f32.max  (if  (get_local $1)   (i32.convert_u/f32   (i32.lt_s  (f64.convert_u/i32   (f64.eq  (get_local $1)  (i32.convert_u/f64   (i32.lt_u  (get_local $0)  (i64.or  (i64.shl  (get_local $1)  (get_local $1))  (get_local $1))))))  (local "g681811" f32)))   (get_local $1))  (f32.neg  (get_local $1)  (get_local $0)))   (if  (get_local $1)   (local "g681812" f32)   (local "g681813" f32))))  (f32.min  (get_local $0)  (local "g681815" f32)))))))  (local "g681816" f64)))  (if  (get_local $1)   (local "g681817" f32)   (get_local $1))))))))  (i32.gt_u  (if  (local "g681818" f32)   (local "g681819" f64)   (get_local $1))  (get_local $0))))   (get_local $0))   (get_local $1))) )