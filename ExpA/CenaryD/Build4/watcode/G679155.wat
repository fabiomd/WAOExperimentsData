(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (if  (f32.min  (get_local $1)  (f64.sqrt  (get_local $1)  (local "g679157" i64)))   (i32.div_s  (f64.convert_u/i32   (f64.sqrt  (i64.convert_s/f64   (i64.ne  (i32.le_s  (f64.convert_s/i32   (f64.max  (f64.abs  (if  (f32.gt  (get_local $1)  (get_local $0))   (get_local $1)   (f32.neg  (get_local $1)  (get_local $1)))  (f32.eq  (f32.copysign  (local "g679178" i32)  (if  (f64.max  (get_local $0)  (i64.convert_u/f64   (i64.le_s  (local "g679179" i64)  (i64.shl  (f64.convert_s/i64   (f64.le  (local "g679180" f32)  (get_local $0)))  (if  (i64.gt_s  (get_local $0)  (get_local $1))   (get_local $1)   (f32.convert_s/i64   (f32.min  (local "g679183" f32)  (local "g679184" i64))))))))   (f32.min  (local "g679185" i32)  (get_local $1))   (if  (get_local $0)   (f32.eq  (get_local $1)  (if  (get_local $0)   (local "g679187" i32)   (local "g679188" f32)))   (get_local $1))))  (i32.convert_u/f32   (i32.shr_u  (get_local $0)  (local "g679189" i64)))))  (i64.convert_s/f64   (i64.lt_u  (i64.rotr  (local "g679190" f64)  (f32.convert_u/i64   (f32.add  (f64.abs  (get_local $0)  (if  (get_local $0)   (if  (f32.lt  (f32.neg  (get_local $1)  (get_local $0))  (get_local $0))   (get_local $1)   (get_local $1))   (get_local $0)))  (i64.convert_u/f32   (i64.clz  (get_local $0)  (f32.convert_s/i64   (f32.sqrt  (get_local $0)  (i32.convert_s/f32   (i32.le_s  (get_local $1)  (get_local $0))))))))))  (get_local $1)))))  (i64.rem_u  (get_local $1)  (local "g679194" f64)))  (get_local $0)))  (i64.convert_s/f64   (i64.and  (get_local $1)  (f32.convert_u/i64   (f32.nearest  (get_local $0)  (f32.sqrt  (get_local $0)  (i64.convert_s/f32   (i64.eqz  (f32.convert_s/i64   (f32.trunc  (f64.ceil  (if  (get_local $0)   (get_local $1)   (i64.convert_u/f64   (i64.mul  (i64.shr_s  (i64.div_u  (f64.convert_s/i64   (f64.ge  (get_local $0)  (f32.add  (if  (get_local $1)   (get_local $0)   (f32.floor  (local "g679200" f64)  (i64.convert_s/f32   (i64.xor  (f64.convert_s/i64   (f64.neg  (f32.ge  (get_local $1)  (get_local $0))  (local "g679222" i64)))  (get_local $1)))))  (get_local $1))))  (local "g679223" i32))  (get_local $0))  (get_local $0))))  (get_local $0))  (if  (get_local $0)   (get_local $1)   (get_local $1))))  (f64.convert_s/i64   (f64.mul  (get_local $0)  (if  (get_local $1)   (if  (i32.convert_s/f64   (i32.div_u  (get_local $0)  (if  (local "g679237" f32)   (f32.convert_s/i32   (f32.sub  (f32.sub  (get_local $1)  (get_local $0))  (f64.eq  (get_local $0)  (get_local $0))))   (if  (local "g679238" f64)   (get_local $1)   (get_local $0)))))   (local "g679239" i32)   (if  (f32.ne  (i32.convert_u/f32   (i32.div_u  (f64.convert_u/i32   (f64.max  (get_local $0)  (i32.convert_u/f64   (i32.div_s  (i32.ne  (get_local $0)  (get_local $0))  (get_local $0)))))  (get_local $0)))  (i64.convert_s/f32   (i64.xor  (if  (get_local $1)   (f64.convert_s/i64   (f64.abs  (i32.convert_s/f64   (i32.mul  (i32.eqz  (get_local $0)  (get_local $0))  (f64.convert_u/i32   (f64.sqrt  (if  (if  (if  (local "g679241" f64)   (get_local $0)   (local "g679242" i64))   (get_local $0)   (f32.trunc  (get_local $0)  (get_local $0)))   (get_local $1)   (get_local $1))  (get_local $1)))))  (get_local $0)))   (f32.convert_u/i64   (f32.div  (local "g679243" f32)  (get_local $1))))  (get_local $0))))   (get_local $1)   (local "g679244" f64)))   (i64.convert_s/f64   (i64.rem_u  (f32.convert_u/i64   (f32.trunc  (get_local $1)  (f64.ne  (get_local $0)  (get_local $0))))  (get_local $0)))))))))))))))  (get_local $0))   (local "g679249" i64))   (local "g679250" i32)   (get_local $0))) )