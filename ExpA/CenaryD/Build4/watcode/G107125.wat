(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (f64.abs  (f64.min  (get_local $0)  (get_local $1))  (i64.convert_u/f64   (i64.clz  (get_local $1)  (i64.rem_u  (i32.eqz  (i64.add  (local "g107126" f64)  (local "g107127" i32))  (local "g107128" i64))  (f32.convert_s/i64   (f32.add  (f64.min  (i64.convert_u/f64   (i64.rotr  (get_local $1)  (f64.convert_u/i64   (f64.gt  (get_local $0)  (i32.convert_u/f64   (i32.rotr  (get_local $0)  (f32.convert_s/i32   (f32.le  (if  (local "g107135" i64)   (local "g107136" f64)   (f64.div  (get_local $1)  (get_local $0)))  (i32.convert_s/f32   (i32.gt_s  (get_local $1)  (get_local $1)))))))))))  (local "g107138" i64))  (get_local $1))))))) (set_local $3  (get_local $1)) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )