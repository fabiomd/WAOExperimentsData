(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $3 i32) (f32.convert_u/i32   (f32.le  (get_local $1)  (i64.convert_u/f32   (i64.rotl  (i64.rotl  (if  (f32.convert_s/i64   (f32.max  (local "g783264" i64)  (local "g783265" f32)))   (if  (if  (i32.le_u  (if  (get_local $0)   (if  (i64.shr_s  (get_local $1)  (get_local $1))   (get_local $1)   (i32.lt_u  (get_local $0)  (f32.convert_u/i32   (f32.sqrt  (local "g783269" f32)  (f32.mul  (f32.mul  (local "g783270" f32)  (get_local $0))  (get_local $0))))))   (get_local $1))  (if  (get_local $1)   (f64.convert_s/i32   (f64.le  (get_local $0)  (f64.abs  (if  (get_local $1)   (local "g783272" f64)   (f64.gt  (if  (f64.abs  (get_local $0)  (f64.eq  (i32.convert_u/f64   (i32.shr_s  (get_local $1)  (if  (f64.convert_s/i32   (f64.neg  (local "g783273" i64)  (local "g783274" i64)))   (f32.convert_s/i32   (f32.min  (get_local $1)  (f64.ceil  (get_local $0)  (get_local $0))))   (i32.ne  (get_local $0)  (get_local $1)))))  (get_local $0)))   (f32.sqrt  (f64.trunc  (local "g783275" f32)  (get_local $1))  (get_local $1))   (get_local $0))  (local "g783285" f32)))  (i64.convert_u/f64   (i64.lt_u  (get_local $1)  (i64.eq  (get_local $1)  (get_local $1)))))))   (get_local $1)))   (local "g783315" i32)   (get_local $0))   (get_local $1)   (get_local $1))   (local "g783316" i64))  (if  (f32.convert_u/i64   (f32.copysign  (get_local $1)  (f32.copysign  (if  (f64.abs  (get_local $0)  (local "g783318" i32))   (get_local $1)   (get_local $1))  (if  (get_local $1)   (get_local $1)   (get_local $1)))))   (get_local $1)   (local "g783320" i64)))  (i64.and  (get_local $1)  (get_local $1)))))) (i32.add  (get_local $0)  (get_local $1))) )