(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (local $3 i32) (set_local $2  (get_local $0)) (if  (get_local $0)   (i64.xor  (f64.convert_u/i64   (f64.neg  (local "g106079" f64)  (local "g106080" f32)))  (i32.gt_s  (f32.convert_u/i32   (f32.sub  (f64.neg  (i32.convert_s/f64   (i32.shr_s  (get_local $1)  (get_local $1)))  (i32.convert_s/f64   (i32.lt_u  (get_local $1)  (get_local $1))))  (i32.convert_u/f32   (i32.le_u  (get_local $0)  (f64.convert_s/i32   (f64.max  (get_local $0)  (local "g106083" i64)))))))  (i64.clz  (get_local $0)  (local "g106084" f32))))   (f32.sub  (get_local $1)  (local "g106085" f32))) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )