(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (i32.eqz  (get_local $1)  (i64.rem_u  (i64.xor  (if  (f64.convert_s/i64   (f64.nearest  (local "g1073172" f64)  (local "g1073195" f32)))   (local "g1073197" i32)   (i64.rem_s  (get_local $1)  (i64.sub  (if  (local "g1073200" i32)   (get_local $1)   (f32.convert_s/i64   (f32.floor  (get_local $0)  (if  (i64.convert_u/f32   (i64.shr_s  (if  (f64.convert_s/i64   (f64.le  (get_local $1)  (local "g1073201" i64)))   (get_local $0)   (i64.lt_u  (f64.convert_s/i64   (f64.trunc  (f64.min  (i32.convert_u/f64   (i32.mul  (get_local $1)  (local "g1073204" f64)))  (f32.div  (i64.convert_s/f32   (i64.le_s  (get_local $0)  (get_local $1)))  (get_local $1)))  (get_local $0)))  (get_local $1)))  (f64.convert_u/i64   (f64.max  (get_local $0)  (get_local $0)))))   (get_local $1)   (f32.trunc  (i64.convert_u/f32   (i64.or  (f64.convert_s/i64   (f64.neg  (get_local $1)  (i32.convert_s/f64   (i32.gt_u  (get_local $1)  (i64.shl  (get_local $0)  (f64.convert_u/i64   (f64.trunc  (i32.convert_u/f64   (i32.rotr  (get_local $1)  (i64.mul  (get_local $1)  (get_local $0))))  (local "g1073208" i32))))))))  (if  (get_local $1)   (i32.le_s  (get_local $0)  (f32.convert_u/i32   (f32.sub  (get_local $1)  (get_local $0))))   (i32.ge_s  (get_local $0)  (get_local $0)))))  (f32.max  (local "g1073209" i64)  (if  (local "g1073210" i32)   (i32.convert_u/f32   (i32.rotl  (get_local $0)  (get_local $1)))   (f32.le  (get_local $1)  (get_local $1)))))))))  (get_local $1))))  (local "g1073222" i64))  (get_local $0)))   (f32.abs  (i32.convert_s/f32   (i32.lt_s  (get_local $0)  (get_local $0)))  (get_local $0))   (get_local $1))) )