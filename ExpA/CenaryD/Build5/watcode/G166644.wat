(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (get_local $1)   (f32.sub  (f64.div  (i64.convert_s/f64   (i64.shr_s  (get_local $1)  (local "g166648" f64)))  (if  (if  (f64.trunc  (f32.ne  (get_local $0)  (i32.convert_s/f32   (i32.gt_u  (i32.and  (if  (get_local $0)   (get_local $0)   (get_local $0))  (f64.convert_u/i32   (f64.copysign  (f64.div  (local "g166649" f32)  (get_local $0))  (get_local $0))))  (local "g166650" f32))))  (if  (local "g166651" f32)   (local "g166652" i64)   (get_local $0)))   (get_local $1)   (i32.convert_s/f64   (i32.mul  (i64.rotl  (i64.ne  (local "g166653" f64)  (f32.convert_s/i64   (f32.gt  (f64.lt  (f64.floor  (get_local $1)  (f32.ceil  (get_local $0)  (local "g166683" f32)))  (if  (get_local $1)   (i64.convert_u/f64   (i64.xor  (get_local $1)  (i64.rotr  (i32.ge_u  (f64.convert_s/i32   (f64.lt  (get_local $0)  (local "g166684" f64)))  (get_local $1))  (get_local $0))))   (get_local $0)))  (get_local $1))))  (get_local $1))  (local "g166685" f64))))   (get_local $0)   (get_local $0)))  (i32.convert_u/f32   (i32.or  (if  (i32.gt_s  (get_local $1)  (local "g166690" i32))   (f32.convert_u/i32   (f32.min  (local "g166691" f64)  (i64.convert_s/f32   (i64.div_u  (get_local $1)  (local "g166692" i32)))))   (i64.add  (i64.sub  (get_local $0)  (local "g166693" i64))  (if  (get_local $1)   (get_local $0)   (if  (get_local $0)   (get_local $1)   (get_local $1)))))  (i32.lt_u  (get_local $1)  (get_local $0)))))   (i32.rotl  (local "g166706" i32)  (get_local $1)))) )