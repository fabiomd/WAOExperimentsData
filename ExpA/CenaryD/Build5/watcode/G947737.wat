(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (f32.convert_s/i32   (f32.ceil  (get_local $1)  (i64.convert_u/f32   (i64.ge_s  (get_local $0)  (f64.convert_u/i64   (f64.trunc  (get_local $0)  (local "g947738" f64)))))))   (f32.convert_s/i32   (f32.lt  (f32.le  (f32.ceil  (get_local $0)  (get_local $1))  (i64.convert_s/f32   (i64.clz  (get_local $1)  (i64.lt_u  (get_local $1)  (i32.sub  (get_local $1)  (local "g947740" i64))))))  (if  (get_local $0)   (f64.ceil  (get_local $1)  (f64.ne  (f64.sub  (i32.convert_u/f64   (i32.gt_s  (i64.gt_u  (i64.clz  (local "g947744" i64)  (i32.or  (i64.div_u  (get_local $0)  (i64.popcnt  (if  (f32.convert_s/i64   (f32.ceil  (i64.convert_s/f32   (i64.lt_u  (i64.rem_s  (get_local $0)  (f32.convert_u/i64   (f32.max  (if  (local "g947747" f64)   (f32.abs  (get_local $0)  (get_local $0))   (local "g947750" i32))  (get_local $1))))  (get_local $0)))  (get_local $0)))   (get_local $1)   (local "g947751" f32))  (get_local $1)))  (f32.convert_u/i32   (f32.ge  (local "g947781" i32)  (i32.convert_u/f32   (i32.rotl  (i32.xor  (f32.convert_u/i32   (f32.abs  (local "g947782" i64)  (i32.convert_s/f32   (i32.add  (i32.eqz  (f64.convert_s/i32   (f64.min  (get_local $1)  (i64.convert_u/f64   (i64.le_u  (local "g947784" i64)  (get_local $1)))))  (get_local $0))  (get_local $1)))))  (local "g947785" f64))  (f32.convert_s/i32   (f32.nearest  (get_local $0)  (get_local $1)))))))))  (local "g947786" i32))  (get_local $1)))  (local "g947788" f32))  (if  (get_local $0)   (local "g947789" f32)   (f32.copysign  (i32.convert_u/f32   (i32.gt_s  (get_local $0)  (get_local $1)))  (get_local $0)))))   (get_local $0))))   (if  (local "g947791" f64)   (get_local $0)   (local "g947793" f32)))) )