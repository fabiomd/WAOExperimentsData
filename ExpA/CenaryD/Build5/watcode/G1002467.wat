(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.eq  (i32.convert_s/f32   (i32.sub  (i64.div_u  (get_local $1)  (if  (get_local $0)   (get_local $0)   (i32.add  (f64.convert_s/i32   (f64.div  (i64.convert_s/f64   (i64.xor  (if  (local "g1002468" i32)   (local "g1002742" f32)   (i64.le_u  (if  (get_local $1)   (if  (get_local $1)   (get_local $1)   (local "g1002743" f64))   (get_local $0))  (get_local $0)))  (get_local $0)))  (local "g1002746" i32)))  (f32.convert_u/i32   (f32.mul  (i32.convert_u/f32   (i32.rotr  (get_local $1)  (f32.convert_u/i32   (f32.add  (get_local $0)  (f64.eq  (get_local $1)  (local "g1002747" f32))))))  (if  (get_local $0)   (get_local $1)   (if  (get_local $1)   (local "g1002749" f32)   (i64.convert_s/f32   (i64.eq  (get_local $0)  (i32.ne  (f64.convert_u/i32   (f64.add  (local "g1002750" f64)  (local "g1002751" f32)))  (i32.rotl  (get_local $1)  (if  (f32.convert_u/i32   (f32.div  (f32.trunc  (if  (get_local $0)   (local "g1002754" i32)   (local "g1002755" f64))  (get_local $1))  (get_local $0)))   (f64.convert_s/i32   (f64.div  (f32.sqrt  (get_local $1)  (get_local $1))  (local "g1002908" i64)))   (if  (f32.convert_u/i32   (f32.neg  (get_local $0)  (get_local $1)))   (local "g1002909" i32)   (get_local $1))))))))))))))  (get_local $1)))  (f64.ge  (local "g1002911" f64)  (local "g1002918" i64)))) )