(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (i32.div_s  (f64.convert_u/i32   (f64.gt  (f32.sqrt  (f64.nearest  (i32.convert_s/f64   (i32.mul  (get_local $1)  (get_local $0)))  (f64.trunc  (i64.convert_s/f64   (i64.rotl  (i32.le_s  (f32.convert_u/i32   (f32.abs  (i64.convert_s/f32   (i64.sub  (local "g1012328" i64)  (i32.gt_s  (if  (get_local $1)   (get_local $1)   (get_local $1))  (get_local $0))))  (i64.convert_s/f32   (i64.le_u  (if  (f32.convert_s/i64   (f32.trunc  (get_local $1)  (f64.eq  (get_local $1)  (i64.convert_u/f64   (i64.clz  (local "g1012330" i32)  (local "g1012331" f32))))))   (get_local $1)   (if  (local "g1012332" i64)   (i64.clz  (i64.rotr  (f32.convert_s/i64   (f32.sub  (get_local $0)  (get_local $0)))  (if  (i64.rem_s  (i32.gt_s  (get_local $0)  (get_local $0))  (i32.le_s  (get_local $1)  (get_local $0)))   (if  (local "g1012334" i64)   (get_local $0)   (f32.convert_s/i64   (f32.mul  (get_local $1)  (get_local $0))))   (get_local $1)))  (get_local $0))   (get_local $1)))  (get_local $1)))))  (if  (get_local $1)   (get_local $1)   (get_local $1)))  (f32.convert_u/i64   (f32.neg  (get_local $0)  (i64.convert_s/f32   (i64.rem_s  (i64.lt_s  (get_local $0)  (local "g1012377" f64))  (get_local $1)))))))  (get_local $0)))  (local "g1012378" f32))  (get_local $0)))  (f64.convert_s/i32   (f64.neg  (get_local $1)  (get_local $0))))   (get_local $0)   (get_local $0))) )