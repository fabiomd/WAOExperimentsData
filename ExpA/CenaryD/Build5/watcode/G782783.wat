(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (local "g782784" i64)   (f64.floor  (if  (if  (if  (get_local $0)   (if  (local "g782785" i64)   (f64.sqrt  (get_local $0)  (get_local $0))   (i32.convert_u/f64   (i32.shr_u  (get_local $0)  (i32.shr_s  (get_local $0)  (i32.le_u  (if  (if  (i32.and  (i64.popcnt  (f32.convert_s/i64   (f32.div  (get_local $0)  (i64.convert_s/f32   (i64.rotr  (get_local $0)  (f64.convert_u/i64   (f64.sub  (i64.convert_u/f64   (i64.ge_s  (if  (local "g782792" i32)   (get_local $0)   (if  (local "g782793" f32)   (f64.convert_u/i64   (f64.neg  (f32.copysign  (if  (get_local $0)   (get_local $1)   (get_local $0))  (i32.convert_s/f32   (i32.div_u  (get_local $0)  (f32.convert_u/i32   (f32.ceil  (local "g782794" i64)  (get_local $0))))))  (get_local $0)))   (get_local $0)))  (get_local $0)))  (local "g782795" f32)))))))  (get_local $0))  (get_local $1))   (i64.div_s  (get_local $1)  (get_local $0))   (get_local $1))   (f64.convert_u/i32   (f64.add  (i64.convert_u/f64   (i64.shr_u  (get_local $0)  (if  (if  (get_local $0)   (f64.convert_s/i64   (f64.eq  (get_local $0)  (get_local $1)))   (get_local $1))   (local "g782796" f32)   (get_local $0))))  (get_local $0)))   (get_local $1))  (get_local $1))))))   (if  (get_local $0)   (f32.eq  (f64.mul  (get_local $1)  (i32.convert_s/f64   (i32.ne  (get_local $1)  (i32.gt_s  (local "g782799" i32)  (i32.rotr  (get_local $0)  (if  (get_local $1)   (local "g782800" i64)   (get_local $0)))))))  (get_local $1))   (f32.eq  (if  (i32.convert_s/f32   (i32.popcnt  (get_local $0)  (get_local $1)))   (if  (get_local $0)   (get_local $0)   (get_local $0))   (get_local $0))  (i64.convert_u/f32   (i64.ge_u  (local "g782801" i32)  (get_local $0))))))   (f64.sqrt  (if  (get_local $0)   (local "g782802" i32)   (get_local $0))  (f32.sqrt  (get_local $1)  (if  (f32.neg  (get_local $1)  (i32.convert_u/f32   (i32.lt_u  (f32.convert_u/i32   (f32.max  (get_local $0)  (get_local $1)))  (get_local $1))))   (get_local $1)   (if  (i64.convert_s/f32   (i64.div_u  (if  (get_local $0)   (f32.convert_u/i64   (f32.abs  (i32.convert_u/f32   (i32.ctz  (if  (f64.convert_u/i32   (f64.ne  (get_local $0)  (if  (local "g782804" f64)   (if  (get_local $0)   (local "g782818" f32)   (f64.add  (i32.convert_u/f64   (i32.ge_s  (get_local $1)  (f32.convert_u/i32   (f32.neg  (get_local $1)  (local "g782819" f32)))))  (get_local $0)))   (f32.copysign  (get_local $1)  (local "g782820" i64)))))   (f32.convert_u/i32   (f32.div  (get_local $0)  (get_local $0)))   (get_local $1))  (local "g782822" i64)))  (get_local $0)))   (i64.clz  (i64.shl  (get_local $0)  (local "g782823" f64))  (get_local $1)))  (get_local $0)))   (get_local $1)   (get_local $1)))))   (local "g782824" i64))   (f32.max  (get_local $1)  (local "g782825" f64))   (if  (local "g782830" f32)   (local "g782831" i32)   (if  (if  (get_local $1)   (i32.convert_u/f64   (i32.gt_u  (get_local $0)  (get_local $1)))   (get_local $0))   (f32.copysign  (get_local $1)  (f64.sqrt  (i32.convert_u/f64   (i32.gt_s  (get_local $1)  (if  (get_local $1)   (f64.convert_s/i32   (f64.div  (get_local $0)  (f64.sqrt  (f32.div  (get_local $1)  (if  (i32.convert_s/f32   (i32.gt_s  (get_local $1)  (local "g782877" i32)))   (local "g782878" f32)   (get_local $0)))  (get_local $1))))   (f64.convert_s/i32   (f64.abs  (i32.convert_u/f64   (i32.gt_s  (f32.convert_s/i32   (f32.trunc  (i32.convert_s/f32   (i32.le_s  (f64.convert_u/i32   (f64.copysign  (get_local $0)  (i32.convert_u/f64   (i32.rem_u  (get_local $1)  (local "g782879" i32)))))  (i64.add  (i64.or  (local "g782880" i32)  (i32.div_u  (local "g782881" f32)  (get_local $0)))  (get_local $0))))  (if  (local "g782882" i64)   (i32.convert_s/f32   (i32.or  (get_local $0)  (i32.ctz  (local "g782883" i64)  (get_local $1))))   (get_local $0))))  (get_local $0)))  (get_local $1))))))  (if  (f32.mul  (f64.max  (local "g782884" i32)  (local "g782885" i32))  (f32.sqrt  (i32.convert_s/f32   (i32.le_s  (get_local $0)  (local "g782886" f32)))  (get_local $1)))   (f32.le  (local "g782887" f32)  (get_local $1))   (i64.convert_s/f64   (i64.ctz  (get_local $0)  (get_local $1))))))   (get_local $0))))  (get_local $1))   (f32.add  (get_local $1)  (if  (if  (get_local $0)   (f32.add  (local "g782888" f32)  (get_local $0))   (local "g782889" f64))   (get_local $0)   (local "g782890" i64))))) )