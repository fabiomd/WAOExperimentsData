(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.add  (f64.mul  (f32.lt  (i32.convert_s/f32   (i32.clz  (f32.convert_s/i32   (f32.ne  (get_local $1)  (i64.convert_s/f32   (i64.xor  (i32.xor  (f32.convert_u/i32   (f32.add  (local "g860621" f32)  (local "g860622" i32)))  (f32.convert_s/i32   (f32.trunc  (if  (if  (get_local $1)   (f64.le  (local "g860624" i32)  (if  (get_local $1)   (get_local $0)   (local "g860631" i64)))   (if  (if  (local "g860632" f64)   (get_local $0)   (local "g860633" f32))   (i32.convert_u/f32   (i32.shl  (f64.convert_u/i32   (f64.nearest  (get_local $0)  (if  (if  (get_local $1)   (i64.convert_s/f64   (i64.lt_u  (f32.convert_u/i64   (f32.add  (if  (get_local $0)   (f32.div  (get_local $0)  (local "g860645" i64))   (local "g860646" f32))  (get_local $1)))  (f64.convert_s/i64   (f64.ceil  (if  (get_local $0)   (get_local $0)   (f32.add  (get_local $1)  (if  (i64.convert_u/f32   (i64.or  (get_local $0)  (i64.gt_s  (i64.gt_s  (get_local $0)  (i32.lt_u  (f32.convert_u/i32   (f32.max  (f64.nearest  (get_local $1)  (get_local $1))  (if  (i32.convert_u/f32   (i32.add  (get_local $0)  (f64.convert_u/i32   (f64.ceil  (f32.ne  (get_local $0)  (local "g860697" i32))  (get_local $0)))))   (get_local $1)   (if  (if  (get_local $0)   (local "g860698" i64)   (get_local $0))   (if  (i64.convert_u/f32   (i64.popcnt  (f64.convert_s/i64   (f64.gt  (f64.le  (i64.convert_u/f64   (i64.clz  (get_local $0)  (f32.convert_u/i64   (f32.floor  (get_local $1)  (i64.convert_u/f32   (i64.shr_s  (if  (get_local $0)   (f64.convert_s/i64   (f64.add  (get_local $0)  (local "g860787" f32)))   (if  (get_local $0)   (get_local $1)   (get_local $1)))  (get_local $0)))))))  (local "g860799" f32))  (get_local $0)))  (local "g860800" f32)))   (get_local $0)   (get_local $0))   (get_local $1)))))  (i32.add  (i32.clz  (if  (i32.add  (f64.convert_u/i32   (f64.sub  (local "g860801" i64)  (get_local $1)))  (get_local $0))   (get_local $0)   (if  (i64.div_u  (f64.convert_u/i64   (f64.floor  (get_local $0)  (get_local $0)))  (f32.convert_u/i64   (f32.floor  (get_local $1)  (local "g860809" i64))))   (get_local $1)   (i64.eq  (i32.popcnt  (if  (get_local $0)   (get_local $0)   (local "g860832" f64))  (get_local $1))  (f32.convert_s/i64   (f32.max  (get_local $0)  (get_local $0))))))  (get_local $1))  (f32.convert_s/i32   (f32.abs  (local "g860833" f32)  (local "g860835" f64))))))  (get_local $1))))   (i64.convert_s/f32   (i64.sub  (local "g860836" i32)  (get_local $1)))   (get_local $0))))  (get_local $1)))))   (if  (get_local $0)   (get_local $0)   (get_local $1)))   (get_local $1)   (get_local $0))))  (local "g860863" i32)))   (local "g860864" i32)))   (get_local $0)   (get_local $0))  (get_local $1))))  (f64.convert_s/i64   (f64.floor  (i32.convert_u/f64   (i32.rotr  (get_local $0)  (i64.eqz  (i32.gt_u  (get_local $1)  (get_local $1))  (if  (get_local $0)   (get_local $1)   (get_local $1)))))  (i32.convert_s/f64   (i32.eq  (i32.ge_s  (i32.shr_s  (get_local $1)  (get_local $1))  (get_local $1))  (get_local $1)))))))))  (i64.rem_u  (get_local $1)  (if  (get_local $1)   (get_local $1)   (if  (get_local $0)   (get_local $1)   (local "g860873" i64))))))  (get_local $0))  (i32.convert_u/f64   (i32.clz  (f32.convert_u/i32   (f32.le  (f64.sqrt  (get_local $0)  (if  (get_local $1)   (get_local $1)   (get_local $0)))  (local "g860890" f32)))  (get_local $0))))  (get_local $1))) )