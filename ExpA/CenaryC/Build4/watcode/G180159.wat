(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i64.gt_s  (if  (local "g180161" f64)   (if  (local "g180174" i64)   (f32.convert_u/i64   (f32.floor  (i32.convert_s/f32   (i32.eq  (if  (f32.convert_s/i32   (f32.sub  (if  (i64.convert_s/f32   (i64.or  (get_local $1)  (get_local $0)))   (get_local $1)   (i64.convert_u/f32   (i64.clz  (get_local $1)  (i32.le_s  (f64.convert_u/i32   (f64.abs  (get_local $1)  (local "g180205" i64)))  (local "g180206" i64)))))  (i64.convert_s/f32   (i64.clz  (f32.convert_s/i64   (f32.sqrt  (i32.convert_s/f32   (i32.lt_u  (local "g180207" f64)  (local "g180208" f64)))  (if  (if  (get_local $0)   (if  (get_local $0)   (i64.convert_s/f32   (i64.mul  (if  (get_local $0)   (get_local $0)   (local "g180209" i64))  (get_local $1)))   (if  (local "g180210" f32)   (local "g180211" f64)   (i64.convert_s/f32   (i64.ge_u  (f64.convert_u/i64   (f64.nearest  (get_local $1)  (get_local $1)))  (f32.convert_s/i64   (f32.copysign  (get_local $0)  (get_local $1)))))))   (local "g180212" f64))   (get_local $0)   (get_local $0))))  (f32.convert_s/i64   (f32.min  (get_local $0)  (f32.trunc  (get_local $0)  (local "g180213" i64))))))))   (get_local $0)   (get_local $0))  (i64.div_s  (local "g180214" i64)  (get_local $0))))  (local "g180215" i32)))   (local "g180216" i32))   (i64.rem_s  (local "g180217" i32)  (if  (local "g180218" i64)   (get_local $1)   (i32.ctz  (get_local $1)  (if  (get_local $1)   (f64.convert_u/i32   (f64.ne  (get_local $0)  (i64.convert_s/f64   (i64.rotr  (if  (get_local $0)   (local "g180223" f64)   (local "g180224" f32))  (if  (get_local $1)   (i64.clz  (get_local $0)  (i64.ge_u  (f32.convert_s/i64   (f32.gt  (if  (f32.trunc  (get_local $1)  (i32.convert_s/f32   (i32.ne  (local "g180278" i64)  (get_local $1))))   (get_local $1)   (get_local $0))  (local "g180279" f32)))  (get_local $0)))   (get_local $1))))))   (get_local $1))))))  (get_local $1))) )