(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i64.rem_u  (f64.convert_s/i64   (f64.div  (get_local $1)  (get_local $1)))  (if  (f32.convert_u/i64   (f32.floor  (get_local $1)  (get_local $0)))   (i64.eq  (f64.convert_s/i64   (f64.eq  (f64.sqrt  (local "g553285" i64)  (local "g553286" f64))  (if  (f32.le  (get_local $0)  (f32.le  (if  (if  (get_local $1)   (get_local $1)   (i32.convert_s/f32   (i32.div_s  (f64.convert_u/i32   (f64.min  (get_local $1)  (local "g553296" f32)))  (get_local $1))))   (i32.convert_u/f32   (i32.xor  (f64.convert_s/i32   (f64.ne  (get_local $0)  (get_local $0)))  (f64.convert_s/i32   (f64.eq  (i32.convert_s/f64   (i32.gt_u  (local "g553297" i64)  (f32.convert_s/i32   (f32.sub  (get_local $0)  (get_local $1)))))  (get_local $0)))))   (get_local $0))  (f64.nearest  (get_local $1)  (if  (local "g553437" f32)   (local "g553438" f64)   (local "g553439" i32)))))   (f64.eq  (get_local $1)  (i32.convert_s/f64   (i32.eqz  (if  (local "g553441" f32)   (get_local $0)   (f32.convert_s/i32   (f32.ge  (i64.convert_s/f32   (i64.ne  (get_local $1)  (get_local $1)))  (i64.convert_s/f32   (i64.add  (i32.lt_u  (i64.shr_u  (get_local $1)  (get_local $0))  (i32.clz  (i32.clz  (f64.convert_u/i32   (f64.sub  (i64.convert_u/f64   (i64.div_s  (get_local $0)  (get_local $0)))  (get_local $1)))  (local "g553442" i64))  (i32.gt_u  (get_local $0)  (f64.convert_u/i32   (f64.neg  (if  (get_local $1)   (get_local $1)   (get_local $0))  (i32.convert_s/f64   (i32.ne  (get_local $1)  (local "g553443" f64))))))))  (get_local $1))))))  (f64.convert_u/i32   (f64.ceil  (get_local $1)  (get_local $1))))))   (get_local $0))))  (local "g553444" i64))   (local "g553445" i32)))) )