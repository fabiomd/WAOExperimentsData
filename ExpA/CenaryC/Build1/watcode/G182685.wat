(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i32.div_u  (i32.gt_s  (if  (f64.convert_u/i32   (f64.le  (f64.ceil  (get_local $1)  (f32.gt  (get_local $0)  (f64.eq  (get_local $1)  (f32.mul  (i32.convert_u/f32   (i32.or  (i64.div_s  (get_local $0)  (get_local $1))  (local "g182687" f32)))  (local "g182688" f32)))))  (local "g182689" f64)))   (if  (get_local $1)   (f32.convert_s/i32   (f32.le  (i32.convert_s/f32   (i32.div_u  (local "g182690" f32)  (get_local $1)))  (get_local $1)))   (get_local $0))   (get_local $0))  (local "g182696" i64))  (f64.convert_s/i32   (f64.neg  (local "g182697" i32)  (i64.convert_s/f64   (i64.rotl  (f64.convert_u/i64   (f64.le  (get_local $1)  (local "g182698" i64)))  (f64.convert_u/i64   (f64.ge  (f64.add  (if  (get_local $1)   (f64.mul  (local "g182699" f64)  (get_local $0))   (i64.convert_u/f64   (i64.lt_s  (get_local $0)  (if  (get_local $1)   (f64.convert_u/i64   (f64.max  (local "g182700" f32)  (get_local $0)))   (f64.convert_s/i64   (f64.gt  (i64.convert_s/f64   (i64.sub  (if  (get_local $0)   (local "g182711" i32)   (f32.convert_u/i64   (f32.min  (get_local $0)  (local "g182712" i32))))  (local "g182713" i32)))  (get_local $1)))))))  (get_local $1))  (get_local $1))))))))) )