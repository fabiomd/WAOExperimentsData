(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i32.ge_u  (i32.mul  (i32.eq  (get_local $1)  (get_local $1))  (i64.rotl  (get_local $1)  (i64.popcnt  (get_local $0)  (if  (i32.lt_s  (f64.convert_u/i32   (f64.sub  (i32.convert_s/f64   (i32.or  (get_local $0)  (f64.convert_u/i32   (f64.trunc  (get_local $0)  (get_local $0)))))  (i64.convert_u/f64   (i64.shr_u  (local "g566399" i64)  (f32.convert_s/i64   (f32.sqrt  (get_local $1)  (i64.convert_u/f32   (i64.popcnt  (f32.convert_u/i64   (f32.le  (local "g566402" i32)  (f64.eq  (get_local $0)  (get_local $1))))  (get_local $0)))))))))  (get_local $0))   (get_local $1)   (i32.clz  (if  (i64.shl  (i64.shl  (local "g566406" i64)  (local "g566407" i64))  (i32.gt_s  (get_local $1)  (if  (get_local $1)   (f64.convert_s/i32   (f64.eq  (i64.convert_s/f64   (i64.popcnt  (i64.mul  (local "g566408" i32)  (i64.shr_s  (i32.lt_s  (get_local $0)  (local "g566409" i32))  (f32.convert_s/i64   (f32.ne  (get_local $1)  (get_local $0)))))  (if  (get_local $0)   (f32.convert_s/i64   (f32.ge  (local "g566410" f32)  (f64.eq  (get_local $0)  (i32.convert_s/f64   (i32.div_s  (local "g567648" i32)  (local "g567649" f32))))))   (f64.convert_u/i64   (f64.ne  (get_local $1)  (get_local $1))))))  (get_local $0)))   (local "g567650" i64))))   (f32.convert_s/i32   (f32.copysign  (f32.mul  (f64.trunc  (i32.convert_s/f64   (i32.div_s  (f64.convert_u/i32   (f64.eq  (local "g567692" i64)  (if  (get_local $1)   (local "g567693" f32)   (f32.min  (get_local $0)  (get_local $0)))))  (i64.mul  (get_local $1)  (local "g567694" i32))))  (get_local $0))  (local "g567695" f64))  (get_local $0)))   (get_local $1))  (get_local $0))))))  (local "g567730" i64))) )