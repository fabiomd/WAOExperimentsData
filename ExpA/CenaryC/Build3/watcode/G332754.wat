(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.floor  (f64.sqrt  (if  (f64.add  (local "g332756" f64)  (if  (get_local $1)   (f32.ne  (local "g332757" f64)  (get_local $0))   (i64.convert_u/f64   (i64.rotl  (i32.rotl  (get_local $1)  (get_local $0))  (f32.convert_s/i64   (f32.ge  (f64.le  (i32.convert_u/f64   (i32.div_u  (f32.convert_u/i32   (f32.lt  (get_local $1)  (if  (f32.eq  (f64.max  (get_local $0)  (get_local $1))  (local "g332768" f64))   (if  (get_local $0)   (if  (local "g371418" i32)   (f64.abs  (f32.ceil  (f32.ge  (local "g371419" f32)  (local "g371420" i64))  (get_local $0))  (get_local $1))   (if  (local "g371440" i64)   (i32.convert_u/f32   (i32.eq  (if  (get_local $0)   (get_local $1)   (local "g371441" i64))  (get_local $1)))   (get_local $0)))   (get_local $1))   (f64.sqrt  (i64.convert_s/f64   (i64.gt_s  (f64.convert_s/i64   (f64.div  (get_local $1)  (i32.convert_u/f64   (i32.gt_s  (get_local $1)  (f64.convert_u/i32   (f64.div  (f64.lt  (i64.convert_u/f64   (i64.popcnt  (f32.convert_u/i64   (f32.copysign  (get_local $1)  (f32.add  (local "g372521" i32)  (local "g372522" f64))))  (get_local $0)))  (get_local $1))  (get_local $0)))))))  (if  (local "g372523" f64)   (f32.convert_s/i64   (f32.sqrt  (get_local $0)  (i64.convert_s/f32   (i64.mul  (i64.eqz  (get_local $0)  (f32.convert_u/i64   (f32.sqrt  (get_local $0)  (f32.abs  (get_local $0)  (f64.neg  (get_local $0)  (get_local $1))))))  (i64.div_s  (get_local $1)  (get_local $1))))))   (get_local $0))))  (get_local $1)))))  (get_local $1)))  (get_local $0))  (get_local $0)))))))   (get_local $1)   (get_local $0))  (local "g372524" f32))  (local "g372525" i32))) )