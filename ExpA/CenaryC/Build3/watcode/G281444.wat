(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.min  (if  (f32.sqrt  (if  (local "g281445" f32)   (f64.sqrt  (f32.div  (get_local $1)  (get_local $0))  (if  (if  (get_local $1)   (get_local $1)   (get_local $0))   (get_local $0)   (get_local $1)))   (get_local $0))  (get_local $1))   (if  (if  (get_local $1)   (local "g281455" f64)   (get_local $0))   (if  (get_local $0)   (get_local $1)   (i32.convert_u/f32   (i32.rem_u  (get_local $0)  (get_local $1))))   (local "g281456" f64))   (f32.eq  (f32.trunc  (get_local $0)  (i32.convert_u/f32   (i32.ctz  (get_local $0)  (f32.convert_s/i32   (f32.abs  (f64.ne  (get_local $1)  (f64.max  (if  (f32.div  (local "g281457" f32)  (f32.add  (get_local $0)  (get_local $0)))   (if  (get_local $0)   (local "g281458" i64)   (get_local $1))   (i32.convert_u/f64   (i32.sub  (f32.convert_u/i32   (f32.max  (get_local $0)  (get_local $1)))  (get_local $0))))  (i32.convert_s/f64   (i32.rotl  (get_local $1)  (local "g281459" i64)))))  (i64.convert_u/f32   (i64.div_s  (get_local $1)  (local "g281460" i32))))))))  (f64.ceil  (get_local $0)  (i32.convert_s/f64   (i32.gt_s  (i64.clz  (get_local $1)  (local "g281461" i64))  (f64.convert_s/i32   (f64.sub  (i32.convert_u/f64   (i32.shr_u  (get_local $1)  (get_local $0)))  (get_local $1))))))))  (get_local $1))) )