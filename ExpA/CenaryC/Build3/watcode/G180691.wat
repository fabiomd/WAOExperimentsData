(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i64.rotl  (get_local $0)  (f64.convert_s/i64   (f64.copysign  (i32.convert_s/f64   (i32.ctz  (f32.convert_u/i32   (f32.nearest  (get_local $1)  (if  (get_local $0)   (if  (i32.convert_s/f32   (i32.lt_s  (i64.div_s  (get_local $0)  (get_local $1))  (f64.convert_s/i32   (f64.trunc  (f32.abs  (f32.le  (f64.floor  (get_local $0)  (f32.sub  (f32.sub  (i64.convert_s/f32   (i64.div_s  (i64.popcnt  (f64.convert_u/i64   (f64.gt  (local "g180887" i32)  (local "g180888" f64)))  (get_local $0))  (if  (if  (f64.convert_s/i64   (f64.lt  (local "g180889" f32)  (i64.convert_s/f64   (i64.lt_u  (get_local $1)  (i64.shr_s  (local "g180891" i64)  (f32.convert_u/i64   (f32.sqrt  (get_local $0)  (get_local $1))))))))   (get_local $0)   (i64.ge_u  (f64.convert_s/i64   (f64.sub  (i32.convert_s/f64   (i32.eq  (get_local $1)  (get_local $1)))  (get_local $1)))  (f32.convert_u/i64   (f32.max  (get_local $0)  (get_local $0)))))   (i64.ne  (local "g180892" f64)  (i64.clz  (get_local $1)  (if  (local "g180893" i32)   (get_local $0)   (f32.convert_u/i64   (f32.mul  (f32.sqrt  (get_local $1)  (if  (get_local $0)   (get_local $1)   (if  (get_local $1)   (local "g180897" i32)   (get_local $1))))  (get_local $0))))))   (get_local $1))))  (get_local $1))  (i64.convert_s/f32   (i64.lt_u  (local "g180898" i32)  (get_local $0)))))  (if  (i64.convert_u/f32   (i64.lt_u  (get_local $1)  (get_local $0)))   (get_local $1)   (get_local $1)))  (get_local $1))  (if  (f64.abs  (i64.convert_s/f64   (i64.div_u  (i64.shr_u  (get_local $1)  (get_local $1))  (i64.xor  (get_local $1)  (get_local $1))))  (get_local $0))   (get_local $1)   (get_local $1))))))   (get_local $0)   (get_local $1))   (get_local $0))))  (if  (get_local $0)   (f32.convert_u/i32   (f32.div  (get_local $0)  (get_local $0)))   (local "g180900" i64))))  (get_local $1))))) )