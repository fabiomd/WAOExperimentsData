(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $3 i32) (get_local $1) (f64.add  (get_local $0)  (i64.convert_s/f64   (i64.rem_u  (i64.shr_s  (if  (get_local $1)   (if  (i32.rotl  (get_local $1)  (get_local $0))   (i32.rem_u  (i32.div_s  (f32.convert_s/i32   (f32.div  (get_local $0)  (i32.convert_s/f32   (i32.gt_s  (get_local $0)  (f64.convert_u/i32   (f64.lt  (if  (f64.ge  (get_local $1)  (get_local $1))   (get_local $0)   (if  (if  (get_local $1)   (if  (local "g143636" f32)   (if  (i32.convert_s/f64   (i32.clz  (local "g143637" i64)  (f64.convert_u/i32   (f64.max  (get_local $0)  (get_local $1)))))   (f64.ne  (local "g143640" f32)  (get_local $0))   (get_local $1))   (f64.ne  (i64.convert_s/f64   (i64.le_s  (local "g143641" f32)  (local "g143642" i64)))  (get_local $0)))   (f32.le  (get_local $1)  (local "g143643" i64)))   (local "g143644" i64)   (get_local $0)))  (get_local $0)))))))  (local "g143645" i64))  (get_local $0))   (if  (local "g143646" i32)   (local "g143647" f32)   (get_local $1)))   (f32.convert_u/i64   (f32.sub  (f64.div  (local "g143648" f32)  (f32.add  (get_local $0)  (f64.copysign  (f32.trunc  (get_local $1)  (get_local $1))  (get_local $1))))  (i64.convert_s/f32   (i64.shr_u  (get_local $0)  (local "g143649" i32))))))  (if  (local "g143650" f32)   (get_local $1)   (i32.eq  (i32.gt_u  (local "g143652" f64)  (get_local $1))  (f32.convert_u/i32   (f32.trunc  (get_local $0)  (local "g143653" i32))))))  (local "g143654" f32)))) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )