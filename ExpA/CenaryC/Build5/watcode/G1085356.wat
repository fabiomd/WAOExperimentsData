(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (get_local $0)   (i64.shr_s  (i32.eqz  (local "g1085357" f32)  (i64.eqz  (get_local $1)  (i32.ctz  (f64.convert_u/i32   (f64.le  (if  (f32.copysign  (local "g1085360" i64)  (get_local $1))   (i32.convert_s/f64   (i32.ctz  (f32.convert_s/i32   (f32.mul  (local "g1085524" f64)  (get_local $0)))  (if  (f32.convert_s/i32   (f32.le  (get_local $1)  (i32.convert_s/f32   (i32.shr_s  (get_local $0)  (get_local $0)))))   (get_local $1)   (get_local $0))))   (local "g1085526" f32))  (f32.floor  (get_local $0)  (get_local $0))))  (if  (get_local $0)   (get_local $0)   (if  (if  (get_local $0)   (i64.shr_s  (f64.convert_s/i64   (f64.min  (get_local $0)  (get_local $0)))  (i32.lt_u  (i32.eq  (get_local $0)  (get_local $0))  (f32.convert_s/i32   (f32.mul  (local "g1085530" f64)  (if  (i32.convert_u/f32   (i32.ctz  (if  (get_local $1)   (i64.sub  (i32.ctz  (get_local $1)  (local "g1085531" i32))  (get_local $1))   (local "g1085532" f64))  (get_local $0)))   (f32.ge  (get_local $1)  (i32.convert_u/f32   (i32.shr_s  (f64.convert_u/i32   (f64.eq  (get_local $1)  (get_local $0)))  (i64.clz  (get_local $0)  (f64.convert_u/i64   (f64.le  (i32.convert_u/f64   (i32.le_u  (local "g1085534" f64)  (get_local $0)))  (get_local $0)))))))   (if  (i64.convert_s/f32   (i64.rotr  (f32.convert_u/i64   (f32.nearest  (local "g1085535" f32)  (get_local $0)))  (get_local $0)))   (get_local $1)   (get_local $0)))))))   (get_local $1))   (get_local $1)   (i64.ge_s  (if  (local "g1085745" f32)   (i32.gt_s  (get_local $0)  (i32.shr_s  (local "g1085754" i64)  (get_local $1)))   (get_local $0))  (local "g1085756" f64)))))))  (i32.div_s  (get_local $0)  (local "g1085757" i32)))   (local "g1085758" i64))) )