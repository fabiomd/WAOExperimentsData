(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (local $2 i32) (get_local $1) (set_local $2  (get_local $0)) (get_local $1) (get_local $0)) )$1)))  (if  (get_local $0)   (get_local $0)   (f64.nearest  (i64.convert_s/f64   (i64.gt_u  (f32.convert_u/i64   (f32.eq  (get_local $0)  (i64.convert_u/f32   (i64.shr_u  (get_local $1)  (f64.convert_u/i64   (f64.min  (get_local $1)  (if  (get_local $1)   (get_local $0)   (get_local $1))))))))  (i32.le_s  (get_local $0)  (f64.convert_u/i32   (f64.max  (i32.convert_u/f64   (i32.ge_u  (if  (i64.eqz  (if  (get_local $1)   (i32.eqz  (i64.clz  (get_local $1)  (local "g143880" i32))  (f32.convert_u/i32   (f32.sqrt  (get_local $0)  (i32.convert_u/f32   (i32.rem_s  (if  (get_local $1)   (i32.rotr  (get_local $0)  (get_local $0))   (get_local $1))  (get_local $0))))))   (get_local $1))  (i32.gt_s  (i64.popcnt  (i64.and  (get_local $0)  (i32.clz  (i32.div_s  (get_local $0)  (get_local $1))  (i64.popcnt  (i32.rotr  (f64.convert_u/i32   (f64.lt  (if  (get_local $1)   (get_local $0)   (i32.convert_u/f64   (i32.rem_s  (get_local $0)  (get_local $1))))  (i32.convert_u/f64   (i32.ge_s  (get_local $0)  (get_local $1)))))  (if  (get_local $1)   (get_local $0)   (i64.lt_u  (get_local $0)  (get_local $1))))  (if  (i32.rem_u  (i64.le_u  (f64.convert_s/i64   (f64.mul  (get_local $0)  (f64.le  (i64.convert_s/f64   (i64.le_s  (get_local $1)  (local "g143936" f64)))  (f64.gt  (local "g143937" f64)  (get_local $1)))))  (local "g143938" i32))  (get_local $1))   (get_local $1)   (local "g143940" i64)))))  (local "g143941" i32))  (f64.convert_u/i32   (f64.add  (i64.convert_u/f64   (i64.rotr  (get_local $1)  (get_local $0)))  (get_local $0)))))   (i32.rem_s  (get_local $1)  (get_local $0))   (local "g143942" i32))  (get_local $1)))  (get_local $1))))))  (local "g143943" f64)))))) )