(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (local "g180471" i32)   (if  (local "g180472" f32)   (get_local $0)   (i32.clz  (if  (get_local $1)   (f64.convert_u/i32   (f64.eq  (get_local $1)  (local "g180473" f32)))   (f32.convert_s/i32   (f32.sqrt  (if  (get_local $0)   (if  (i64.convert_s/f32   (i64.sub  (get_local $1)  (f32.convert_u/i64   (f32.mul  (local "g180474" f64)  (get_local $1)))))   (local "g180475" i64)   (i64.convert_u/f32   (i64.ge_u  (get_local $0)  (i32.le_s  (i64.popcnt  (get_local $1)  (if  (f64.convert_s/i64   (f64.sqrt  (get_local $1)  (if  (get_local $0)   (get_local $1)   (if  (if  (get_local $0)   (i32.convert_u/f64   (i32.rotr  (get_local $1)  (get_local $0)))   (get_local $0))   (get_local $1)   (get_local $0)))))   (get_local $1)   (local "g180501" f64)))  (i64.eq  (get_local $0)  (get_local $0))))))   (get_local $0))  (get_local $1))))  (i64.mul  (get_local $0)  (f32.convert_s/i64   (f32.copysign  (f32.nearest  (get_local $1)  (f32.sqrt  (get_local $0)  (get_local $1)))  (if  (get_local $1)   (i64.convert_u/f32   (i64.rotl  (f64.convert_s/i64   (f64.add  (local "g180530" i32)  (get_local $0)))  (local "g180531" i64)))   (get_local $0)))))))   (get_local $0))) )