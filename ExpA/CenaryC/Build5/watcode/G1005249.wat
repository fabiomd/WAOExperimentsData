(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f32.ceil  (i64.convert_s/f32   (i64.clz  (f64.convert_s/i64   (f64.nearest  (i32.convert_s/f64   (i32.ge_s  (if  (if  (local "g1005250" i32)   (local "g1005251" f64)   (i64.ge_u  (if  (f64.convert_s/i64   (f64.max  (get_local $0)  (i64.convert_s/f64   (i64.mul  (get_local $0)  (i64.gt_u  (f32.convert_u/i64   (f32.nearest  (i64.convert_u/f32   (i64.rem_u  (get_local $0)  (get_local $1)))  (get_local $0)))  (get_local $0))))))   (get_local $1)   (f64.convert_s/i64   (f64.gt  (local "g1005254" i64)  (local "g1005255" f64))))  (get_local $1)))   (f64.convert_s/i32   (f64.gt  (get_local $0)  (get_local $0)))   (i32.popcnt  (if  (get_local $0)   (i64.rotl  (get_local $1)  (get_local $0))   (get_local $0))  (local "g1005258" f64)))  (get_local $1)))  (if  (i64.convert_s/f64   (i64.rotr  (local "g1005261" i64)  (i64.clz  (f32.convert_u/i64   (f32.abs  (get_local $0)  (i32.convert_s/f32   (i32.xor  (get_local $0)  (get_local $1)))))  (if  (if  (get_local $1)   (f32.convert_s/i64   (f32.sub  (if  (get_local $1)   (local "g1005262" i64)   (f32.min  (if  (get_local $0)   (local "g1005264" f32)   (local "g1005271" i64))  (get_local $0)))  (get_local $1)))   (i64.div_u  (get_local $0)  (if  (local "g1005272" i32)   (get_local $0)   (i32.and  (get_local $1)  (f64.convert_u/i32   (f64.add  (local "g1005284" f32)  (get_local $1)))))))   (i32.rotl  (if  (if  (local "g1005286" f32)   (get_local $0)   (get_local $0))   (get_local $0)   (local "g1005287" i32))  (get_local $1))   (get_local $1)))))   (get_local $1)   (if  (i64.convert_s/f64   (i64.ctz  (get_local $1)  (local "g1005288" i64)))   (get_local $0)   (local "g1005289" i64)))))  (i64.rem_u  (i64.and  (get_local $1)  (get_local $0))  (f32.convert_u/i64   (f32.max  (get_local $0)  (get_local $0))))))  (local "g1005298" f32))) )