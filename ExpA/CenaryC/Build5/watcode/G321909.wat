(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (i64.sub  (f64.convert_s/i64   (f64.lt  (local "g321910" i32)  (i64.convert_s/f64   (i64.clz  (f32.convert_u/i64   (f32.min  (f32.ge  (get_local $1)  (if  (local "g321911" f32)   (get_local $1)   (local "g321912" f64)))  (if  (if  (get_local $0)   (local "g321913" i64)   (get_local $1))   (get_local $0)   (i64.convert_u/f32   (i64.ge_s  (i32.lt_u  (f64.convert_u/i32   (f64.min  (if  (get_local $1)   (i32.convert_u/f64   (i32.or  (local "g321917" f64)  (get_local $1)))   (i64.convert_u/f64   (i64.sub  (i32.shl  (get_local $1)  (i32.le_s  (get_local $0)  (get_local $0)))  (get_local $0))))  (i64.convert_u/f64   (i64.le_u  (get_local $0)  (get_local $1)))))  (get_local $0))  (get_local $0))))))  (get_local $1)))))  (get_local $0))   (i64.lt_s  (f64.convert_u/i64   (f64.lt  (get_local $0)  (get_local $1)))  (get_local $0))   (i32.rotr  (i32.clz  (if  (i32.rem_s  (local "g321918" f64)  (i32.xor  (get_local $1)  (get_local $0)))   (f32.convert_s/i32   (f32.lt  (get_local $0)  (f64.ceil  (get_local $0)  (local "g321919" f32))))   (f64.convert_u/i32   (f64.gt  (get_local $1)  (get_local $1))))  (i32.add  (local "g321920" i64)  (i64.rotr  (get_local $0)  (if  (get_local $0)   (get_local $0)   (if  (i32.clz  (get_local $1)  (i32.div_u  (local "g321921" f32)  (get_local $0)))   (if  (if  (get_local $0)   (get_local $1)   (i64.or  (i64.clz  (if  (i32.ctz  (get_local $1)  (local "g321924" f64))   (get_local $0)   (get_local $0))  (i32.shr_u  (get_local $1)  (if  (f32.convert_s/i32   (f32.abs  (local "g321931" i64)  (if  (i32.convert_u/f32   (i32.le_u  (get_local $0)  (local "g321944" f64)))   (get_local $0)   (f64.copysign  (f32.mul  (get_local $1)  (get_local $0))  (f32.add  (local "g321946" f64)  (if  (local "g321947" f64)   (f64.abs  (get_local $1)  (get_local $1))   (get_local $1)))))))   (get_local $0)   (local "g321948" f64))))  (if  (get_local $1)   (i64.rem_s  (local "g321959" i32)  (get_local $1))   (local "g321960" i32))))   (get_local $0)   (get_local $0))   (get_local $1))))))  (f32.convert_s/i32   (f32.mul  (f32.abs  (f32.ne  (get_local $0)  (get_local $1))  (get_local $0))  (f32.eq  (i32.convert_s/f32   (i32.gt_s  (f64.convert_u/i32   (f64.trunc  (get_local $1)  (local "g321962" i64)))  (if  (f64.convert_s/i32   (f64.nearest  (get_local $0)  (local "g321963" i32)))   (if  (get_local $1)   (local "g321964" i32)   (local "g321965" i32))   (get_local $0))))  (get_local $1))))))) )