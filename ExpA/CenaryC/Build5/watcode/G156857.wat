(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.convert_u/i32   (f64.min  (get_local $1)  (f32.lt  (i32.convert_u/f32   (i32.shr_u  (i32.eq  (i64.clz  (i32.xor  (if  (local "g156858" i64)   (get_local $0)   (get_local $0))  (get_local $1))  (get_local $0))  (i32.add  (if  (i64.rem_s  (i64.ne  (if  (f32.convert_s/i64   (f32.ge  (get_local $0)  (i32.convert_u/f32   (i32.lt_s  (f32.convert_u/i32   (f32.min  (get_local $1)  (get_local $1)))  (local "g156860" i64)))))   (i64.eq  (get_local $0)  (if  (i64.popcnt  (local "g156861" i64)  (local "g156862" i32))   (get_local $0)   (local "g156868" i64)))   (if  (get_local $0)   (get_local $0)   (f32.convert_u/i64   (f32.max  (local "g156869" f64)  (get_local $0)))))  (get_local $0))  (local "g156870" i32))   (local "g156873" f32)   (get_local $0))  (f32.convert_u/i32   (f32.copysign  (get_local $1)  (f64.copysign  (if  (i64.convert_s/f64   (i64.popcnt  (get_local $0)  (get_local $1)))   (if  (get_local $0)   (i64.convert_s/f64   (i64.sub  (get_local $0)  (f64.convert_u/i64   (f64.eq  (get_local $1)  (local "g156881" i64)))))   (i64.convert_u/f64   (i64.mul  (local "g156882" i64)  (get_local $0))))   (get_local $0))  (get_local $0))))))  (local "g156883" f32)))  (i32.convert_u/f32   (i32.rotl  (get_local $0)  (i64.xor  (f32.convert_u/i64   (f32.sqrt  (local "g156884" i32)  (local "g156885" f64)))  (local "g156886" f64)))))))) )