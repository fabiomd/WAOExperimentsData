(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (if  (i64.div_s  (get_local $0)  (f32.convert_s/i64   (f32.mul  (local "g321674" f64)  (if  (if  (i32.convert_u/f32   (i32.div_s  (local "g321675" f64)  (i32.ge_u  (i32.lt_u  (i64.ne  (get_local $1)  (i32.shr_s  (get_local $0)  (i64.mul  (i32.and  (local "g321678" f32)  (get_local $0))  (i32.ge_u  (get_local $1)  (local "g321679" i64)))))  (get_local $0))  (i64.ge_u  (local "g321680" f32)  (if  (get_local $1)   (get_local $0)   (get_local $0))))))   (get_local $1)   (if  (get_local $0)   (i64.convert_s/f32   (i64.lt_s  (get_local $0)  (local "g321681" i64)))   (i64.convert_s/f32   (i64.clz  (get_local $0)  (f32.convert_u/i64   (f32.sub  (local "g321682" f32)  (local "g321683" i64)))))))   (i64.convert_u/f32   (i64.lt_s  (get_local $1)  (get_local $0)))   (get_local $1)))))   (i64.shl  (f32.convert_u/i64   (f32.ge  (f64.abs  (get_local $1)  (if  (f64.trunc  (get_local $1)  (i64.convert_u/f64   (i64.ge_u  (f32.convert_s/i64   (f32.sub  (get_local $1)  (get_local $0)))  (get_local $0))))   (i32.convert_u/f64   (i32.ge_u  (f64.convert_s/i32   (f64.ceil  (get_local $1)  (local "g321693" i32)))  (i64.le_u  (local "g321694" f32)  (if  (if  (get_local $0)   (i64.le_u  (f64.convert_s/i64   (f64.eq  (get_local $0)  (f64.div  (f32.div  (get_local $1)  (get_local $1))  (local "g321700" i32))))  (get_local $1))   (get_local $1))   (local "g321701" i32)   (get_local $1)))))   (if  (i64.convert_u/f64   (i64.ge_u  (if  (local "g321703" i32)   (f64.convert_s/i64   (f64.max  (get_local $1)  (if  (get_local $0)   (if  (get_local $0)   (f64.min  (get_local $1)  (get_local $1))   (f64.trunc  (local "g321704" i64)  (get_local $0)))   (local "g321705" f32))))   (get_local $1))  (get_local $0)))   (get_local $1)   (get_local $1))))  (local "g321706" f32)))  (get_local $1))   (local "g321707" f64))) )