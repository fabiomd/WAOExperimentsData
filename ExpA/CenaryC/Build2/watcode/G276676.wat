(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (f64.abs  (f32.eq  (i64.convert_s/f32   (i64.and  (f64.convert_u/i64   (f64.le  (i32.convert_u/f64   (i32.div_u  (local "g276678" i32)  (i64.eq  (local "g276679" f32)  (local "g276681" f32))))  (i32.convert_u/f64   (i32.ne  (get_local $1)  (get_local $0)))))  (f32.convert_s/i64   (f32.ceil  (get_local $1)  (f32.trunc  (get_local $0)  (get_local $1))))))  (f64.neg  (get_local $1)  (get_local $1)))  (f32.nearest  (local "g276683" i64)  (if  (if  (local "g276684" i32)   (i64.convert_s/f32   (i64.sub  (get_local $0)  (local "g276685" i32)))   (local "g276686" f32))   (get_local $1)   (i64.convert_s/f32   (i64.le_u  (f32.convert_s/i64   (f32.div  (i32.convert_s/f32   (i32.clz  (get_local $1)  (i64.eq  (get_local $1)  (get_local $0))))  (get_local $1)))  (f32.convert_s/i64   (f32.mul  (get_local $1)  (f64.abs  (get_local $0)  (get_local $1)))))))))) )