(module (table 0 anyfunc) (memory $0 1) (export "memory" (memory $0)) (export "sumtwo" (func $sumtwo)) (func $sumtwo (param $0 i32) (param $1 i32) (result i32)  (i64.sub  (get_local $1)  (i64.lt_u  (i32.rem_s  (f32.convert_s/i32   (f32.sqrt  (i32.convert_s/f32   (i32.le_u  (i32.rotr  (i64.lt_u  (if  (f32.convert_u/i64   (f32.nearest  (get_local $0)  (get_local $0)))   (f64.convert_u/i64   (f64.le  (get_local $1)  (local "g138576" i64)))   (local "g138577" i32))  (local "g138975" f64))  (get_local $0))  (get_local $0)))  (if  (i64.convert_s/f32   (i64.add  (f32.convert_s/i64   (f32.add  (get_local $0)  (i32.convert_s/f32   (i32.add  (if  (get_local $0)   (i32.shr_u  (local "g138977" i32)  (get_local $0))   (i64.shr_s  (i32.ne  (get_local $1)  (if  (i32.eq  (i64.lt_s  (local "g138978" i32)  (i32.clz  (local "g138979" i64)  (f32.convert_s/i32   (f32.add  (i32.convert_s/f32   (i32.and  (get_local $1)  (get_local $0)))  (get_local $1)))))  (get_local $0))   (get_local $0)   (if  (get_local $0)   (get_local $1)   (local "g138980" f64))))  (if  (f32.convert_u/i64   (f32.ne  (get_local $1)  (if  (get_local $1)   (get_local $1)   (local "g138981" f32))))   (f32.convert_u/i64   (f32.floor  (f64.abs  (f32.copysign  (i32.convert_u/f32   (i32.le_s  (local "g138982" f32)  (local "g138983" f64)))  (get_local $0))  (i64.convert_u/f64   (i64.ge_u  (if  (i64.div_u  (local "g138990" f32)  (get_local $1))   (get_local $1)   (get_local $1))  (i64.xor  (local "g138991" i64)  (i64.gt_s  (get_local $0)  (get_local $0))))))  (get_local $1)))   (if  (local "g138992" i32)   (local "g138993" f32)   (f64.convert_s/i64   (f64.nearest  (get_local $1)  (if  (f32.max  (f64.abs  (get_local $0)  (get_local $0))  (i64.convert_u/f32   (i64.or  (get_local $1)  (get_local $0))))   (local "g139011" i32)   (if  (i32.convert_s/f64   (i32.eq  (f32.convert_s/i32   (f32.ceil  (i64.convert_u/f32   (i64.shr_s  (i32.rem_u  (get_local $0)  (get_local $1))  (i64.popcnt  (local "g139016" i64)  (f32.convert_s/i64   (f32.lt  (local "g139104" f32)  (get_local $0))))))  (get_local $0)))  (get_local $1)))   (get_local $1)   (get_local $1)))))))))  (get_local $1)))))  (get_local $0)))   (get_local $0)   (i32.convert_u/f32   (i32.and  (i64.ge_s  (get_local $1)  (get_local $0))  (get_local $0))))))  (f32.convert_s/i32   (f32.copysign  (get_local $0)  (get_local $1))))  (i64.gt_s  (f32.convert_s/i64   (f32.add  (get_local $0)  (local "g139105" f32)))  (i64.clz  (f32.convert_s/i64   (f32.min  (f32.min  (get_local $0)  (get_local $0))  (f32.le  (f32.div  (get_local $0)  (i32.convert_u/f32   (i32.clz  (get_local $0)  (get_local $1))))  (get_local $1))))  (get_local $1))))) (get_local $0) (get_local $0) (if  (result i32)  (i32.lt_s  (get_local $0)  (get_local $1))  (then  (i32.add  (get_local $0)  (get_local $1)))  (else  (i32.add  (get_local $2)  (get_local $3))))) )